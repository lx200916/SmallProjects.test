<html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<head>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
<title>词汇表 - Classic RUP for SOMA</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<font face="Arial, Helvetica, sans-serif">
<dl>


<h2><a id="_GLOSSARY_ITEM_IDX1_0" name="IDX1_0">〔B〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_version" name="version">版本（version）</a></b></dt>
<dd>某个工件的变化形式；工件的后期版本一般是在初期版本的基础上进行的扩展。</dd>
<dt><b><a id="_GLOSSARY_ITEM_binding" name="binding">绑定（binding）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 通过为模板的参数提供实参而从<i><a  class="elementLink" href="#template" guid="_yXwcwNnmEdmO6L4XMImrsA" >模板</a></i>创建<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_containment_hierarchy" name="containment_hierarchy">包含分层结构（containment hierarchy）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种名称空间分层结构，由<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>和模型元素之间存在的包含关系组成。容器分层结构形成一个非循环图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_include-relationship" name="include-relationship">包含关系（include-relationship）</a></b></dt>
<dd>包含关系是从基本用例到包含用例的关系，它指定如何采用显式方式，将为包含用例定义的行为插入到为基本用例定义的行为中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_include" name="include">包含（include）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从基本用例到包含用例的一种关系，用来指定为包含用例定义的行为如何才能插入到为基本用例定义的行为中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_package" name="package">包（package） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 将元素分组的一种通用机制。包可以嵌套到其他包中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_report" name="report">报告（report）</a></b></dt>
<dd>自动生成的对一个或数个<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>的描述。报告本身并不是工件。报告在多数情况下是开发流程中的一个临时产品，它起到了传达演进系统的特定侧重面的作用。报告是对非文档工件的快照性的描述。</dd>
<dt><b><a id="_GLOSSARY_ITEM_boundary_class" name="boundary_class">边界类（boundary class）</a></b></dt>
<dd>用于为系统环境和其内部运作之间的通信建模的类。</dd>
<dt><b><a id="_GLOSSARY_ITEM_compile_time" name="compile_time">编译时（compilation time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 指在软件模块编译期间出现的事务。请参阅：<i><a  class="elementLink" href="#modeling_time" guid="_yNxaUNnmEdmO6L4XMImrsA" >建模时（modeling time）</a>、<a  class="elementLink" href="#run_time" guid="_yUefTNnmEdmO6L4XMImrsA" >运行时（run time）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_change_management" name="change_management">变更管理（change management）</a></b></dt>
<dd>控制和跟踪对<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>的变更的活动。另请参阅：<a  class="elementLink" href="#scope_management" guid="_yUxaOdnmEdmO6L4XMImrsA" >范围管理（scope management）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_change_control_board_ccb" name="change_control_board_ccb">变更控制委员会（change control board，CBD）</a></b></dt>
<dd>CCB 的作用是提供集中的控制机制，以确保妥当地考虑、授权和协调每个<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_change_request_cr" name="change_request_cr">变更请求（change request，CR）</a></b></dt>
<dd>一个通用术语，表示<i><a  class="elementLink" href="#stakeholder" guid="_yWHeDNnmEdmO6L4XMImrsA" >项目干系人</a></i>要变更<i><a  class="elementLink" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>或<i><a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a></i>的任何请求。在变更请求中记录的信息是有关当前问题、提议解决方案及其成本的起源和影响的信息。另请参阅：<i><a  class="elementLink" href="#enhancement_request" guid="_yHhBXNnmEdmO6L4XMImrsA" >改进请求（enhancement request）</a>、<a  class="elementLink" href="#defect" guid="_yFRlptnmEdmO6L4XMImrsA" >缺陷（defect）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_transformation_definition" name="transformation_definition">变换定义（transformation definition）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >KLE03</a>] 将其定义为：<blockquote> “一组变换规则，它们共同描述以源语言表示的模型如何转换成以目标语言表示的模型。” </blockquote></dd>
<dt><b><a id="_GLOSSARY_ITEM_transform" name="transform">变换（transform）</a></b></dt>
<dd>在 Rational Software Architect 用法中，主要通过元模型、模型和抽象级别对批处理进行优化的一种变换。</dd>
<dt><b><a id="_GLOSSARY_ITEM_transformation" name="transformation">变换（transformation）</a></b></dt>
<dd>通常是指从源模型生成目标模型的过程，需要遵循某组规则，还可能受某组参数和其他数据的驱动。</dd>
<dt><b><a id="_GLOSSARY_ITEM_variable" name="variable">变量（variable）</a></b></dt>
<dd>（1）数据特性在对象内的存储位置。数据特性（如数字或日期）是存储为包含对象的属性的对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_tagged_value" name="tagged_value">标注值（tagged value）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对作为“名称 － 值”对的属性的明确定义。在标注值中，名称被称为标记。有些标记已在 UML 中预定义，而其他可由用户来定义。标注值是 UML 中的三种可扩展性机制之一。请参阅：<i><a  class="elementLink" href="#constraint" guid="_yEPD2tnmEdmO6L4XMImrsA" >约束（constraint）</a>、<a  class="elementLink" href="#stereotype" guid="_yWkJ89nmEdmO6L4XMImrsA" >构造型（stereotype）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_expression" name="expression">表达式（expression）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 代表求得特定类型的值的字符串。例如，表达式“<code>(7 + 5 * 3)</code>”将求得数字类型的值。</dd>
<dt><b><a id="_GLOSSARY_ITEM_tablespace" name="tablespace">表空间（tablespace）</a></b></dt>
<dd>数据库中的一个逻辑存储单元。</dd>
<dt><b><a id="_GLOSSARY_ITEM_table" name="table">表（table）</a></b></dt>
<dd>数据库的元素，它代表关于特定实体或主题的信息的集合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_concurrent_substate" name="concurrent_substate">并行子状态（concurrent substate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML图标" width="13" height="16" /></a><i><a  class="elementLink" href="#substate" guid="_yW3E7NnmEdmO6L4XMImrsA" >子状态</a></i>可以与同一组合状态中包含的其他子状态保存在一起。请参阅：<i><a  class="elementLink" href="#composite_substate" guid="_yD8I5tnmEdmO6L4XMImrsA" >组合子状态（composite substate）</a>。</i>请对比：<i><a  class="elementLink" href="#disjoint_substate" guid="_yGUujNnmEdmO6L4XMImrsA" >互斥子状态（disjoint substate）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_concurrency" name="concurrency">并行（concurrency）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在相同的时间间隔中发生两个或多个活动。并行可以通过交替或同时执行两个或多个线程来实现。请参阅：<i><a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/thread_6EE16914.html" guid="_yYpNk9nmEdmO6L4XMImrsA">线程（thread）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_boolean_expression" name="boolean_expression">布尔表达式（boolean expression）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 求得的值为<i><a  class="elementLink" href="#boolean" guid="_x8L7FtnmEdmO6L4XMImrsA" >布尔</a></i>值的表达式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_boolean" name="boolean">布尔（boolean）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种枚举，其值为 true 和 false。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deployment_unit" name="deployment_unit">部署单元（deployment unit）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 作为一个组分配给一个进程或一个处理器的一组<i><a  class="elementLinkWithUserText" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>或<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>。分发单元可由运行时<i><a  class="elementLinkWithUserText" href="#composite_class" guid="_yDyX4tnmEdmO6L4XMImrsA" >组合</a></i>或<i><a  class="elementLinkWithUserText" href="#aggregate_class" guid="_x5pkcNnmEdmO6L4XMImrsA" >聚集</a></i>表示。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deployment_environment" name="deployment_environment">部署环境（deployment environment）</a></b></dt>
<dd>特定的硬件和软件配置实例，建立该实例的目的在于按照计划用途安装和运行已开发的软件。另请参阅：<i><a  class="elementLink" href="#test_environment" guid="_yX5mttnmEdmO6L4XMImrsA" >测试环境（test environment）</a></i>、<a  class="elementLink" href="#environment" guid="_yHqLTNnmEdmO6L4XMImrsA" >环境（environment）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deployment_view" name="deployment_view">部署视图（deployment view）</a></b></dt>
<dd>一种<i><a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图</a></i>，它描述一个或数个系统配置，以及这些配置中软件<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>（任务、模块）到计算节点的映射。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deployment_diagram" name="deployment_diagram">部署图（deployment diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示运行时处理节点以及在这些节点上活动的<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>、<i><a  class="elementLinkWithUserText" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程</a></i>和<i><a  class="elementLinkWithUserText" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>的配置的图。组件是代码单元在运行时的具体表现形式。 另请参阅：<i><a  class="elementLink" href="#component_diagram" guid="_yCcUE9nmEdmO6L4XMImrsA" >组件图（component diagram）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deployment" name="deployment">部署（deployment） </a></b></dt>
<dd>软件工程流程中的一项<i><a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a></i>，其目的在于确保将开发的系统顺利移交给用户。包括诸如培训材料和安装过程之类的<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_step" name="step">步骤（step）</a></b></dt>
<dd><a  class="elementLink" href="#content_element" guid="_N8x34B_LEdq6CKKKq4D7YA" >内容元素</a>，用于将<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>组织为工作的若干部分或子单元。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_1" name="IDX1_1">〔C〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_parameterized_element" name="parameterized_element">参数化元素（parameterized element）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 带有一个或多个未绑定参数的类的描述符。同义词：<i><a  class="elementLink" href="#template" guid="_yXwcwNnmEdmO6L4XMImrsA" >模板（template）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_parameter_connection" name="parameter_connection">参数连接（parameter connection）</a></b></dt>
<dd>通过提供属性值或者操作、方法或脚本的返回值来满足操作参数或方法参数的一种连接。参数始终是连接源。另请参阅：连接（connection）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_argument" name="argument">参数（argument）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 解析为运行时实例的参数的绑定。同义词：<i><a  class="elementLink" href="#actual_parameter" guid="_x5gag9nmEdmO6L4XMImrsA" >实参（actual parameter）</a></i>。请对比：<i><a  class="elementLink" href="#parameter" guid="_yPjjBtnmEdmO6L4XMImrsA" >参数（parameter）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_parameter" name="parameter">参数（parameter）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 变更、传递或返回的变量的规范。参数可包含名称、类型和方向。参数在操作、消息和事件中使用。同义词：<i><a  class="elementLink" href="#formal_parameter" guid="_yJmE8NnmEdmO6L4XMImrsA" >形参（formal parameter）</a></i>。请对比：<i><a  class="elementLink" href="#argument" guid="_x7cUMNnmEdmO6L4XMImrsA" >参数（argument）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_actor-generalization" name="actor-generalization">参与者泛化关系（actor-generalization）</a></b></dt>
<dd>从一个参与者类（后代）到另一个参与者类（祖先）的参与者泛化关系，表示后代将继承祖先在用例中所能担任的角色。</dd>
<dt><b><a id="_GLOSSARY_ITEM_actor_class" name="actor_class">参与者类（actor class）</a></b></dt>
<dd>定义一组参与者实例，其中每个参与者实例相对于系统而言都担任着同样的角色。</dd>
<dt><b><a id="_GLOSSARY_ITEM_actor_instance" name="actor_instance">参与者实例（actor instance）</a></b></dt>
<dd>在系统之外与系统交互的某人或某物。</dd>
<dt><b><a id="_GLOSSARY_ITEM_participates" name="participates">参与（participate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 将模型元素连接到某种关系或具体化的关系。例如：类参与关联；参与者参与用例。</dd>
<dt><b><a id="_GLOSSARY_ITEM_operating_system_process" name="operating_system_process">操作系统进程（operating system process）</a></b></dt>
<dd>类和子系统的实例在其中驻留并运行的唯一地址空间和执行环境。执行环境可分为一个或多个控制线程。另请参阅：<i><a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程（process）</a></i>和<i><a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/thread_6EE16914.html" guid="_yYpNk9nmEdmO6L4XMImrsA">线程（thread）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_action_sequence" name="action_sequence">操作序列（action sequence）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 解析为一系列先后发生的操作的表达式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_action_state" name="action_state">操作状态（action state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 表示原子操作的执行状态，通常指的是调用一个<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >运算</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_action" name="action">操作（action）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对构成计算过程抽象的可执行语句的规范。操作通常会导致系统状态发生变化，可以通过向一个对象发送消息或者修改链接或属性值来实现。</dd>
<dt><b><a id="_GLOSSARY_ITEM_operation" name="operation">操作（operation）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 可以从对象请求以实现行为的一种服务。每个操作都有一个<i><a  class="elementLink" href="#signature" guid="_yVOGLNnmEdmO6L4XMImrsA" >特征符</a></i>，用以限制可能的实参。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_scenario" name="test_scenario">测试场景（test scenario）</a></b></dt>
<dd>一个操作序列（执行条件的序列），它在测试执行环境中确定感兴趣的行为。测试场景提供一种概括操作序列的等价类的方法，其中认为这些类基于范围等特征而非特定的数据值是等价的。测试场景描述处于单个范围级别的行为，并与在该级别的一个或多个行为实例相关：例如，某个测试场景可与一个或多个用例实例相关，它还可以与跨用例的行为实例相关。请参阅：<i><a  class="elementLink" href="#scenario" guid="_yUxaM9nmEdmO6L4XMImrsA" >场景（scenario）</a>、<a  class="elementLink" href="#use-case_instance" guid="_ybBzNtnmEdmO6L4XMImrsA" >用例实例（use-case instance）</a>、<a  class="elementLink" href="#test_procedure" guid="_yYNIttnmEdmO6L4XMImrsA" >测试过程（test procedure）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_coverage" name="test_coverage">测试覆盖率（test coverage）</a></b></dt>
<dd>通常用于指代应确定或已确定的测试程度。用于度量测试范围的典型方法包括：对于给定的<i><a  class="elementLink" href="#system" guid="_yXTw0NnmEdmO6L4XMImrsA" >系统</a></i>或<i><a  class="elementLink" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>，考虑给定的一组测试对于正式规范指定的测试用例针对程度。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_idea" name="test_idea">测试构想（test idea）</a></b></dt>
<dd>一段简要陈述，用来确定某个可能有用的测试。测试构想通常提出给定测试的一个侧重面（输入、执行条件或预期结果），但常常也只是提出测试的这一个侧重面而已。测试构想不同于<i><a  class="elementLink" href="#test_case" guid="_yXwcxtnmEdmO6L4XMImrsA" >测试用例</a></i>，因为测试构想是不完整的定义，它不包含测试工作的规范，而只是测试背后的构想的本质。同义词：<i><a  class="elementLink" href="#test_requirement" guid="_yYNIudnmEdmO6L4XMImrsA" >测试需求（test requirement）</a></i>。另请参阅：<i><a  class="elementLink" href="#test_case" guid="_yXwcxtnmEdmO6L4XMImrsA" >测试用例（test case）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_procedure" name="test_procedure">测试过程（test procedure）</a></b></dt>
<dd>给定测试的过程侧重面，通常是一组详细的指令，以设置和逐步执行一个或多个给定<i><a  class="elementLinkWithUserText" href="#test_case" guid="_yXwcxtnmEdmO6L4XMImrsA" >测试用例</a></i>。测试过程可在测试场景和测试脚本中捕获。请参阅：<i><a  class="elementLink" href="#test_scenario" guid="_yYWSotnmEdmO6L4XMImrsA" >测试场景（test scenario）</a>、<a  class="elementLink" href="#test_script" guid="_yYWSpdnmEdmO6L4XMImrsA" >测试脚本（test script）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_environment" name="test_environment">测试环境（test environment）</a></b></dt>
<dd>特定的硬件和软件配置实例，建立该实例的目的在于，在已知和受控的条件下进行测试。另请参阅：<i><a  class="elementLink" href="#deployment_environment" guid="_yFkgmdnmEdmO6L4XMImrsA" >部署环境（deployment environment）</a></i>、<a  class="elementLink" href="#environment" guid="_yHqLTNnmEdmO6L4XMImrsA" >环境（environment）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_motivator" name="test_motivator">测试激发因素（test motivator）</a></b></dt>
<dd>用来激发测试的进行，使测试员开始行动，推动他们进行测试的某事物。测试激发因素有助于确定将激发测试员评估给定的可执行软件发行版的相应侧重面的事物，并使这些事物可见：作为一种泛化关系，RUP 中的测试激发因素通常代表特定的<i><a  class="elementLinkWithUserText" href="#quality_risk" guid="_ySPqo9nmEdmO6L4XMImrsA" >质量风险</a></i>，其范围控制在某个<i><a  class="elementLinkWithUserText" href="#evalution_mission" guid="_yIQoNdnmEdmO6L4XMImrsA" >评估任务</a></i>的环境中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_script" name="test_script">测试脚本（test script）</a></b></dt>
<dd>实现测试的分步指令的集合，使该测试能够执行。测试脚本可以采取记录的文本指令的形式，此形式是手动执行；也可采取计算机可读取的指令形式，此形式可使测试自动执行。请参阅：<a  class="elementLink" href="#test_scenario" guid="_yYWSotnmEdmO6L4XMImrsA" >测试场景（test scenario）</a>、<a  class="elementLink" href="#test_procedure" guid="_yYNIttnmEdmO6L4XMImrsA" >测试过程（test procedure）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_target-of-test" name="target-of-test">测试目标（target-of-test）</a></b></dt>
<dd>同义词：<i><a  class="elementLink" href="#target_test_item" guid="_yXc6xtnmEdmO6L4XMImrsA" >目标测试项（target test item）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_driver" name="test_driver">测试驱动程序（test driver）</a></b></dt>
<dd>用于调用测试的软件模块或应用程序，它通常用于提供测试数据、控制和监测执行情况，并报告测试结果。测试驱动程序对一个或多个测试的自动执行进行排序和控制。同义词：<i><a  class="elementLink" href="#test_suite" guid="_yYWSqNnmEdmO6L4XMImrsA" >测试套件（test suite）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_mission" name="test_mission">测试任务（test mission）</a></b></dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#evalution_mission" guid="_yIQoNdnmEdmO6L4XMImrsA" >评估任务（evaluation mission）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_escape" name="test_escape">测试疏忽（test escape）</a></b></dt>
<dd>在测试团队进行的检测缺陷活动期间未检测到的<i><a  class="elementLink" href="#fault" guid="_yJJZA9nmEdmO6L4XMImrsA" >故障</a></i>或<i><a  class="elementLink" href="#defect" guid="_yFRlptnmEdmO6L4XMImrsA" >缺陷</a></i>，而在后续的下游产品使用中发现了该故障或缺陷。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_suite" name="test_suite">测试套件（test suite）</a></b></dt>
<dd>一种<a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" ><i>类似于包</i></a>的工件，用来对<a  class="elementLinkWithUserText" href="#test_script" guid="_yYWSpdnmEdmO6L4XMImrsA" ><i>测试脚本</i></a>的集合进行分组，其目的在于确定测试的执行顺序，以及提供一组有用的相关的测试日志信息，从该测试日志信息中可以确定测试结果。同义词：<a  class="elementLink" href="#test_driver" guid="_yX5ms9nmEdmO6L4XMImrsA" >测试驱动程序（test driver）</a>、<i>shell 脚本（shell script）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_requirement" name="test_requirement">测试需求（test requirement）</a></b></dt>
<dd>施加于测试工作的需求，要实施和执行一个或多个测试必须满足该需求。此术语已被术语<i><a  class="elementLink" href="#test_idea" guid="_yYDXsNnmEdmO6L4XMImrsA" >测试构想</a></i>取代。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_case" name="test_case">测试用例（test case）</a></b></dt>
<dd>一组测试输入、执行条件和预期结果的规范（通常是正式的），确定它们的目的在于对<i><a  class="elementLink" href="#target_test_item" guid="_yXc6xtnmEdmO6L4XMImrsA" >目标测试项</a></i>的某个特定侧重面进行评估。测试用例与<i><a  class="elementLink" href="#test_idea" guid="_yYDXsNnmEdmO6L4XMImrsA" >测试构想</a></i>不同，因为测试用例是格式更完整的测试规范，它描述测试用例所产生的测试需要做什么。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_oracle" name="test_oracle">测试预测（test oracle）</a></b></dt>
<dd>一种用来预测是否能通过测试的策略。测试预测包括从中可以观察到测试输出的介质，以及用来解释介质所展示的内容的技术。它提供了一种方法，借助该方法可以针对预期结果来评估观察到的结果。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test_cycle" name="test_cycle">测试周期（test cycle）</a></b></dt>
<dd>测试活动的一个时段，其中包含测试的执行和评估。在以下两个时刻之间的时间跨度：第一，验收软件<a  class="elementLink" href="#build" guid="_x8VsFtnmEdmO6L4XMImrsA" >工作版本</a>进入<a  class="elementLink" href="#test_environment" guid="_yX5mttnmEdmO6L4XMImrsA" >测试环境</a>中，此时工作版本可用于独立测试；第二，对该工作版本的测试活动的当前时段结束。虽然迭代可以不包含任何测试周期，也可以包含多个测试周期，但大部分迭代将至少包含一个测试周期。</dd>
<dt><b><a id="_GLOSSARY_ITEM_test" name="test">测试（test）</a></b></dt>
<dd>(1) 软件工程流程中的一项<i><a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a></i>，其目的在于集成和测试系统。</dd>
<dt><b><a id="_GLOSSARY_ITEM_layer" name="layer">层（layer）</a></b></dt>
<dd>对模型中同一抽象级别的<i><a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>进行分组的一种特定方式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_product_champion" name="product_champion">产品推介人（product champion）</a></b></dt>
<dd>负责产品<i><a  class="elementLink" href="#vision" guid="_yboQKdnmEdmO6L4XMImrsA" >远景</a></i>的高层人物，他在开发团队和<i><a  class="elementLink" href="#customer" guid="_yE05s9nmEdmO6L4XMImrsA" >客户</a></i>之间充当推介人的角色。</dd>
<dt><b><a id="_GLOSSARY_ITEM_product-line_architecture" name="product-line_architecture">产品线体系结构（product-line architecture）</a></b></dt>
<dd>定义元素类型、它们的交互方式，以及产品功能映射到这些元素的方式。它还可能会进一步对体系结构元素的一些实例进行定义。该术语一般用来指组织或公司内部的一套产品。另请参阅：[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >HOF99</a>]。</dd>
<dt><b><a id="_GLOSSARY_ITEM_product_requirements_document_prd" name="product_requirements_document_prd">产品需求文档（product requirements document，PRD）</a></b></dt>
<dd>对产品（系统）、其预期用途以及所提供的<i><a  class="elementLinkWithUserText" href="#feature" guid="_yJTKANnmEdmO6L4XMImrsA" >特性</a></i>集的高级描述。</dd>
<dt><b><a id="_GLOSSARY_ITEM_product" name="product">产品（product）</a></b></dt>
<dd>作为开发结果的软件，以及一些关联的<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>（文档、发行介质、培训材料）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_scenario" name="scenario">场景（scenario）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对行为举例说明的特定的操作序列。场景可用来举例说明一个或多个用例实例的交互或执行。请参阅：<i><a  class="elementLink" href="#interaction" guid="_yLPDs9nmEdmO6L4XMImrsA" >交互（interaction）</a></i>、<i><a  class="elementLink" href="#test_scenario" guid="_yYWSotnmEdmO6L4XMImrsA" >测试场景（test scenario）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_supertype" name="supertype">超类型（supertype）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在泛化关系中，对另一种类型（子类型）的泛化。请参阅：<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>。请对比：<i><a  class="elementLink" href="#subtype" guid="_yXA15dnmEdmO6L4XMImrsA" >子类型（subtype）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_superclass" name="superclass">超类（superclass）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在泛化关系中，对另一个类（子类）的泛化。请参阅：<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>。请对比：<i><a  class="elementLink" href="#subclass" guid="_yW3E5tnmEdmO6L4XMImrsA" >子类（subclass）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_hyperlinks" name="hyperlinks">超链接（hyperlink）</a></b></dt>
<dd>Web 页上的区域，点击后即可连接到该页的其他区域或其他 Web 页。</dd>
<dt><b><a id="_GLOSSARY_ITEM_hypertext_markup_language_html" name="hypertext_markup_language_html">超文本标记语言（hypertext markup language，HTML）</a></b></dt>
<dd>用于构建万维网上的超文本文档的基本语言。它在基本的、纯 ASCII 文本文档中使用。但一经 Netscape 之类的 Web 浏览器解释（称为呈现），该文档即可显示格式化的文本、颜色、各种字体、图形图像、特殊效果、链接到其他 Internet 位置的超文本跳转，以及信息表格。</dd>
<dt><b><a id="_GLOSSARY_ITEM_hypertext" name="hypertext">超文本（hypertext）</a></b></dt>
<dd>具有指向其他文本的隐藏链接的文档中的文本。使用鼠标单击超文本词语即可转至相应链接指向的文本。在 Windows 帮助程序和 CD 百科全书中使用超文本，可跳转到位于同一文档的其他位置上的有关参考信息。不过，超文本的奇妙之处是在于：它能够通过 Web 上的 HTTP 链接到世界上的任何 Web 文档。当然，要在 Web 上遨游世界还需单击鼠标。</dd>
<dt><b><a id="_GLOSSARY_ITEM_outcome" name="outcome">成果（outcome）</a></b></dt>
<dd><p>     <!--StartFragment-->主要描述作为结果或状态的无形<a  class="elementLink"     href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>。成果还可用来表示非正式的工作产品。<!--EndFragment--> </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_persistent_object" name="persistent_object">持久对象（persistent object）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在创建对象的进程或线程消亡后仍然存在的对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_abstract_class" name="abstract_class">抽象类（abstract class）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>的一种，它提供一组子类的共有行为，但自身不是设计来拥有实例。抽象类表示一个概念，从中派生的类代表对这一概念的实施。另请参阅：<i><a  class="elementLink" href="#base_class" guid="_x75AINnmEdmO6L4XMImrsA" >基类（base class）</a></i>。请对比：<i><a  class="elementLink" href="#concrete_class" guid="_yEFS1tnmEdmO6L4XMImrsA" >具体类（concrete class）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_abstract" name="abstract">抽象（abstract）</a></b></dt>
<dd>属于或关于没有实际目的或意图的抽象主体。不是应用的或实际的；只是理论的。被视为不是具体存在的。请对比：<i><a  class="elementLink" href="#concrete" guid="_yEFS09nmEdmO6L4XMImrsA" >具体（concrete）</a></i>。请参阅：<i><a  class="elementLink" href="#abstract_class" guid="_x4BMw9nmEdmO6L4XMImrsA" >抽象类（abstract class）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_abstraction" name="abstraction">抽象（abstraction）</a></b></dt>
<dd>对<i><a  class="elementLink" href="#view" guid="_ybefJtnmEdmO6L4XMImrsA" >视图</a></i>或<i><a  class="elementLink" href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>的创建，其中忽略了不必要的细节，以便将注意力集中于感兴趣的一组特定细节</dd>
<dt><b><a id="_GLOSSARY_ITEM_preliminary_design_review_pdr" name="preliminary_design_review_pdr">初步设计复审（preliminary design review，PDR）</a></b></dt>
<dd>在瀑布式生命周期中，体系结构设计完成时所进行的主要复审。</dd>
<dt><b><a id="_GLOSSARY_ITEM_processor" name="processor">处理器（processor）</a></b></dt>
<dd>一类能够运行一个或多个进程的节点。通常，它需要具备计算能力、内存、输入输出设备等。另请参阅：<a  class="elementLink" href="#node" guid="_yOXQN9nmEdmO6L4XMImrsA" >节点（node）</a>、<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程（process）</a>和<i><a  class="elementLink" href="#device" guid="_yGUugNnmEdmO6L4XMImrsA" >设备（device）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_trigger_database" name="trigger_database">触发器（数据库）（trigger）</a></b></dt>
<dd>与数据库相关联的代码，它使数据库执行特定的一项或一组操作。</dd>
<dt><b><a id="_GLOSSARY_ITEM_trigger" name="trigger">触发器（trigger）</a></b></dt>
<dd>除了初始 <a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标 " width="13" height="16" /></a> <i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >转换</a></i>外，<a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标 " width="13" height="16" /></a> <i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>中的所有行为均通过一个对象接口上事件的到达来触发的。所以，触发器就是定义上述事件的，一旦这些事件到达，接口就使转移发生。触发器与触发事件预期要到达的接口相关联。而且，转移可以有多个触发器，这样满足任何一个触发器的事件均会使转移发生。</dd>
<dt><b><a id="_GLOSSARY_ITEM_widget" name="widget">窗口小部件（Widget）</a></b></dt>
<dd>在此环境中，它是一个可以置于窗口中的组件的通用术语，例如：按钮、滚动条、标签、列表框、菜单或复选框。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stored_procedure" name="stored_procedure">存储过程（stored procedure）</a></b></dt>
<dd>与数据库关联的代码或脚本的功能单元。</dd>
<dt><b><a id="_GLOSSARY_ITEM_repository" name="repository">存储库（repository）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 工作产品（工件）的输出在流程制定期间的存储位置，例如需求、结果（也就是度量）、对象模型、接口和实施。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stub" name="stub">存根（stub）</a></b></dt>
<dd>具备测试功能的组件。存根可以是一个纯粹的“哑模块”，只返回一些预定义的值，也可以“模拟”一个更复杂的行为。</dd>
<dt><b><a id="_GLOSSARY_ITEM_access_modifier" name="access_modifier">存取修饰符（access modifier）</a></b></dt>
<dd>对类、方法或属性进行访问控制的关键字。Java 中的存取权限可以是公有、私有、保护和包装（默认）。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_2" name="IDX1_2">〔D〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_proxy" name="proxy">代理（proxy）</a></b></dt>
<dd>不同网络之间的一种应用程序网关，可用于特定的网络应用程序（如 FTP 的 Telnet）。例如，防火墙的代理 Telnet 服务器会执行用户验证，然后让信息流通过代理，就好象代理根本不存在。这种功能是在防火墙中（而不是在客户机工作站上）执行的，因而会增加防火墙的负载。请与 SOCKS 作比较。</dd>
<dt><b><a id="_GLOSSARY_ITEM_idiom" name="idiom">代码模式（Idiom）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >BUS96</a>] 如下定义代码模式： <blockquote> “代码模式是一种特定于编程语言的低级模式。代码模式描述如何利用给定语言的特性来实施组件的特定侧重面或实施组件之间的关系。” </blockquote> 也称为“实施模式”。例如当采用 UML 表示的具体设计，并要在 Java 中实施它时，就可以为该语言重现实施模式。因而在设计和实施中都将使用代码模式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_single_inheritance" name="single_inheritance">单继承（single inheritance）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>的一种语义变化形式，其中，一种<i><a  class="elementLink" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>可以有多种<i><a  class="elementLink" href="#supertype" guid="_yXA169nmEdmO6L4XMImrsA" >超类型</a></i>。请对比：<a  class="elementLink" href="#multiple_inheritance" guid="_yN6kQNnmEdmO6L4XMImrsA" >多重继承（multiple inheritance）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_single_valued" name="single_valued">单值（single valued）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 定义了<i><a  class="elementLink" href="#multiplicity" guid="_yN6kQ9nmEdmO6L4XMImrsA" >多重性</a></i>的模型元素，当其 Multiplicity Type:: upper 属性设置为 1 时，该模型元素是单值的。“单值”一词在任何时候都与属性、参数等具有的值的个数无关，这是由于一个单值属性（例如：多重性的下限为 0）可能没有值。请对比：<i><a  class="elementLink" href="#multi-valued" guid="_yOEVQNnmEdmO6L4XMImrsA" >多值（multi-valued）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_single-byte_character_set" name="single-byte_character_set">单字节字符集（single-byte character set）</a></b></dt>
<dd>每个字符均由单字节代码表示的字符集。</dd>
<dt><b><a id="_GLOSSARY_ITEM_export" name="export">导出（export）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在<i><a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>的环境中，使元素在其所在的名称空间之外可见。请参阅：<i><a  class="elementLink" href="#visibility" guid="_yboQJtnmEdmO6L4XMImrsA" >可视性（visibility）</a>。</i>请对比：<i><a  class="elementLink" href="#export" guid="_yI2eENnmEdmO6L4XMImrsA" >导出（export）</a>[OMA]、<a  class="elementLink" href="#import" guid="_yKpN2dnmEdmO6L4XMImrsA" >导入（import）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_import-dependency" name="import-dependency">导入依赖关系（import-dependency）</a></b></dt>
<dd>设计中的一种<i><a  class="elementLinkWithUserText" href="#stereotype" guid="_yWkJ89nmEdmO6L4XMImrsA" >构造型</a></i>依赖关系，以某一<i><a  class="elementLink" href="#design_package" guid="_yF4CmdnmEdmO6L4XMImrsA" >设计包</a></i>为源，以另一设计包为目标。导入依赖关系使得目标包的公共内容可由源包引用。</dd>
<dt><b><a id="_GLOSSARY_ITEM_import" name="import">导入（import）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在<i><a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>的环境中的一种依赖关系，表明那些<i><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>可以在给定包（包含以递归方式嵌入到其中的包）中引用的包。请对比：<i><a  class="elementLink" href="#export" guid="_yI2eENnmEdmO6L4XMImrsA" >导出（export）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_equivalence_class" name="equivalence_class">等价类（equivalence class）</a></b></dt>
<dd>对相等值的一种分类方法，分在同一类的对象预期具有相似的行为。当在可行的时间内可能要进行的测试过多时，可应用此技术来帮助分析要进行的最重要的测试。同义词：<i>等价分区（equivalance partition）、<a  class="elementLink" href="#domain" guid="_yHEVYdnmEdmO6L4XMImrsA" >域（domain）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_incremental" name="incremental">递增（incremental）</a></b></dt>
<dd>一种符合迭代式开发策略的构建方式，采用此方式构建系统时，将在每次<i><a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/iteration_F234447B.html" guid="_yL1go9nmEdmO6L4XMImrsA">迭代</a></i>过程中逐渐增加更多的功能。</dd>
<dt><b><a id="_GLOSSARY_ITEM_e-business" name="e-business">电子商务（e-business）</a></b></dt>
<dd>（1）在电子媒体（例如 Internet）上发生的商业事务 </dd>
<dt><b><a id="_GLOSSARY_ITEM_palette" name="palette">调色板（palette）</a></b></dt>
<dd>请参阅：bean 调色板（beans palette）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_call_level_interface_cli" name="call_level_interface_cli">调用级接口（call level interface，CLI）</a></b></dt>
<dd>用于数据库访问的可调用 API，是嵌入式 SQL 应用程序接口的一种备选方案。与嵌入式的 SQL 不同，CLI 不需要用户预先编译或绑定，而是提供一组标准功能，用于在运行时处理 SQL 语句和有关服务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_call" name="call">调用（call）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种<i><a  class="elementLink" href="#action_state" guid="_x4UHttnmEdmO6L4XMImrsA" >操作状态</a></i>，用来调用<i><a  class="elementLink" href="#classifier" guid="_yA9GU9nmEdmO6L4XMImrsA" >分类器</a></i>上的某个<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_vertex" name="vertex">顶点（vertex）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 状态机中某个转换的源或目标。顶点既可以是状态，也可以是伪状态。请参阅：<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态（state）</a></i>、<i><a  class="elementLink" href="#pseudo-state" guid="_yR8IptnmEdmO6L4XMImrsA" >伪状态（pseudo-state）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_defining_model" name="defining_model">定义模型（defining model）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 存储库所基于的模型。任意数量的存储库都可以具有相同的定义模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_dynamic_classification" name="dynamic_classification">动态分类（dynamic classification）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>的一种语义变化形式，其中，<i><a  class="elementLink" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>可以更改<i><a  class="elementLink" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>或<i><a  class="elementLink" href="#role" guid="_yUefQNnmEdmO6L4XMImrsA" >角色</a></i>。请对比：<i><a  class="elementLink" href="#static_classification" guid="_yWaY-dnmEdmO6L4XMImrsA" >静态分类（static classification）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_dynamically_linked_library_dll" name="dynamically_linked_library_dll">动态链接库（dynamically linked library，DLL）</a></b></dt>
<dd>一种文件，它包含依附于运行时程序而非链接时（链接时是编译的最终阶段）程序的可执行代码和数据。这意味着同一个库代码块可以在数个任务之间共享，而非由每个包含它使用例程的副本的任务独享。C++ Access Builder 生成 Bean 和 C++ 包装程序，以允许 Java 程序可以访问 C++ DLL。</dd>
<dt><b><a id="_GLOSSARY_ITEM_dynamic_information" name="dynamic_information">动态信息（dynamic information）</a></b></dt>
<dd>在用户请求时创建的信息。动态信息随时间变化，因而在用户每次查看它时都将见到不同的内容。</dd>
<dt><b><a id="_GLOSSARY_ITEM_port" name="port">端口（port）</a></b></dt>
<dd>端口是<i><a  class="elementLink" href="#capsule" guid="_x9YN5dnmEdmO6L4XMImrsA" >封装体</a></i>实例的边界对象，充当消息传递的接口。端口由封装体实例“拥有”，其含义是它们随封装体一起创建，并在封装体消亡时消亡。每个端口都有一个身份和状态，且与其所属的封装体实例的身份和状态不同（其程度与任何部件与部件的容器之间的区别程度相同）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_break_point" name="break_point">断点（break point）</a></b></dt>
<dd>计算机程序中执行中断的点。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_class" name="object_class">对象类（object class）</a></b></dt>
<dd>用于定义对象属性和方法的模板。一个对象类可包含其他对象类。对象类的单个表示称为对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_flow_state" name="object_flow_state">对象流状态（object flow state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#activity_graph" guid="_x5Duk9nmEdmO6L4XMImrsA" >活动图</a></i>中的一种<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>，它表示将对象从一种状态下的操作输出传递到另一状态下的操作输入。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_model" name="object_model">对象模型（object model）</a></b></dt>
<dd>系统实施的抽象表示。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_request_broker_orb" name="object_request_broker_orb">对象请求代理（Object Request Broker，ORB）</a></b></dt>
<dd>一个 CORBA 术语，表示对象以透明的方式提出请求并从其他本地或远程对象接收响应的方法。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_lifeline" name="object_lifeline">对象生命线（object lifeline）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 序列图中表示对象存在时间段的一条线。请参阅：<i><a  class="elementLink" href="#sequence_diagram" guid="_yVEVINnmEdmO6L4XMImrsA" >序列图（sequence diagram）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object_diagram" name="object_diagram">对象图（object diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 包含<i><a  class="elementLinkWithUserText" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>及其在某时间点的关系的一种图。对象图可以看作是类图或通信图的一个特例。请参阅：<i><a  class="elementLink" href="#class_diagram" guid="_x9053NnmEdmO6L4XMImrsA" >类图（class diagram）</a>、<a  class="elementLink" href="#communication_diagram" guid="_yBjjQNnmEdmO6L4XMImrsA" >通信图（communication diagram）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_object" name="object">对象（object）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个具有明确定义的边界和标识的实体，它封装<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>和<i><a  class="elementLink" href="#behavior" guid="_x8CKE9nmEdmO6L4XMImrsA" >行为</a></i>。状态由<i><a  class="elementLinkWithUserText" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性</a></i>和<i><a  class="elementLinkWithUserText" href="#relationship" guid="_yTIbcNnmEdmO6L4XMImrsA" >关系</a></i>表示，行为由<i><a  class="elementLinkWithUserText" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>、<i><a  class="elementLinkWithUserText" href="#method" guid="_yNUuY9nmEdmO6L4XMImrsA" >方法</a></i>和<i><a  class="elementLinkWithUserText" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>表示。对象是类的一个实例。请参阅：<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类（class）</a>和<a  class="elementLink" href="#instance" guid="_yLF5w9nmEdmO6L4XMImrsA" >实例（instance）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_multiple_classification" name="multiple_classification">多重分类（multiple classification）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>的一种语义变化形式，其中，一个对象可以直接属于一个以上的类。请参阅：<i><a  class="elementLink" href="#dynamic_classification" guid="_yHNfWdnmEdmO6L4XMImrsA" >动态分类（dynamic classification）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_multiple_inheritance" name="multiple_inheritance">多重继承（multiple inheritance）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>的一种语义变化形式，其中，一种类型可以有多种<i><a  class="elementLink" href="#supertype" guid="_yXA169nmEdmO6L4XMImrsA" >超类型</a></i>。请对比：<i><a  class="elementLink" href="#single_inheritance" guid="_yVX3ItnmEdmO6L4XMImrsA" >单继承（single inheritance）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_multiplicity" name="multiplicity">多重性（multiplicity）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 用于指定某个集合可采用的允许基数的范围。可以为关联中的角色、组合中的部件、重复以及其他目的指定多重性。多重性基本上是非负整数的子集（可能是无穷子集）。请对比：<i><a  class="elementLink" href="#cardinality" guid="_x9YN69nmEdmO6L4XMImrsA" >基数（cardinality）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_multipurpose_internet_mail_extension_mime" name="multipurpose_internet_mail_extension_mime">多用途因特网邮件扩充协议（Multipurpose Internet Mail Extension，MIME）</a></b></dt>
<dd>支持文本、图像、音频和视频的邮件所遵循的 Internet 标准。</dd>
<dt><b><a id="_GLOSSARY_ITEM_n-ary_association" name="n-ary_association">多元关联关系（n-ary association）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 三个或三个以上的类之间的关联关系。关联的每个实例分别是相应类中值的一个 n 元组。请对比：<i><a  class="elementLink" href="#binary_association" guid="_x8L7ENnmEdmO6L4XMImrsA" >二元关联关系（binary association）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_multi-valued" name="multi-valued">多值（multi-valued）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 定义了<i><a  class="elementLink" href="#multiplicity" guid="_yN6kQ9nmEdmO6L4XMImrsA" >多重性</a></i>的模型元素，其 Multiplicity Type:: upper 属性设置为大于 1 的数值。术语“多值”在任何时候都与属性、参数等具有的值的个数无关。请对比：<i><a  class="elementLinkWithUserText" href="#single_valued" guid="_yVhBENnmEdmO6L4XMImrsA" >单值（single-valued）</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_3" name="IDX1_3">〔E〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_binary_association" name="binary_association">二元关联关系（binary association）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 两个<i><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>之间的关联。是<i><a  class="elementLink" href="#n-ary_association" guid="_yOOGQNnmEdmO6L4XMImrsA" >多元关联关系</a></i>的特例。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_4" name="IDX1_4">〔F〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_release_manager" name="release_manager">发布经理（release manager）</a></b></dt>
<dd>发布经理负责确保所有软件资产都已按要求进行控制并可配置为内部和外部<i><a  class="elementLinkWithUserText" href="#release" guid="_yTIbc9nmEdmO6L4XMImrsA" >发行版</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_release" name="release">发行版（release）</a></b></dt>
<dd>最终产品的一个子集，它是主要里程碑处的评估对象。发行版是产品的稳定和可执行版本，随同发行的还有要使用该发行版所必需的所有工件，如：发行说明或安装指示信息。发行版可以是内部的，也可以是外部的。内部发行版仅由开发组织使用，作为里程碑的一部分，或者用于向用户或客户进行演示。外部发行版（或交付版）是提供给用户的。发行版不必是一个完整的产品，而可以只是全过程的一个阶段性成果，它的有用性只是从工程角度来衡量的。发行版充当强制的功能，它迫使开发团队定期结束任务，从而避免“完成了 90%，还剩下 90%”这种情形的出现。另请参阅：<a  class="elementLink" href="#prototype" guid="_yR8IoNnmEdmO6L4XMImrsA" >原型（prototype）</a>、<a  class="elementLink" href="#baseline" guid="_x75AI9nmEdmO6L4XMImrsA" >基线（baseline）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_originator" name="originator">发起方（originator）</a></b></dt>
<dd>发起方是提交<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求</a></i>（CR）的任何人。标准的变更请求机制要求发起者按照变更请求的形式提供有关当前问题的信息，以及建议的解决方案。</dd>
<dt><b><a id="_GLOSSARY_ITEM_sender" name="sender">发送方（sender）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 将激励传递给接收方对象的对象。请对比：<i><a  class="elementLink" href="#receiver" guid="_yS_RgNnmEdmO6L4XMImrsA" >接收方（receiver）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_send" name="send">发送（send）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从发送方实例向接收方实例传递激励的操作。请参阅：<i><a  class="elementLink" href="#sender" guid="_yU7LNdnmEdmO6L4XMImrsA" >发送方</a>、<a  class="elementLink" href="#receiver" guid="_yS_RgNnmEdmO6L4XMImrsA" >接收方</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_generalization" name="generalization">泛化关系（generalization）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 较为一般的元素与较为特殊的元素之间的一种分类关系。较为特殊的元素除具有较为一般的元素的所有信息外，还包含附加信息。凡是可以使用较为一般元素的地方，较为特殊的元素的实例都适用。请参阅：<i><a  class="elementLink" href="#inheritance" guid="_yK8IxdnmEdmO6L4XMImrsA" >继承（inheritance）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_deserialize" name="deserialize">反序列化（deserialize）</a></b></dt>
<dd>从串行化状态构建一个对象。 另请参阅：<a  class="elementLink" href="#marshal" guid="_yNBzdtnmEdmO6L4XMImrsA" >反序列化（marshal）</a>、<a  class="elementLink" href="#resurrect" guid="_yT4CVtnmEdmO6L4XMImrsA" >反序列化（resurrect）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_marshal" name="marshal">反序列化（marshal）</a></b></dt>
<dd>同义词：<i><a  class="elementLink" href="#deserialize" guid="_yFuRnNnmEdmO6L4XMImrsA" >反序列化（deserialize）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_resurrect" name="resurrect">反序列化（resurrect）</a></b></dt>
<dd>请参阅：<i><a  class="elementLink" href="#deserialize" guid="_yFuRnNnmEdmO6L4XMImrsA" >反序列化（deserialize）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_schema_mof" name="schema_mof">范式 [MOF]（schema [MOF]）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在 MOF 的环境中，范式类似于作为<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>容器的<i><a  class="elementLink" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>。方案对应于 MOF 包。请对比：<i><a  class="elementLink" href="#metamodel" guid="_yNK9bNnmEdmO6L4XMImrsA" >元模型（metamodel）</a></i>，包对应于 MOF 包。</dd>
<dt><b><a id="_GLOSSARY_ITEM_scope_management" name="scope_management">范围管理（scope management）</a></b></dt>
<dd>根据可用的资源和时间，对可在特定的发布周期中实现的一组需求进行确定和按优先级排序的过程。此过程随着变更的不断出现贯穿整个项目的生命周期。另请参阅：<i><a  class="elementLink" href="#change_management" guid="_x9rI0tnmEdmO6L4XMImrsA" >变更管理（change management）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_method_call" name="method_call">方法调用（method call）</a></b></dt>
<dd>同义词：<a  class="elementLink" href="#message" guid="_yNK9YNnmEdmO6L4XMImrsA" >消息（message）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_method_content" name="method_content">方法内容（Method Content）</a></b></dt>
<dd><p>     <!--StartFragment-->描述一般的 <a  class="elementLink"     href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 方法概念和<a  class="elementLink"     href="#guidance" guid="_83ttAB_NEdq6CKKKq4D7YA" >指导信息</a>，这些方法概念和指导信息提供分步说明，描述如何实现特定目标<em>而不考虑这些步骤在流程生命周期中的位置</em>。<!--EndFragment-->UMA 将方法内容和方法内容在<a  class="elementLink"     href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>中的应用分离。 </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_method" name="method">方法（method）</a></b></dt>
<dd>（1）完成某项任务的常规和系统方式；完成任务或实现目标所遵循的详尽的、组织有序的计划或步骤。</dd>
<dt><b><a id="_GLOSSARY_ITEM_firewall" name="firewall">防火墙（firewall）</a></b></dt>
<dd>一台计算机或一个可编程设备，上面装有可根据确定规则限制进出信息的相关软件。通常施行控制的依据是始发地址或目标地址，以及 TCP/IP 端口号。</dd>
<dt><b><a id="_GLOSSARY_ITEM_demilitarized_zone_dmz" name="demilitarized_zone_dmz">非保护区（demilitarized zone，DMZ）</a></b></dt>
<dd>此术语目前在业界常用于描述子网，通常用于某些 Web 服务器，这些 Web 服务器受防火墙保护以免于外部 Internet 和公司内部网络的破坏。</dd>
<dt><b><a id="_GLOSSARY_ITEM_soap-opera_testing" name="soap-opera_testing">肥皂剧测试（soap-opera testing）</a></b></dt>
<dd>一种通过对戏剧性的和夸张的用法场景进行推理，而定义测试场景的技术。与电视上的肥皂剧类似，这些场景反映“现实生活”，但在描述系统使用的戏剧化实例时要对这些场景进行精简和夸张。当与有经验的用户协作进行定义时，肥皂剧有助于快速地测试系统的许多功能方面。而且，由于它们不是直接与系统正式规范相关，也不是直接与系统特性相关，因此它们在展示重要的却又常出乎意料的问题方面具有很高的成功率。此术语以及关联技术的定义是由 Hans Buwalda 在他本人为客户提供测试咨询的过程中开发的。</dd>
<dt><b><a id="_GLOSSARY_ITEM_distributed_processing" name="distributed_processing">分布式处理（distributed processing）</a></b></dt>
<dd>分发式处理是一种应用程序或系统模型，功能和数据在其中的分发跨越连接到 LAN 或 WAN 的多个计算资源。请参阅：<a  class="elementLinkWithUserText" href="#client_server" guid="_yBQBQ9nmEdmO6L4XMImrsA" ><i>客户机／服务器计算（client/server computing）</i></a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_distributed_computing_environment_dce" name="distributed_computing_environment_dce">分布式计算环境（Distributed Computing Environment，DCE）</a></b></dt>
<dd>分发式计算环境。计算机行业用作分发式计算的实际标准。DCE 允许不同供应商的计算机在网络中透明通信并共享资源，例如计算能力、文件、打印机和其他对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_classifier" name="classifier">分类器（classifier）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 描述行为和结构特性的机制。分类器包括<i><a  class="elementLinkWithUserText" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口</a>、<a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a>、<a  class="elementLinkWithUserText" href="#datatype" guid="_yE-qs9nmEdmO6L4XMImrsA" >数据类型</a></i>和<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_partition" name="partition">分区（partition）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> (1) <i><a  class="elementLinkWithUserText" href="#activity_graph" guid="_x5Duk9nmEdmO6L4XMImrsA" >活动图</a></i>：活动图中用于组织操作职责的部分。另请参阅：<i><a  class="elementLink" href="#swimlane" guid="_yXJ_09nmEdmO6L4XMImrsA" >泳道（swimlane）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_mechanism" name="analysis_mechanism">分析机制（analysis mechanism）</a></b></dt>
<dd>在<i><a  class="elementLink" href="#design" guid="_yF4CkNnmEdmO6L4XMImrsA" >设计</a></i>流程早期，在发现期间，确定关键<i><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>及<i><a  class="elementLinkWithUserText" href="#subsystem" guid="_yXA14tnmEdmO6L4XMImrsA" >子系统</a></i>时所使用的一种体系结构机制。通常，分析机制以独立于实施的方式捕获解决方案的主要侧重面。分析机制通常与问题域无关，它实际上是“计算机科学”概念。它们为与域有关的<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>或<i><a  class="elementLink" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>提供特定行为，或对应于类和／或组件之间合作的实施。它们可以作为<i><a  class="elementLink" href="#framework" guid="_yJmE89nmEdmO6L4XMImrsA" >框架</a></i>实施。例如处理持久性的机制、处理进程间通信的机制、处理错误或故障的机制、处理通知的机制以及处理消息传递的机制等等。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_class" name="analysis_class">分析类（analysis class）</a></b></dt>
<dd>设计元素在系统中所担任<i><a  class="elementLink" href="#role" guid="_yUefQNnmEdmO6L4XMImrsA" >角色</a></i>的抽象，通常在<i><a  class="elementLink" href="#use-case_realization" guid="_ybLkM9nmEdmO6L4XMImrsA" >用例实现</a></i>的环境中。 分析类可以提供若干个角色的抽象，表示这些角色的共有行为。分析类通常会演变为一个或多个设计元素，例如设计<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>和／或<i><a  class="elementLink" href="#capsule" guid="_x9YN5dnmEdmO6L4XMImrsA" >封装体</a></i>，或设计<i><a  class="elementLink" href="#subsystem" guid="_yXA14tnmEdmO6L4XMImrsA" >子系统</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_pattern" name="analysis_pattern">分析模式（analysis pattern）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >FOW97a</a>] 将分析模式描述为： <blockquote>     “[...] 概念组，它们代表业务建模中的常用结构。它可以只与一个领域相关，也可以跨越许多领域。” </blockquote> 因此，在本条参考中，对域这个词的解释确实涉及对模式的描述。不把 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >FOW97a</a>] 中的这种定义扩展到业务建模之外的其他领域是毫无道理的。 从分析模式的另一方面来说，分析模式是一个抽象的概念化模板，用于（像任何模式一样通过绑定）分析模型中的实例化，分析模型随后要在设计中进一步改进。分析模式的规模可大可小，尽管在 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >FOW97a</a>] 中说明的分析模式均为中等规模，并由此可构成所有应用程序的分析模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_model" name="analysis_model">分析模型（analysis model）</a></b></dt>
<dd>一种<i><a  class="elementLink" href="#object_model" guid="_yOqyOdnmEdmO6L4XMImrsA" >对象模型</a></i>，它充当<i><a  class="elementLink" href="#design_model" guid="_yF4CltnmEdmO6L4XMImrsA" >设计模型</a></i>的抽象，提供<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>实现的初始定义。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analyst" name="analyst">分析人员（analyst）</a></b></dt>
<dd>项目团队成员，负责获取并解释项目干系人需求，并将这些需要传达给整个团队。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_time" name="analysis_time">分析时（analysis time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 指软件开发流程的分析阶段中出现的某些事物。请参阅：<i><a  class="elementLink" href="#design_time" guid="_yGBMg9nmEdmO6L4XMImrsA" >设计时（design time）</a>、<a  class="elementLink" href="#modeling_time" guid="_yNxaUNnmEdmO6L4XMImrsA" >建模时（modeling time）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis_design" name="analysis_design">分析与设计（analysis &amp; design）</a></b></dt>
<dd>一些（一般性）活动，在这些活动中制定战略和战术决策，以满足系统必需的功能和质量<i><a  class="elementLink" href="#requirements" guid="_yTlHZdnmEdmO6L4XMImrsA" >需求</a></i>。另请参阅：<i><a  class="elementLink" href="#design_model" guid="_yF4CltnmEdmO6L4XMImrsA" >设计模型（design model）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_analysis" name="analysis">分析（analysis）</a></b></dt>
<dd>软件开发流程的一部分，其主要目的在于为问题<i><a  class="elementLink" href="#domain" guid="_yHEVYdnmEdmO6L4XMImrsA" >域</a></i>设计一个模型。分析侧重于做什么，而设计则侧重于怎样做。请参阅：<i><a  class="elementLink" href="#design" guid="_yF4CkNnmEdmO6L4XMImrsA" >设计（design）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_risk" name="risk">风险（risk）</a></b></dt>
<dd>很可能阻碍主里程碑成功的持续发生或即将来临的事项。</dd>
<dt><b><a id="_GLOSSARY_ITEM_capsule_role" name="capsule_role">封装体角色（capsule role）</a></b></dt>
<dd>封装体角色代表<i><a  class="elementLink" href="#capsule" guid="_x9YN5dnmEdmO6L4XMImrsA" >封装体</a></i>类型的规范，这些角色可以在封装体的协作或结构中占据一个特定的位置。封装体角色由容器封装体牢牢地拥有，不能独立于容器封装体存在。封装体的结构分解通常包括通过连接器连接的协作封装体角色的网络。</dd>
<dt><b><a id="_GLOSSARY_ITEM_capsule" name="capsule">封装体（capsule）</a></b></dt>
<dd>一种特定<i><a  class="elementLink" href="#design_pattern" guid="_yF4CnNnmEdmO6L4XMImrsA" >设计模式</a></i>，代表系统中封装的控制<i><a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/thread_6EE16914.html" guid="_yYpNk9nmEdmO6L4XMImrsA">线程</a></i>。封装体是一种<i><a  class="elementLinkWithUserText" href="#stereotype" guid="_yWkJ89nmEdmO6L4XMImrsA" >构造型</a></i><i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>，具有特定的必需以及受限<i><a  class="elementLinkWithUserText" href="#association" guid="_x7mFNtnmEdmO6L4XMImrsA" >关联</a></i>和<i><a  class="elementLinkWithUserText" href="#property" guid="_yRWSxtnmEdmO6L4XMImrsA" >属性</a></i>的集合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_encapsulation" name="encapsulation">封装（encapsulation）</a></b></dt>
<dd>对于软件对象的内部表示的隐藏。该对象提供了查询并操纵数据而无需暴露其基础结构的接口。</dd>
<dt><b><a id="_GLOSSARY_ITEM_server" name="server">服务器（server）</a></b></dt>
<dd>为网络中的多个用户或工作站提供服务的计算机，例如：文件服务器、打印服务器或邮件服务器。</dd>
<dt><b><a id="_GLOSSARY_ITEM_parent" name="parent">父代（parent）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>中，对另一个元素（子元素）的泛化关系。请参阅：<i><a  class="elementLink" href="#subclass" guid="_yW3E5tnmEdmO6L4XMImrsA" >子类（subclass）</a></i>、<i><a  class="elementLink" href="#subtype" guid="_yXA15dnmEdmO6L4XMImrsA" >子类型（subtype）</a></i>。请对比：<i><a  class="elementLink" href="#child" guid="_x9051tnmEdmO6L4XMImrsA" >子代（child）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_parent_class" name="parent_class">父类（parent class）</a></b></dt>
<dd>供其他 Bean 或类从中继承数据和／或方法的类。</dd>
<dt><b><a id="_GLOSSARY_ITEM_enclosed_document" name="enclosed_document">附带文档（enclosed document）</a></b></dt>
<dd>可由另一文档包含的<i><a  class="elementLink" href="#document" guid="_yG6kY9nmEdmO6L4XMImrsA" >文档</a></i>，以将一组文档组合为一个整体；包含的文档和单个附件被看作独立的<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_review" name="review">复审（review）</a></b></dt>
<dd>复审是一项团队活动，实施目的是为了发现一组<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>中潜在的缺陷并评估质量。</dd>
<dt><b><a id="_GLOSSARY_ITEM_reuse" name="reuse">复用（reuse） </a></b></dt>
<dd>进一步使用或重复使用某个<i><a  class="elementLink" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_5" name="IDX1_5">〔G〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_enhancement_request" name="enhancement_request">改进请求（enhancement request）</a></b></dt>
<dd>一类<i><a  class="elementLink" href="#stakeholder_request" guid="_yWQn89nmEdmO6L4XMImrsA" >项目干系人请求</a></i>，它指定系统的新<i><a  class="elementLink" href="#feature" guid="_yJTKANnmEdmO6L4XMImrsA" >特性</a></i>或功能。另请参阅：<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求（change request）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_refinement" name="refinement">改进（refinement）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 表示在一定的详细程度上对已经指定的某事物进行更为全面说明的一种关系。例如：设计类是对分析类的改进。</dd>
<dt><b><a id="_GLOSSARY_ITEM_advanced_program-to-program_communication" name="advanced_program-to-program_communication">高级程序间通信（advanced program-to-program communication）</a></b></dt>
<dd>一种通信协议，主要用于 IBM 环境。</dd>
<dt><b><a id="_GLOSSARY_ITEM_trace" name="trace">跟踪（trace）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种依赖关系，表示两个元素之间的历史或流程关系，这两个元素代表同一概念，但没有特定的相互派生规则。</dd>
<dt><b><a id="_GLOSSARY_ITEM_factory" name="factory">工厂（factory）</a></b></dt>
<dd>(1) 常用于指代特定的一组<i><a  class="elementLinkWithUserText" href="#design_pattern" guid="_yF4CnNnmEdmO6L4XMImrsA" >设计模式</a></i>的术语，这些设计模式处理<i><a  class="elementLinkWithUserText" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>的创建或实例化。示例包括<i>抽象工厂</i>和<i>工厂方法</i> [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >GAM94</a>]</dd>
<dt><b><a id="_GLOSSARY_ITEM_common_object_request_broker_architecture_corba" name="common_object_request_broker_architecture_corba">公共对象请求代理体系结构（Common Object Request Broker Architecture，CORBA）</a></b></dt>
<dd>一种中间件规范，它确定提供基础结构的软件总线，即对象请求代理程序（ORB）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_common_gateway_interface_cgi" name="common_gateway_interface_cgi">公共网关接口（Common Gateway Interface，CGI）</a></b></dt>
<dd>一种标准协议，Web 服务器通过该协议可以执行在服务器上运行的程序。CGI 程序是响应来自 Web 客户机浏览器的请求而执行的。</dd>
<dt><b><a id="_GLOSSARY_ITEM_attack" name="attack">攻击（attack）</a></b></dt>
<dd>一种有计划有方法的尝试，其目的在于中断或以其他方式阻止正在运行的计算机软件程序的正常操作。攻击计算机软件的性质通常是恶意的，其概念来源于软件黑客（A.K.A 刽客（cracker））团体，该团体的成员使用各种技术来攻击软件系统，通常绕过安全性软件并非法进入主机系统。已发现的攻击技术的例子包括缓冲区溢出、服务的拒绝、资源约束和特洛伊木马。此术语随后已被计算机软件测试专业人员采用，用在讨论可能发现软件系统中潜在错误的方法中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_artifact_guidelines" name="artifact_guidelines">工件指南（artifact guidelines）</a></b></dt>
<dd>有关如何处理特定<i><a  class="elementLink" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>的描述，包括如何创建和修订工件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_artifact" name="artifact">工件（artifact）</a></b></dt>
<dd>具有以下特征的正式<a  class="elementLink" href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>： <div style="MARGIN-LEFT: 2em"> 1) 由<a  class="elementLink"     href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>生成、修改或使用，<br /> 2) 定义职责区域<br />      3）受到版本控制。</div> <p> 工件可具有多种形式，包括<i><a  class="elementLink"     href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>、<i><a  class="elementLink"     href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>或<i><a  class="elementLink"     href="#document" guid="_yG6kY9nmEdmO6L4XMImrsA" >文档</a></i>。 </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_tool_mentor" name="tool_mentor">工具向导（tool mentor）</a></b></dt>
<dd><a  class="elementLink" href="#guidance" guid="_83ttAB_NEdq6CKKKq4D7YA" >指导信息</a>，说明如何使用特定软件工具来执行<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>或<a  class="elementLink" href="#step" guid="_BqZloB_eEdqAHrsQ7-jSbw" >步骤</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_capability_pattern" name="capability_pattern">功能模式（capability pattern）</a></b></dt>
<dd><p>     <!--StartFragment-->功能模式是一种特殊的流程，它描述可复用的<a      class="elementLink"     href="#activity" guid="_yoVhMB_IEdq6CKKKq4D7YA" >活动</a>集群。功能模式说明并传达了关于受关注的关键区域（例如规程）的流程知识，并且可以由流程执行人员直接用来指导他的工作。<!--EndFragment--> </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_supplier" name="supplier">供应端（supplier）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种分类器，它提供可供其他分类器调用的服务。请对比：<i><a  class="elementLink" href="#client" guid="_yBQBQNnmEdmO6L4XMImrsA" >客户端（client）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_build" name="build">工作版本（build）</a></b></dt>
<dd>工作版本既可以是系统的可操作版本，也可以是展示要在最终产品中提供的部分功能的部分系统。</dd>
<dt><b><a id="_GLOSSARY_ITEM_work_product" name="work_product">工作产品（work product）</a></b></dt>
<dd><a  class="elementLink" href="#content_element" guid="_N8x34B_LEdq6CKKKq4D7YA" >内容元素</a>，表示由<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>使用、产生或修改的所有内容。</dd>
<dt><b><a id="_GLOSSARY_ITEM_workspace" name="workspace">工作空间（workspace）</a></b></dt>
<dd>工作区包含当前正在进行开发的所有代码，即当前版本。工作空间还包含标准的 Java 类库和其他类库。</dd>
<dt><b><a id="_GLOSSARY_ITEM_workstation" name="workstation">工作站（workstation）</a></b></dt>
<dd>操作员使用的输入／输出设备的配置。一个终端或个人计算机，通常连接到主机或网络，用户可在其上执行应用程序。</dd>
<dt><b><a id="_GLOSSARY_ITEM_constructor" name="constructor">构造方法（constructor）</a></b></dt>
<dd>与类同名的特殊类方法，用于构建并可能初始化和它同属一种类的对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stereotype" name="stereotype">构造型（stereotype）</a></b></dt>
<dd>元素的元分类。构造型具有语义含义，可以为每个特定的构造型值指定语义含义。请查看 RUP 中工件的“UML 表示”属性，以找到建议在 RUP 中使用的预定义构造型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_construction" name="construction">构造（construction）</a></b></dt>
<dd>Unified Process 的第三个阶段，在该阶段中，软件从可执行体系结构基线前进到可准备向用户群转移的这一点上。</dd>
<dt><b><a id="_GLOSSARY_ITEM_fault_model" name="fault_model">故障模型（fault model）</a></b></dt>
<dd>一种用于测试计算机软件的模型，它使用似乎可能发生的<i><a  class="elementLink" href="#fault" guid="_yJJZA9nmEdmO6L4XMImrsA" >故障</a></i>的概念作为其基础，并提供测试方法来显露故障。好的故障模型可提供以下内容：故障或根本原因的定义、故障可能产生的可观察<i><a  class="elementLinkWithUserText" href="#failure" guid="_yJJZANnmEdmO6L4XMImrsA" >失败</a></i>的讨论、用于显露故障的测试技术以及相应测试数据的概要文件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_fault" name="fault">故障（fault）</a></b></dt>
<dd>一种意外情况，它导致实施模型中的组件<i><a  class="elementLink" href="#failure" guid="_yJJZANnmEdmO6L4XMImrsA" >失败</a></i>，而无法执行其必需的行为。故障是导致一个或多个<i><a  class="elementLinkWithUserText" href="#defect" guid="_yFRlptnmEdmO6L4XMImrsA" >缺陷</a></i>的根本原因，这些缺陷通过观察一个或多个<i><a  class="elementLinkWithUserText" href="#failure" guid="_yJJZANnmEdmO6L4XMImrsA" >失败</a></i>来确定。</dd>
<dt><b><a id="_GLOSSARY_ITEM_key_mechanism" name="key_mechanism">关键机制（key mechanism）</a></b></dt>
<dd>对如何在系统中各元素间的交互模式方面实现<i><a  class="elementLink" href="#architectural_pattern" guid="_x7JZRtnmEdmO6L4XMImrsA" >体系结构模式</a></i>的描述。通常在<i><a  class="elementLink" href="#software_architecture" guid="_yV0jFdnmEdmO6L4XMImrsA" >软件体系结构</a></i>文档中提供。</dd>
<dt><b><a id="_GLOSSARY_ITEM_critical_design_review_cdr" name="critical_design_review_cdr">关键设计复审（critical design review，CDR）</a></b></dt>
<dd>在瀑布式生命周期中，详细设计完成时进行的主要复审。</dd>
<dt><b><a id="_GLOSSARY_ITEM_keyword" name="keyword">关键字（keyword）</a></b></dt>
<dd>为 Java 保留的预定义字（例如 return），此类字不能用作标识符。</dd>
<dt><b><a id="_GLOSSARY_ITEM_association_end" name="association_end">关联关系端（association end）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 关联的端点，它连接关联和<i><a  class="elementLink" href="#classifier" guid="_yA9GU9nmEdmO6L4XMImrsA" >分类器</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_association_class" name="association_class">关联类（association class）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 具有<i><a  class="elementLink" href="#association" guid="_x7mFNtnmEdmO6L4XMImrsA" >关联</a></i>及<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>属性的模型元素。关联类可被视作一种还具有类属性的关联，或是一种还具有关联属性的类。</dd>
<dt><b><a id="_GLOSSARY_ITEM_association" name="association">关联（association）</a></b></dt>
<dd>一种关系，用于对多个实例间的双向语义连接进行建模。</dd>
<dt><b><a id="_GLOSSARY_ITEM_relationship" name="relationship">关系（relationship）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 模型元素之间的语义连接。关系的示例包括<i><a  class="elementLinkWithUserText" href="#association" guid="_x7mFNtnmEdmO6L4XMImrsA" >关联</a></i>和<i><a  class="elementLinkWithUserText" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_management" name="management">管理（management）</a></b></dt>
<dd>软件工程流程中的一项<i><a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a></i>，其目的在于计划和管理开发项目。</dd>
<dt><b><a id="_GLOSSARY_ITEM_discipline" name="discipline">规程（discipline）</a></b></dt>
<dd>相关<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>的集合，这些任务定义主要的“关注区域”。在软件工程中，规程包括：<i>业务建模、需求、分析与设计、实施、测试、部署、配置与变更管理、项目管理以及环境</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_specification" name="specification">规范（specification）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对某事物是什么或做什么的一种公开描述。请对比：<i><a  class="elementLink" href="#implementation" guid="_yKfc09nmEdmO6L4XMImrsA" >实施（implementation）</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_6" name="IDX1_6">〔H〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_postcondition" name="postcondition">后置条件（postcondition）</a></b></dt>
<dd>一种文本描述，用于定义用例结束时对系统的约束。</dd>
<dt><b><a id="_GLOSSARY_ITEM_disjoint_substate" name="disjoint_substate">互斥子状态（disjoint substate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 无法与同一组合状态中包含的其他子状态同时保存的<i><a  class="elementLink" href="#substate" guid="_yW3E7NnmEdmO6L4XMImrsA" >子状态</a></i>。请参阅：<i><a  class="elementLink" href="#composite_state" guid="_yD8I49nmEdmO6L4XMImrsA" >组合状态</a></i>。请对比：<i><a  class="elementLink" href="#concurrent_substate" guid="_yEFS3NnmEdmO6L4XMImrsA" >并行子状态（concurrent substate）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_context" name="context">环境（context）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一组相关的<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >建模元素</a></i>的视图，用于特殊用途，例如指定<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_environment" name="environment">环境（environment）</a></b></dt>
<dd>(1) 软件工程流程中的一项<i><a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a></i>，其目的在于定义和管理在其中进行系统开发的环境。包括流程描述、<i><a  class="elementLink" href="#configuration_management" guid="_yEPD19nmEdmO6L4XMImrsA" >配置管理</a></i>和开发工具。</dd>
<dt><b><a id="_GLOSSARY_ITEM_conversational" name="conversational">会话式（conversational）</a></b></dt>
<dd>一种通信模型，两个分发式的应用程序在其中以会话形式交换信息。通常一个应用程序先开始（或分配）会话，发送一些数据，然后允许另一个应用程序发送一些数据。两个应用程序继续交替进行会话，直到一方决定结束为止（取消分配）。会话模型是同步的通信形式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_active_object" name="active_object">活动对象（active object）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 拥有<i><a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/thread_6EE16914.html" guid="_yYpNk9nmEdmO6L4XMImrsA">线程</a></i>并可以启动控制活动的<i><a  class="elementLink" href="#object" guid="_yOhBNNnmEdmO6L4XMImrsA" >对象</a></i>。<i><a  class="elementLink" href="#active_class" guid="_x4dRotnmEdmO6L4XMImrsA" >活动类</a></i>的实例。</dd>
<dt><b><a id="_GLOSSARY_ITEM_active_server_page" name="active_server_page">活动服务器页面（active server page）</a></b></dt>
<dd>活动服务器页（Microsoft(R)），一种技术机制，用于向 Web 应用程序提供动态行为。</dd>
<dt><b><a id="_GLOSSARY_ITEM_active_class" name="active_class">活动类（active class）</a></b></dt>
<dd>表示系统中的控制线程的<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activity_graph" name="activity_graph">活动图（activity graph）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>的特例，用于为涉及一个或多个<i><a  class="elementLinkWithUserText" href="#classifier" guid="_yA9GU9nmEdmO6L4XMImrsA" >分类器</a></i>的流程建模。请对比：<i><a  class="elementLink" href="#statechart_diagram" guid="_yWaY89nmEdmO6L4XMImrsA" >状态表图（statechart diagram）</a></i>。同义词：<i>活动图（activity diagram）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activity_detail_diagram" name="activity_detail_diagram">活动细节图（activity detail diagram）</a></b></dt>
<dd>描述<a  class="elementLink" href="#activity" guid="_yoVhMB_IEdq6CKKKq4D7YA" >活动</a>活动范围内的所有<a  class="elementLink" href="#breakdown_element" guid="_cvdpEB_LEdq6CKKKq4D7YA" >流程元素</a>的图（角色<a  class="elementLink" href="#descriptor" guid="_7rS6AB_JEdq6CKKKq4D7YA" >描述符</a>、工作产品描述符、任务描述符和子活动）。此图还描述任务描述符（或活动）和工作产品描述符之间的输入／输出关系，以及角色描述符和任务描述符之间的职责关系。活动细节图用来提供活动的完整摘要，从而使活动更易于理解。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activity" name="activity">活动（activity）</a></b></dt>
<dd><a  class="elementLink" href="#breakdown_element" guid="_cvdpEB_LEdq6CKKKq4D7YA" >流程元素</a>，支持相关流程元素（如<a  class="elementLink" href="#descriptor" guid="_7rS6AB_JEdq6CKKKq4D7YA" >描述符</a>和子活动）的嵌套和逻辑分组，从而形成<a  class="elementLink" href="#breakdown_structure" guid="_95LCoB_QEdq6CKKKq4D7YA" >细分结构</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_earned_value" name="earned_value">获得值（earned value）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >MSP97</a>] 将其定义为： <blockquote> “到目前为止所执行工作的度量值。获得的值使用原始的估计和最新的进度来显示实际发生的成本是否符合预算，以及任务对于基线计划是超前还是滞后。” </blockquote></dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_7" name="IDX1_7">〔J〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_primitive_type" name="primitive_type">基本类型（primitive type）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 预定义的无任何子结构的基本数据类型，例如整型或字符串。</dd>
<dt><b><a id="_GLOSSARY_ITEM_fire" name="fire">击发（fire）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 执行状态转换。请参阅：<i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >转换（transition）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activation" name="activation">激活（activation）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#action" guid="_x4UHsNnmEdmO6L4XMImrsA" >操作</a></i>的执行。</dd>
<dt><b><a id="_GLOSSARY_ITEM_base_class" name="base_class">基类（base class）</a></b></dt>
<dd>从中派生出其他类或 Bean 的类。基类本身也可派生自另一个基类。请参阅：<a  class="elementLink" href="#abstract_class" guid="_x4BMw9nmEdmO6L4XMImrsA" >抽象类（abstract class）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stimulus" name="stimulus">激励（stimulus）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 信息从一个实例到另一个实例的传递，例如发出<i><a  class="elementLink" href="#signal" guid="_yVOGKdnmEdmO6L4XMImrsA" >信号</a></i>或调用<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>。信号的接收通常被视为<i><a  class="elementLink" href="#event" guid="_yIjjItnmEdmO6L4XMImrsA" >事件</a></i>。请参阅：<i><a  class="elementLink" href="#message" guid="_yNK9YNnmEdmO6L4XMImrsA" >消息（message）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_cardinality" name="cardinality">基数（cardinality）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 集合中的元素数量。请对比：<i><a  class="elementLink" href="#multiplicity" guid="_yN6kQ9nmEdmO6L4XMImrsA" >多重性（multiplicity）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_baseline" name="baseline">基线（baseline）</a></b></dt>
<dd>已通过复审和核准的<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>发行版，由此构成进一步演进或开发的公认基础，并且只能通过正式过程（例如<i><a  class="elementLink" href="#change_management" guid="_x9rI0tnmEdmO6L4XMImrsA" >变更管理</a></i>和<i><a  class="elementLinkWithUserText" href="#configuration_management" guid="_yEPD19nmEdmO6L4XMImrsA" >配置控制</a></i>）进行变更。</dd>
<dt><b><a id="_GLOSSARY_ITEM_fault-based_testing" name="fault-based_testing">基于故障的测试（fault-based testing）</a></b></dt>
<dd>一种用于测试计算机软件的技术，它使用测试方法和测试数据来展示一组预定义的<i><a  class="elementLinkWithUserText" href="#fault" guid="_yJJZA9nmEdmO6L4XMImrsA" >故障</a></i>是否存在。例如，要展示软件是否正确处理被零除的故障，测试数据应包含零。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activity-based_costing" name="activity-based_costing">基于活动的成本核算（activity-based costing）</a></b></dt>
<dd>衡量活动、资源和成本对象的成本和性能的一套方法。资源先分配给活动，然后活动再根据成本对象的使用分配给成本对象。基于活动的成本核算承认成本驱动因素与活动之间的因果关系。</dd>
<dt><b><a id="_GLOSSARY_ITEM_activity-based_management" name="activity-based_management">基于活动的管理（activity-based management）</a></b></dt>
<dd>一门综合性的学科，其重点在于通过活动管理来实现客户价值和公司利润。它利用<i><a  class="elementLink" href="#activity-based_costing" guid="_x459ldnmEdmO6L4XMImrsA" >基于活动的成本核算</a></i>作为主要信息源。</dd>
<dt><b><a id="_GLOSSARY_ITEM_component-based_development_cbd" name="component-based_development_cbd">基于组件的开发（component-based development，CBD）</a></b></dt>
<dd>对由<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>汇编的软件密集型系统的创建和部署，以及这类组件的开发和收成。</dd>
<dt><b><a id="_GLOSSARY_ITEM_mechanism" name="mechanism">机制（mechanism）</a></b></dt>
<dd>机制是<i><a  class="elementLink" href="#pattern" guid="_yPtUDNnmEdmO6L4XMImrsA" >模式</a></i>的一个实例。要成为特定模型中的协作，机制还需进一步的改进。因而可将机制看作是在单一环境中针对重复出现问题的一种特定解决方案。可以说机制与模式是相适应或相符的。任何协作均可称作机制，但该术语常保留来指能够解决软件应用中频繁出现问题的那些协作。例如，为处理永久性问题以及可应用模式提供解决方案的协作。在分析和设计中，可以将机制的概念用作“占位符”。举例来说，如果已确定需要永久性，分析人员和设计人员就可以说将要使用永久性机制，这样就可使问题得到系统且一致的解决。</dd>
<dt><b><a id="_GLOSSARY_ITEM_integration-build_plan" name="integration-build_plan">集成构建计划（integration-build plan）</a></b></dt>
<dd>定义在特定的迭代中实施和集成组件所要采用的顺序。通常包含在<i>迭代计划</i>中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_integrated_development_environment_ide" name="integrated_development_environment_ide">集成开发环境（integrated development environment，IDE）</a></b></dt>
<dd>包含编辑器、编译器和调试器的软件程序。</dd>
<dt><b><a id="_GLOSSARY_ITEM_integration" name="integration">集成（integration）</a></b></dt>
<dd>将单独的软件组件组合成可执行的整体的软件开发活动。</dd>
<dt><b><a id="_GLOSSARY_ITEM_inheritance" name="inheritance">继承（inheritance）</a></b></dt>
<dd>一种使泛化关系成为可能的机制，也是从单个类片段中创建完整类描述所采用的机制。</dd>
<dt><b><a id="_GLOSSARY_ITEM_timing_mark" name="timing_mark">记时标记（timing mark）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 用于表示事件发生或消息出现的时间。可在约束中使用时间标记。</dd>
<dt><b><a id="_GLOSSARY_ITEM_technical_authority" name="technical_authority">技术权威（technical authority）</a></b></dt>
<dd>项目的技术权威具有相当水平的技术专长，因此他们有权裁定是否需要实施变更请求以及如何实施。技术权威将依据<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求</a></i>来确定变更任务，并估计完成工作任务所需的工作量。</dd>
<dt><b><a id="_GLOSSARY_ITEM_computation_independent_model" name="computation_independent_model">计算无关模型（computation independent model）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >OMG03</a>] 如下定义此术语：<blockquote> “计算无关模型是从计算无关的角度观察到的系统的视图。CIM 不显示系统结构的详细信息。CIM 有时称为领域模型和词汇表，在所讨论领域的规范中使用的该领域的从业人员很熟悉它。” </blockquote></dd>
<dt><b><a id="_GLOSSARY_ITEM_checkpoints" name="checkpoints">检查点（checkpoint）</a></b></dt>
<dd>特定类型的组织良好的<i><a  class="elementLinkWithUserText" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>应该具有的一组条件。也可采用应作肯定回答的问题形式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_inspection" name="inspection">检查（inspection）</a></b></dt>
<dd>一种正式的评估技术，此技术中一些<i><a  class="elementLink" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>（模型、文档、软件）由发起方之外的个人或小组审核，旨在检测故障、找出开发标准的违背情况以及其他问题。</dd>
<dt><b><a id="_GLOSSARY_ITEM_modeling_time" name="modeling_time">建模时（modeling time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 指在软件开发流程的建模阶段中出现的事物。它包括分析期和设计期。用法说明：当讨论对象系统时，要注意区分建模期事项和运行时事项，这一点通常很重要。请参阅：<i><a  class="elementLink" href="#analysis_time" guid="_x613RtnmEdmO6L4XMImrsA" >分析时（analysis time）</a>、<a  class="elementLink" href="#design_time" guid="_yGBMg9nmEdmO6L4XMImrsA" >设计时（design time）</a>。</i>请对比：<i><a  class="elementLink" href="#run_time" guid="_yUefTNnmEdmO6L4XMImrsA" >运行时（run time）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_modeling_conventions" name="modeling_conventions">建模约定（modeling convention）</a></b></dt>
<dd>表述概念的方式，以及项目团队管理层已决定对建模语言施加的限制。这些限制即指一些声明，如：“不要在子系统之间使用继承。”；“不要在用例模型中使用扩展或包含关联关系。”；“不要在 C++ 中使用友元构造。”. 在<i>软件体系结构文档</i>中提供。</dd>
<dt><b><a id="_GLOSSARY_ITEM_delivery_process" name="delivery_process">交付流程（delivery process）</a></b></dt>
<dd>交付流程是一种特殊的<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>，它描述用于执行特定项目类型完整的、集成的方法。<!--StartFragment-->它提供了一个完整的生命周期模型，其中按方法内容的细分结构进行了详细的描述。</dd>
<dt><b><a id="_GLOSSARY_ITEM_interaction_diagram" name="interaction_diagram">交互图（interaction diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个通用术语，用来表示强调对象交互的某些类型的图。这些交互图包括：<i><a  class="elementLinkWithUserText" href="#communication_diagram" guid="_yBjjQNnmEdmO6L4XMImrsA" >通信图</a>和<a  class="elementLinkWithUserText" href="#sequence_diagram" guid="_yVEVINnmEdmO6L4XMImrsA" >序列图</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_interaction" name="interaction">交互（interaction） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 说明如何在<i><a  class="elementLinkWithUserText" href="#instance" guid="_yLF5w9nmEdmO6L4XMImrsA" >实例</a></i>间发送激励来执行特定任务。交互是在协作环境中定义的。请参阅：<i><a  class="elementLink" href="#collaboration" guid="_yBZyRtnmEdmO6L4XMImrsA" >协作（collaboration）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_role" name="role">角色（role）</a></b></dt>
<dd>在业务机构环境中一个人或作为一个团队合作的一批人的行为和职责的定义。</dd>
<dt><b><a id="_GLOSSARY_ITEM_node" name="node">节点（node） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 节点是一种代表运行时计算资源的分类器。一般来说，节点至少要具备内存，通常还具有处理能力。运行时对象和组件可驻留在节点上。</dd>
<dt><b><a id="_GLOSSARY_ITEM_structured_class" name="structured_class">结构化类（structured class）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 它是一个具有内部结构的分类器（例如，类或组件）。它包含一组由连接器连接起来的部件。可以强制使得外部环境和其内部部件之间的交互穿越某个端口。</dd>
<dt><b><a id="_GLOSSARY_ITEM_structural_model_aspect" name="structural_model_aspect">结构模型侧重面（structural model aspect）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 重点强调系统中对象的结构的模型侧重面，包括<i><a  class="elementLinkWithUserText" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>、<i><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>、<i><a  class="elementLinkWithUserText" href="#relationship" guid="_yTIbcNnmEdmO6L4XMImrsA" >关系</a></i>、<i><a  class="elementLinkWithUserText" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性</a></i>和<i><a  class="elementLinkWithUserText" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_structural_feature" name="structural_feature">结构特性（structural feature）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>的静态特性，例如<i><a  class="elementLink" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_result" name="result">结果（result）</a></b></dt>
<dd>输出的同义词。另请参阅：<a  class="elementLink" href="#deliverable" guid="_yFbWoNnmEdmO6L4XMImrsA" >可交付成果（deliverable）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_interface_inheritance" name="interface_inheritance">接口继承（interface inheritance）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 较为特殊元素的接口的继承。不包含对实施的继承。请对比：<i><a  class="elementLink" href="#implementation_inheritance" guid="_yKfc1tnmEdmO6L4XMImrsA" >实施继承（implementation inheritance）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_interface" name="interface">接口（interface）</a></b></dt>
<dd><i><a  class="elementLinkWithUserText" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>的集合，这些操作用来指定<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>或<i><a  class="elementLink" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>的服务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_receiver" name="receiver">接收方（receiver）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 处理从发送方对象传递来的激励的对象。请对比：<i><a  class="elementLink" href="#sender" guid="_yU7LNdnmEdmO6L4XMImrsA" >发送方（sender）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_receive" name="receive">接收（receive）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对从发送方实例传递的激励进行处理。请参阅：<i><a  class="elementLink" href="#sender" guid="_yU7LNdnmEdmO6L4XMImrsA" >发送方（sender）</a>、<a  class="elementLink" href="#receiver" guid="_yS_RgNnmEdmO6L4XMImrsA" >接收方（receiver）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_reception" name="reception">接收（reception）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个声明，表明分类器已准备好对信号的接收作出反应。</dd>
<dt><b><a id="_GLOSSARY_ITEM_entry_action" name="entry_action">进入操作（entry action）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在进入<i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>中的某个<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>时执行的操作，与进入该状态所进行的转换无关。</dd>
<dt><b><a id="_GLOSSARY_ITEM_elaboration" name="elaboration">精化（elaboration）</a></b></dt>
<dd>流程的第二阶段，在该阶段中对产品<i><a  class="elementLink" href="#vision" guid="_yboQKdnmEdmO6L4XMImrsA" >远景</a></i>及其<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>进行定义。</dd>
<dt><b><a id="_GLOSSARY_ITEM_guard_condition" name="guard_condition">警戒条件（guard condition）</a></b></dt>
<dd>为了使关联的<i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >转换</a></i>能够<i><a  class="elementLink" href="#fire" guid="_yJTKDNnmEdmO6L4XMImrsA" >击发</a></i>所必需满足的一种条件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_static_classification" name="static_classification">静态分类（static classification）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>的一种语义变化形式，其中，对象不能变更类型，也不能变更角色。请对比：<i><a  class="elementLink" href="#dynamic_classification" guid="_yHNfWdnmEdmO6L4XMImrsA" >动态分类（dynamic classification）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_static_work_product" name="static_work_product">静态工作产品</a></b></dt>
<dd><a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>使用但不改动的<a  class="elementLink" href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_static_information" name="static_information">静态信息（static information）</a></b></dt>
<dd>每次访问时都不会改变的 Web 文件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_race_condition" name="race_condition">竞争状态（race condition）</a></b></dt>
<dd>两个或更多的独立任务同时尝试访问和修改同一状态信息时出现的状态。这种状态可能导致系统行为的不一致，因此，这是并行系统设计中的根本问题。</dd>
<dt><b><a id="_GLOSSARY_ITEM_local_area_network_lan" name="local_area_network_lan">局域网（Local Area Network，LAN）</a></b></dt>
<dd>位于限定地理区域范围内的用户组织或机构处的计算机网络。LAN 通常由一台或多台服务器组成，可向多台客户机工作站提供服务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_aggregate_class" name="aggregate_class">聚集（类）（aggregate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在聚集（整体与部分）关系中表示“整体”的类。 请参阅：<i><a  class="elementLink" href="#aggregation" guid="_x5zVcNnmEdmO6L4XMImrsA" >聚集（aggregation）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_aggregation" name="aggregation">聚集（aggregation）</a></b></dt>
<dd>用于在聚集（整体）及其部分之间建立整体与部分关系的一种关联。</dd>
<dt><b><a id="_GLOSSARY_ITEM_concrete_class" name="concrete_class">具体类（concrete class）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 可以直接实例化的<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>。请对比：<i><a  class="elementLink" href="#abstract_class" guid="_x4BMw9nmEdmO6L4XMImrsA" >抽象类（abstract class）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_concrete" name="concrete">具体（concrete）</a></b></dt>
<dd>形容词。涉及或关于实际的、特定的事物或实例。能够被感觉器官感知；不是抽象或虚构的。请对比：<i><a  class="elementLink" href="#abstract" guid="_x4BMwNnmEdmO6L4XMImrsA" >抽象（abstract）</a></i>。请参阅：<i><a  class="elementLink" href="#concrete_class" guid="_yEFS1tnmEdmO6L4XMImrsA" >具体类（concrete class）</a>。</i></dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_8" name="IDX1_8">〔K〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_development_case" name="development_case">开发案例（development case）</a></b></dt>
<dd>由执行组织所使用的软件工程流程。它是作为 Unified Process 产品的配置或定制来开发的，并且满足项目的需要。</dd>
<dt><b><a id="_GLOSSARY_ITEM_development_process" name="development_process">开发流程（development process）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在软件开发期间，为达到给定目的而执行的一组半序步骤，例如构造模型或实施模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_developer" name="developer">开发人员（developer）</a></b></dt>
<dd>负责按照项目采用的标准和过程来开发所需功能的人员。可包括执行任何<i>需求、分析和设计、实施</i>以及<i>测试</i>规程中的活动。</dd>
<dt><b><a id="_GLOSSARY_ITEM_development_cycle" name="development_cycle">开发周期（development cycle）</a></b></dt>
<dd>同义词：<i><a  class="elementLink" href="#lifecycle" guid="_yMbWhtnmEdmO6L4XMImrsA" >生命周期（lifecycle）</a>、<a  class="elementLink" href="#cycle" guid="_yE05ttnmEdmO6L4XMImrsA" >周期（cycle）</a></i>。请另见：<i><a  class="elementLink" href="#test_cycle" guid="_yX5msNnmEdmO6L4XMImrsA" >测试周期</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_open_database_connectivity_odbc" name="open_database_connectivity_odbc">开放式数据库连接标准（Open DataBase Connectivity，ODBC）</a></b></dt>
<dd>Microsoft 开发的一种 C 数据库应用程序编程接口（API）。它允许通过调用可调用的 SQL 来访问数据库管理系统，而不需要使用 SQL 预处理程序。另外，ODBC 还提供了一个体系结构，允许用户添加被称作数据库驱动程序的模块，这些模块可在运行时将应用程序链接到用户选择的数据库管理系统。这样，应用程序就再也不必直接链接到受支持的所有数据库管理系统的模块。</dd>
<dt><b><a id="_GLOSSARY_ITEM_testability" name="testability">可测性（testability）</a></b></dt>
<dd>可适当测试<i><a  class="elementLinkWithUserText" href="#target_test_item" guid="_yXc6xtnmEdmO6L4XMImrsA" >目标测试项</a></i>的能力：如果目标项无法具有针对自身实施必需的测试，则该项可能缺乏可测性。可以论证，关于可测性，所讨论的两个主要侧重面是： <div style="margin-left: 2em">      1）目标测试项为接受测试而提供适当支持的能力<br />      2）测试团队所用的流程和工具的适用性 － 以及应用流程和工具所采取的特定策略。请参阅：    <i>测试接口（test interface）</i>和<i>测试方法（test approach）</i>。</div></dd>
<dt><b><a id="_GLOSSARY_ITEM_generalizable_element" name="generalizable_element">可泛化元素（generalizable element）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 可参与泛化关系的模型元素。请参阅：<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_traceability_item" name="traceability_item">可跟踪性项（traceability item）</a></b></dt>
<dd>任何需要从其他项目元素显式跟踪的项目元素，跟踪的目的在于跟踪两个项目元素之间的依赖关系。对于 Rational RequisitePro，此定义可以重新表述为：在 RequisitePro 中，由 RequisitePro 需求类型的实例表示的任何项目元素。</dd>
<dt><b><a id="_GLOSSARY_ITEM_traceability" name="traceability">可跟踪性（traceability）</a></b></dt>
<dd>从一个项目元素跟踪到其他相关项目元素的能力，尤其是那些与<i><a  class="elementLinkWithUserText" href="#requirement" guid="_yTb9ednmEdmO6L4XMImrsA" >需求</a></i>相关的项目元素。可跟踪性中涉及到的项目元素称为<a  class="elementLinkWithUserText" href="#traceability_item" guid="_yY8vk9nmEdmO6L4XMImrsA" >可跟踪性项</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deliverable" name="deliverable">可交付成果（deliverable）</a></b></dt>
<dd><a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>产生的输出，它具有交付给<i><a  class="elementLink" href="#customer" guid="_yE05s9nmEdmO6L4XMImrsA" >客户</a></i>或其他<i><a  class="elementLink" href="#stakeholder" guid="_yWHeDNnmEdmO6L4XMImrsA" >项目干系人</a></i>的价值、材料或其他内容。</dd>
<dt><b><a id="_GLOSSARY_ITEM_visual_programming_tool" name="visual_programming_tool">可视化编程工具（visual programming tool）</a></b></dt>
<dd>一种借助于图形来对程序进行说明的工具。应用程序员通过操纵组件的图形表示来编写应用程序。</dd>
<dt><b><a id="_GLOSSARY_ITEM_visibility" name="visibility">可视性（visibility）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种枚举，它的值（public、protected 或 private）表明它所引用的<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>可以在其所在的<i><a  class="elementLink" href="#namespace" guid="_yOOGRtnmEdmO6L4XMImrsA" >名称空间</a></i>之外可见的范围。</dd>
<dt><b><a id="_GLOSSARY_ITEM_executable_architecture" name="executable_architecture">可执行体系结构（executable architecture）</a></b></dt>
<dd>可执行<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>是系统的部分实施，建立它的目的在于演示所选系统功能和属性（尤其是满足非功能需求的那些系统功能和属性）。该体系结构是在<i><a  class="elementLinkWithUserText" href="#elaboration" guid="_yHhBUNnmEdmO6L4XMImrsA" >精化阶段</a></i>构建的，它用于降低与性能、吞吐量、容量、可靠性和其他“能力”有关的风险，从而可以坚实的基础在<i><a  class="elementLinkWithUserText" href="#construction" guid="_yEPD3dnmEdmO6L4XMImrsA" >构造阶段</a></i>中添加系统的完整功能，而不必担心破坏系统。将可执行体系结构作为一个演进方式原型来构建是 RUP 的意图，这样做同时还带有保留有待于进一步开发（并满足需求）并使之成为可交付系统的一部分的意图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_customer" name="customer">客户</a></b></dt>
<dd>生产组织之内或之外的个人或组织，要承担系统在财务方面的责任。 在大型系统中，客户可能是用户，也可能不是。客户是开发的产品的最终接受者。另请参阅：<i><a  class="elementLink" href="#stakeholder" guid="_yWHeDNnmEdmO6L4XMImrsA" >项目干系人</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_client" name="client">客户端（client）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从另一个分类器请求服务的<i><a  class="elementLink" href="#classifier" guid="_yA9GU9nmEdmO6L4XMImrsA" >分类器</a></i>。请对比：<i><a  class="elementLink" href="#supplier" guid="_yXJ_0NnmEdmO6L4XMImrsA" >供应端（supplier）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_client_server" name="client_server">客户机服务器（client server）</a></b></dt>
<dd>分发式数据处理中的交互模型，其中某一位置的程序向另一位置的程序发出请求并等待响应。发出请求的程序称为客户机，应答程序称为服务器。</dd>
<dt><b><a id="_GLOSSARY_ITEM_point_of_control_and_observation" name="point_of_control_and_observation">控制和观察点（point of control and observation）</a></b></dt>
<dd>测试<i><a  class="elementLinkWithUserText" href="#test_procedure" guid="_yYNIttnmEdmO6L4XMImrsA" >过程流</a></i>中的特定点，在该点处记录<i><a  class="elementLink" href="#test_environment" guid="_yX5mttnmEdmO6L4XMImrsA" >测试环境</a></i>的观察情况，或者制定关于测试的控制流的决策。它和控制点是关系很近的两个概念，但控制点通常需要一个或多个观察点的详细信息，以进行必要的控制决策。</dd>
<dt><b><a id="_GLOSSARY_ITEM_focus_of_control" name="focus_of_control">控制焦点（focus of control）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#sequence_diagram" guid="_yVEVINnmEdmO6L4XMImrsA" >序列图</a></i>上的一个符号，表示对象直接或通过下级过程执行操作的时段。</dd>
<dt><b><a id="_GLOSSARY_ITEM_control_class" name="control_class">控制类（control class）</a></b></dt>
<dd>一种<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>，用来对特定于一个或数个<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>的行为建模。</dd>
<dt><b><a id="_GLOSSARY_ITEM_framework" name="framework">框架（framework）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种微型<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>，在特定<i><a  class="elementLink" href="#domain" guid="_yHEVYdnmEdmO6L4XMImrsA" >域</a></i>内为应用程序提供一个可扩展<i><a  class="elementLink" href="#template" guid="_yXwcwNnmEdmO6L4XMImrsA" >模板</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_extend-relationship" name="extend-relationship">扩展关系（extend-relationship）</a></b></dt>
<dd>从用例类 A 到用例类 B 的扩展关系表示 B 的实例可以包括（受到在扩展中指定的特定条件的限制）由 A 指定的行为。由单一目标用例的若干个扩展对象指定的行为可以在单一用例实例中发生。</dd>
<dt><b><a id="_GLOSSARY_ITEM_extend" name="extend">扩展（extend）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从扩展用例到基本用例的一种关系，用来指定为扩展用例定义的行为如何才能插入到为基本用例定义的行为中。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_9" name="IDX1_9">〔L〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_class_hierarchy" name="class_hierarchy">类层次结构（class hierarchy）</a></b></dt>
<dd>共享单个继承的类之间的关系。所有 Java 类都继承自 Object（对象）类。</dd>
<dt><b><a id="_GLOSSARY_ITEM_class_method" name="class_method">类方法（class method）</a></b></dt>
<dd>请参阅：<i><a  class="elementLink" href="#method" guid="_yNUuY9nmEdmO6L4XMImrsA" >方法（method）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_class_library" name="class_library">类库（class library）</a></b></dt>
<dd>类的集合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_class_diagram" name="class_diagram">类图（class diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示一组说明性（静态）<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>的图，这些模型元素如<i><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a>、<a  class="elementLinkWithUserText" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>及其内容和<i><a  class="elementLinkWithUserText" href="#relationship" guid="_yTIbcNnmEdmO6L4XMImrsA" >关系</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_type_expression" name="type_expression">类型表达式（type expression）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 求出的值为对一种或多种<i><a  class="elementLinkWithUserText" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>的引用的一种表达式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_type" name="type">类型（type）</a></b></dt>
<dd>用于描述一组具有共同特点、关系、属性和语义的实体。</dd>
<dt><b><a id="_GLOSSARY_ITEM_class" name="class">类（class） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对一组对象的描述，这些对象具有相同的<i><a  class="elementLinkWithUserText" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性</a>、<a  class="elementLinkWithUserText" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a>、<a  class="elementLinkWithUserText" href="#method" guid="_yNUuY9nmEdmO6L4XMImrsA" >方法</a>、<a  class="elementLinkWithUserText" href="#relationship" guid="_yTIbcNnmEdmO6L4XMImrsA" >关系</a></i>和语义。类可使用一组接口来指定它提供给其环境的操作集合。请参阅：<i><a  class="elementLink" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口（interface）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_milestone" name="milestone">里程碑（milestone）</a></b></dt>
<dd>迭代正式结束的点；与<i><a  class="elementLink" href="#release" guid="_yTIbc9nmEdmO6L4XMImrsA" >发行版</a></i>点相对应。</dd>
<dt><b><a id="_GLOSSARY_ITEM_online_transaction_processing_oltp" name="online_transaction_processing_oltp">联机事务处理（online transaction processing，OLTP）</a></b></dt>
<dd>一种支持交互式应用程序的计算方式。在这种计算方式中，终端用户所提交的请求一经接收即被处理。结果会在相当短的时间内返回给请求方。联机事务处理系统对资源共享进行监控，以便能同时有效地处理多个事务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_link_end" name="link_end">链接端（link end）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 关联关系端的一个实例。请参阅：<i><a  class="elementLink" href="#association_end" guid="_x7mFPNnmEdmO6L4XMImrsA" >关联关系端（association end）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_link" name="link">链接（link）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 两个对象之间的语义连接。关联的一个实例。请参阅：<i><a  class="elementLink" href="#association" guid="_x7mFNtnmEdmO6L4XMImrsA" >关联（association）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_column" name="column">列（column）</a></b></dt>
<dd>数据库中表的一个属性。</dd>
<dt><b><a id="_GLOSSARY_ITEM_process_view" name="process_view">流程视图（process view）</a></b></dt>
<dd>一种描述系统的并行情况（即任务／进程及其交互）的<i><a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_process" name="process">流程（process）</a></b></dt>
<dd><p> (1) 用于特定类型开发项目的常规结构。流程采用<a  class="elementLink"     href="#content_element" guid="_N8x34B_LEdq6CKKKq4D7YA" >内容元素</a>并将它们在为特定类型的项目定制的半序序列中关联。因此，流程是一组半序工作描述，这些工作描述用于实现较高的开发目标（例如特定软件的发行版）。<!--StartFragment-->这些工作描述被组织为分层的细分结构。流程注重于细分结构中工作的生命周期和顺序。<br /> </p> <p> (2) 对流程进行建模的 <a  class="elementLink"     href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 的一部分。 </p> <!--EndFragment--></dd>
<dt><b><a id="_GLOSSARY_ITEM_logical_view" name="logical_view">逻辑视图（logical view）</a></b></dt>
<dd>用于对系统设计中的主要类进行描述的<i><a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图</a></i>，包括：与业务相关的主要类，以及定义关键行为和结构机制（持久性、通信、容错、用户界面）的类。在 Unified Process 中，逻辑视图是<i><a  class="elementLink" href="#design_model" guid="_yF4CltnmEdmO6L4XMImrsA" >设计模型</a></i>的<i><a  class="elementLink" href="#view" guid="_ybefJtnmEdmO6L4XMImrsA" >视图</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_commit" name="commit">落实（commit）</a></b></dt>
<dd>结束一个工作单元的操作，该操作将使它对资源（事务或数据）所作的更改永久生效。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_10" name="IDX1_10">〔M〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_smoke_test" name="smoke_test">冒烟测试（smoke test）</a></b></dt>
<dd>用来描述某一类测试的短语，这些测试通常数量有限，可以针对每个软件工作版本运行，以确定自先前的某个工作版本以来，软件在形式或功能上是否有退步。同义词：<i>工作版本生效测试（build validation test）、工作版本验证测试（build verification test）、工作版本验收测试（build acceptance test）、工作版本退步测试（build regression test）和健全检查（sanity check）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_enumeration" name="enumeration">枚举（enumeration） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 指定值的列表，其中的值用作特定<i><a  class="elementLink" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性</a></i>类型的范围。例如，RGBColor = {red, green, blue}。布尔是一个预定义的枚举，它的值取自以下集合 {false, true}。</dd>
<dt><b><a id="_GLOSSARY_ITEM_american_standard_code_for_information_interchange" name="american_standard_code_for_information_interchange">美国信息交换标准码（american standard code for information interchange）</a></b></dt>
<dd>美国信息交换标准码。大多数 PC 和 UNIX 系统使用的 8 位字符编码方案。它取代了较早的 7 位 ASCII 标准。</dd>
<dt><b><a id="_GLOSSARY_ITEM_object-oriented_programming_oop" name="object-oriented_programming_oop">面向对象程序设计（object-oriented programming，OOP）</a></b></dt>
<dd>以数据抽象和继承概念为基础的编程方法。与过程化编程技术不同，面向对象程序设计侧重于构成问题的那些数据对象以及它们的操纵方式，而不是完成任务的方式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_service-oriented_architecture" name="service-oriented_architecture">面向服务的体系结构（Service-Oriented Architecture）</a></b></dt>
<dd>面向服务的体系结构是软件系统的结构在其组件和组件所提供的服务方面的概念描述，而不涉及这些组件、服务和组件之间的连接的底层实施情况。</dd>
<dt><b><a id="_GLOSSARY_ITEM_descriptor" name="descriptor">描述符（descriptor）</a></b></dt>
<dd>特殊<a  class="elementLink" href="#breakdown_element" guid="_cvdpEB_LEdq6CKKKq4D7YA" >细分元素</a>的抽象泛化关系，这些细分元素引用一个具体的<a  class="elementLink" href="#content_element" guid="_N8x34B_LEdq6CKKKq4D7YA" >内容元素</a>。描述符是实现<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>与方法内容分离的重要概念。描述符可以看作是一个特定内容元素的引用对象。此外，描述符具有自己的关系和属性，这些关系和属性用来修改描述符所引用的内容元素的语义。</dd>
<dt><b><a id="_GLOSSARY_ITEM_namespace" name="namespace">名称空间（namespace）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 模型中可用于定义和使用名称的部分。在名字空间中，每个名称都有唯一的含义。请参阅：<i><a  class="elementLink" href="#name" guid="_yOOGQ9nmEdmO6L4XMImrsA" >名称（name）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_name" name="name">名称（name）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 用来标识<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>的字符串。</dd>
<dt><b><a id="_GLOSSARY_ITEM_template" name="template">模板（template）</a></b></dt>
<dd><i><a  class="elementLink" href="#artifact" guid="_x7cUM9nmEdmO6L4XMImrsA" >工件</a></i>的预定义结构。</dd>
<dt><b><a id="_GLOSSARY_ITEM_module" name="module">模块（module）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 存储和操纵的软件单元。模块包括源代码模块、二进制代码模块和可执行代码模块。请参阅：<i><a  class="elementLink" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件（component）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_pattern" name="pattern">模式（pattern）</a></b></dt>
<dd>一种用于重复出现的问题的解决方案模板，它已被证明在给定环境中是有用的。好的模式能成功地解决问题的冲突面，根据解决这些冲突面的方式，确定一个模式优于另一个模式。模式应具有至少三个已明确的实际应用，才有资格称为模式。对于软件，UML 可通过使用参数化协作来支持模式的表示 － 尽管 UML 不直接为模式的其他侧重面（例如使用结果列表、使用示例等等）建模，可将文本用于这些方面。通过将值绑定到参数，来实例化软件模式。模式可以各种不同规模和抽象级别而存在，例如<i><a  class="elementLinkWithUserText" href="#architectural_pattern" guid="_x7JZRtnmEdmO6L4XMImrsA" >体系结构模式</a>、<a  class="elementLinkWithUserText" href="#analysis_pattern" guid="_x613Q9nmEdmO6L4XMImrsA" >分析模式</a>、<a  class="elementLinkWithUserText" href="#design_pattern" guid="_yF4CnNnmEdmO6L4XMImrsA" >设计模式</a>、测试模式、<a  class="elementLinkWithUserText" href="#idiom" guid="_yKVr0tnmEdmO6L4XMImrsA" >代码模式</a>或<a  class="elementLinkWithUserText" href="#implementation_pattern" guid="_yKpN0NnmEdmO6L4XMImrsA" >实施模式</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model_aspect" name="model_aspect">模型侧重面（model aspect）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 建模的一个方法，它强调<i><a  class="elementLink" href="#metamodel" guid="_yNK9bNnmEdmO6L4XMImrsA" >元模型</a></i>的特定性质。例如：模型的结构侧重面强调的是元模型的结构特性。</dd>
<dt><b><a id="_GLOSSARY_ITEM_behavioral_model_aspect" name="behavioral_model_aspect">模型的行为侧重面（behavioral model aspect）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 重点强调系统中<i><a  class="elementLinkWithUserText" href="#instance" guid="_yLF5w9nmEdmO6L4XMImrsA" >实例</a></i>（包括其<i><a  class="elementLinkWithUserText" href="#method" guid="_yNUuY9nmEdmO6L4XMImrsA" >方法</a></i>、<i><a  class="elementLinkWithUserText" href="#collaboration" guid="_yBZyRtnmEdmO6L4XMImrsA" >协作</a></i>和<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>历史记录）的行为的<i><a  class="elementLink" href="#model_aspect" guid="_yNefZtnmEdmO6L4XMImrsA" >模型侧重面</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model_elaboration" name="model_elaboration">模型精化（model elaboration）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从已发布的模型生成<i><a  class="elementLink" href="#repository" guid="_yTb9dtnmEdmO6L4XMImrsA" >存储库</a></i>类型的过程。在此过程中要生成接口和实施方案，以便根据已精化的模型对存储库进行实例化和填充。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model_driven_development" name="model_driven_development">模型驱动开发（model driven development）</a></b></dt>
<dd>一种系统开发方法，从较高抽象级别的模型开始进行工作（尽管要求严格的模型描述），它认为模型并非只是简单的中间开发工件，而是可从中生成可运行系统的精确描述。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model_view_controller" name="model_view_controller">模型视图控制器（Model View Controller）</a></b></dt>
<dd>用于分解应用程序组件的应用程序体系结构：模型代表业务逻辑或数据；视图代表用户界面；控制器用于管理用户输入，或者在某些情况下管理应用程序流。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model_element" name="model_element">模型元素</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img height="16" alt="UML 图标" src="./../core.base_rup/customcategories/resources/uml.gif" width="13" border="0" /></a> 一种元素，它是从正在建模的系统中提取的抽象。请对比：<i><a  class="elementLink" href="#view_element" guid="_ybefKdnmEdmO6L4XMImrsA" >视图元素</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_model" name="model">模型 </a></b></dt>
<dd><p>     以完整的语义表示系统的抽象概念；从特定角度对系统作出的<em>完整</em>描述（这里的<em>完整</em>是指无需任何其他信息即可从该角度理解系统）；一组模型元素。两个模型不能重叠。</p> <p> </p> <br /></dd>
<dt><b><a id="_GLOSSARY_ITEM_target_test_item" name="target_test_item">目标测试项（target test item）</a></b></dt>
<dd>已开发产品（通常是软件或硬件）的一个侧重面，该侧重面已确定为测试工作的目标。目标测试项的范围可确定为<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a>、<a  class="elementLink" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口</a>、<a  class="elementLink" href="#feature" guid="_yJTKANnmEdmO6L4XMImrsA" >特性</a>、<a  class="elementLink" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a>、<a  class="elementLink" href="#implementation_subsystem" guid="_yKpN09nmEdmO6L4XMImrsA" >实施子系统</a>或<a  class="elementLink" href="#system" guid="_yXTw0NnmEdmO6L4XMImrsA" >系统</a></i>级别，它还可以是系统的外部侧重面，例如操作系统或打印机之类的外围设备。同义词：<i><a  class="elementLink" href="#target-of-test" guid="_yXc6w9nmEdmO6L4XMImrsA" >测试目标（target-of-test）</a>、测试项（test item）。</i></dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_11" name="IDX1_11">〔N〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_intranet" name="intranet">内部网（intranet）</a></b></dt>
<dd>公司或组织内部的专用网络，使用与公用 Internet 相同种类的软件，不过只供内部使用。随着 Internet 的日益普及，专用网络中使用了许多 Internet 上使用的工具。例如，许多公司的 Web 服务器只供员工使用。</dd>
<dt><b><a id="_GLOSSARY_ITEM_internal_transition" name="internal_transition">内部转换（internal transition）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种<i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >转换</a></i>，表示对事件的响应，而不会变更对象的<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_cohesion" name="cohesion">内聚（cohesion）</a></b></dt>
<dd>相互依赖的同种<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>先天的联合。粘附在一起的行为或状态；紧密的联合。请对比：<i><a  class="elementLink" href="#coupling" guid="_yErvwNnmEdmO6L4XMImrsA" >耦合（coupling）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_content_element" name="content_element">内容元素（content element）</a></b></dt>
<dd>在 <a  class="elementLink" href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 中建模并且是<a  class="elementLink" href="#method_content" guid="_Ts2joB_MEdq6CKKKq4D7YA" >方法内容</a>的一部分的任意元素。内容元素分步骤地说明如何实现非常具体的开发目标，而不管这些步骤在开发生命周期中所处的位置。它们需要实例化并进行调整以适应<a  class="ELEMENTLINK" guid="_yQ5m2NnmEdmO6L4XMImrsA" href="#process" ><font color="#0000ff">流程</font></a>结构内的特定环境。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_12" name="IDX1_12">〔O〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_coupling" name="coupling">耦合（coupling）</a></b></dt>
<dd><i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>相互依赖的程度。有两类耦合：“紧密”和“松散”。松散耦合适用于支持可扩展软件体系结构，而紧密耦合则可能对于取得最大性能是必要的。当组件之间交换的数据变得更大或更复杂时，耦合度将增长。请对比：<i><a  class="elementLink" href="#cohesion" guid="_yBZyQ9nmEdmO6L4XMImrsA" >内聚（cohesion）</a>。</i></dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_13" name="IDX1_13">〔P〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_rank" name="rank">排名（rank）</a></b></dt>
<dd><i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>或<i><a  class="elementLink" href="#scenario" guid="_yUxaM9nmEdmO6L4XMImrsA" >场景</a></i>的一个属性，它描述用例或场景对<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>的影响，或对<i><a  class="elementLink" href="#release" guid="_yTIbc9nmEdmO6L4XMImrsA" >发行版</a></i>的重要性。</dd>
<dt><b><a id="_GLOSSARY_ITEM_derived_element" name="derived_element">派生元素（derived element）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个可从另一元素计算得到的模型元素。尽管没有添加语义信息，但为了清楚起见而显示它，或出于设计目的而包含它。</dd>
<dt><b><a id="_GLOSSARY_ITEM_configuration_management" name="configuration_management">配置管理（configuration management）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >ISO95</a>] 一个支持过程，其目的是确定、定义项并为项设置基线；控制这些项的修改及分发；报告并记录这些项和修改请求的状态；确保项的完整性、一致性和正确性；以及控制项的存储、处理和交付。</dd>
<dt><b><a id="_GLOSSARY_ITEM_configuration_item" name="configuration_item">配置项（configuration item）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >ISO95</a>] 配置中的实体，它满足最终使用功能，并且可在给定的引用点上唯一确定。</dd>
<dt><b><a id="_GLOSSARY_ITEM_configuration" name="configuration">配置（configuration）</a></b></dt>
<dd>1）一般：由其功能单元的性质、个数、主要特性所确定的系统或网络的安排；适用于硬件或软件配置。</dd>
<dt><b><a id="_GLOSSARY_ITEM_evalution_mission" name="evalution_mission">评估任务（evaluation mission）</a></b></dt>
<dd>一种简明易记的声明，它为给定的工作调度定义测试团队工作目标的本质。评估任务通常会在每个迭代中重新考虑，它提供焦点，以使得团队高效率地工作，从而为测试项目干系人带来益处。任务声明的一些示例包括：<i>迅速找到重要的问题</i>、<i>对察觉的质量提出建议</i>和<i>验证规范</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_platform_model" name="platform_model">平台模型（platform model）</a></b></dt>
<dd>平台模型是以下各项的集合：概念（代表部件和服务）、规范、接口定义、约束定义以及应用程序要使用特定平台需满足的任何其他需求。在 <i><a  class="elementLinkWithUserText" href="#model_driven_architecture" guid="_yNefadnmEdmO6L4XMImrsA" >MDA</a></i> 中，平台模型以如 UML 之类的语言加以细化和正式化，并且在 MOF 兼容的存储库中可用。可以为其他的 MDA（例如 J2EE 或 .NET）构建平台模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_platform_independent_model" name="platform_independent_model">平台无关模型（platform independent model）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >OMG03</a>] 将其定义为：<blockquote> “一种子系统模型，它不包含任何特定于平台的信息，也不包含用来实现该模型的技术。” </blockquote></dd>
<dt><b><a id="_GLOSSARY_ITEM_platform_specific_model" name="platform_specific_model">平台相关模型（platform specific model）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >OMG03</a>] 将其定义为：<blockquote> “一种子系统模型，它包含关于特定技术的信息，该技术用于在特定平台上实现该模型，因此可能包含特定于平台的元素。” </blockquote></dd>
<dt><b><a id="_GLOSSARY_ITEM_platform" name="platform">平台（platform）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >OMG03</a>] 将其定义为：<blockquote> “一组子系统／技术，它们通过接口和指定的用途模式提供一组连贯的功能，依赖于平台的任何子系统可以使用这些功能，而不必考虑平台所提供的功能如何实施的细节问题。” </blockquote></dd>
<dt><b><a id="_GLOSSARY_ITEM_waterfall_model" name="waterfall_model">瀑布模型（waterfall model）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >IE610.12</a>] 将瀑布模型定义为： <blockquote> “一种软件开发流程的模型，组成流程的活动（通常是概念阶段、需求阶段、设计阶段、实施阶段、测试阶段和安装及检查阶段）的执行顺序满足以下要求：可能存在重叠，但几乎不存在或者的确不存在迭代。” </blockquote> RUP 中应用了此定义，只是将术语“阶段”替换成了“规程”。在 RUP 中，规程是指定的业务建模、需求、分析和设计、实施、测试以及开发，在瀑布式开发模型中，这些将只按顺序发生一次，且重叠很少或没有。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_14" name="IDX1_14">〔Q〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_start_page" name="start_page">起始页（start page）</a></b></dt>
<dd>用户浏览 Web 站点时看到的第一页。同义词：<i>缺省页（default page）</i>、<a  class="elementLink" href="#home_page" guid="_yJ5m-dnmEdmO6L4XMImrsA" >主页（home page）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_precondition" name="precondition">前置条件（precondition）</a></b></dt>
<dd>一种文本描述，用于定义用例可以开始时对系统的约束。</dd>
<dt><b><a id="_GLOSSARY_ITEM_defect" name="defect">缺陷（defect）</a></b></dt>
<dd>缺陷是已交付工作产品中的异常情况或瑕疵。 举例来说，缺陷可以是在生命周期的初期发现的遗漏和缺点，也可以是已准备测试或运行的足够成熟软件中存在的故障症状。缺陷可以是您要跟踪并解决的任何种类的问题。另请参阅：<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求（change request）</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_15" name="IDX1_15">〔R〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_task" name="task">任务（task）</a></b></dt>
<dd>可要求<i><a  class="elementLink" href="#role" guid="_yUefQNnmEdmO6L4XMImrsA" >角色</a></i>执行的工作单元。</dd>
<dt><b><a id="_GLOSSARY_ITEM_task" name="task">任务（task）</a></b></dt>
<dd>请参阅：<i><a  class="elementLink" href="#operating_system_process" guid="_yPQoE9nmEdmO6L4XMImrsA" >操作系统进程（operating system process）</a>、<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程（process）</a>和<a class="elementLink" href="./../../../core.base_rup/guidances/termdefinitions/thread_6EE16914.html" guid="_yYpNk9nmEdmO6L4XMImrsA">线程（thread）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_container" name="container">容器（container）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> (1) 用于包含其他实例的一个<i><a  class="elementLink" href="#instance" guid="_yLF5w9nmEdmO6L4XMImrsA" >实例</a></i>，它提供各种操作来访问或者迭代其内容；例如数组、列表和集合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_software_engineering_process_authority_sepa" name="software_engineering_process_authority_sepa">软件工程流程管理委员会（Software Engineering Process Authority，SEPA）</a></b></dt>
<dd>负责流程定义、评估和改进的组织实体。</dd>
<dt><b><a id="_GLOSSARY_ITEM_software_specification_review_ssr" name="software_specification_review_ssr">软件规范复审（software specification review，SSR）</a></b></dt>
<dd>在瀑布式生命周期中，软件需求规范完成时进行的主要复审。</dd>
<dt><b><a id="_GLOSSARY_ITEM_software_architecture" name="software_architecture">软件体系结构（software architecture）</a></b></dt>
<dd>软件体系结构包括： <ul>     <li> 有关软件系统组织的重大决策</li>     <li> 所选的结构元素、构成系统的元素的接口，以及在这些元素的协作中所规定的行为</li>     <li> 由结构和行为元素组成的逐渐增大的子系统</li>     <li> 指导该组织、这些元素和其接口、它们之间的协作及其组成的体系结构样式</li> </ul></dd>
<dt><b><a id="_GLOSSARY_ITEM_software_requirements_specifications_srs" name="software_requirements_specifications_srs">软件需求规范（software requirements specification，SRS）</a></b></dt>
<dd>完整定义要构建的系统的外部行为的一组需求，有时称为功能规范。</dd>
<dt><b><a id="_GLOSSARY_ITEM_software_requirement" name="software_requirement">软件需求（software requirement）</a></b></dt>
<dd>有关系统外部可观察行为的规范。例如：系统输入、系统输出、系统功能、系统属性或系统环境的属性。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_16" name="IDX1_16">〔S〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_sandbox" name="sandbox">沙箱（sandbox）</a></b></dt>
<dd>由 Web 浏览器提供的有限环境，可供 Java Applet 在其中运行。沙箱为这些 Applet 提供服务，并阻止它们执行规定之外的操作，这些操作如：执行文件输入／输出，或者与不是装载该 Applet 的服务器通信。如果将 Applet 类推到子级，将调用这些 Applet 运行沙箱的环境。</dd>
<dt><b><a id="_GLOSSARY_ITEM_device" name="device">设备（device） </a></b></dt>
<dd>一类<a  class="elementLink" href="#node" guid="_yOXQN9nmEdmO6L4XMImrsA" >节点</a>，它为<a  class="elementLink" href="#processor" guid="_yRDX09nmEdmO6L4XMImrsA" >处理器</a>提供支持能力。尽管它可能有能力运行嵌入式程序（设备驱动程序），但是无法执行通用的应用程序，其存在的目的只是为运行通用应用程序的处理器提供服务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_package" name="design_package">设计包（design package）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" ><i>类</i></a>、<a  class="elementLinkWithUserText" href="#relationship" guid="_yTIbcNnmEdmO6L4XMImrsA" ><i>关系</i></a>、<a  class="elementLinkWithUserText" href="#use-case_realization" guid="_ybLkM9nmEdmO6L4XMImrsA" ><i>用例实现</i></a>、<a  class="elementLinkWithUserText" href="#diagram" guid="_yGUug9nmEdmO6L4XMImrsA" ><i>图</i></a>和其他<a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" ><i>包</i></a>的集合，它用于通过将设计模型划分成更小的部分来构造此<a  class="elementLink" href="#design_model" guid="_yF4CltnmEdmO6L4XMImrsA" >设计模型</a>。它是<a  class="elementLink" href="#implementation_subsystem" guid="_yKpN09nmEdmO6L4XMImrsA" >实施子系统</a>的逻辑模拟。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_mechanism" name="design_mechanism">设计机制（design mechanism）</a></b></dt>
<dd>在设计流程中，以及完成设计的细节期间所使用的一种<i><a  class="elementLink" href="#architectural_mechanism" guid="_x7JZQ9nmEdmO6L4XMImrsA" >体系结构机制</a></i>。它们与关联的<i><a  class="elementLinkWithUserText" href="#analysis_mechanism" guid="_x6stV9nmEdmO6L4XMImrsA" >分析机制</a></i>有关，它们是这些分析机制的进一步改进，而且它们还可以绑定一种或多种体系结构和设计模式。分析机制和设计机制之间在规模上不一定要存在差别，因而以下说法是可能成立的，即在分析层次上的永久性机制和在设计层次上的永久性机制是处于不同改进层次上的同一事物。设计机制假定实施环境的一些细节，但它不属于特定的实施（如<i><a  class="elementLink" href="#implementation_mechanism" guid="_yKfc2dnmEdmO6L4XMImrsA" >实施机制</a></i>）。例如，进程间通信的分析机制可以通过以下若干进程间通信（IPC）的设计机制来进一步改进：共享的内存、类似函数调用的 IPC、基于信号量的 IPC 等。每一种设计机制都具有确定的优缺点，根据使用机制的对象的特征来决定选择何种设计机制。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_pattern" name="design_pattern">设计模式（design pattern）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >GAM94</a>] 将设计模式定义为： <blockquote> “设计模式为改进软件系统的子系统、组件或它们之间的关系提供了方案。它描述了在特定环境中解决一般设计问题的通信组件频繁出现的结构。”</blockquote> 设计模式是中小规模的模式，其规模比体系结构模式要小，但通常独立于编程语言。当绑定设计模式后，它将形成具体设计模型的一部分（可能是<i><a  class="elementLink" href="#design_mechanism" guid="_yF4Ck9nmEdmO6L4XMImrsA" >设计机制</a></i>的一部分）。 设计模式所在的层次决定了设计模式倾向于可在多个域中应用。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_model" name="design_model">设计模型（design model）</a></b></dt>
<dd>描述<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>实现的一种<i><a  class="elementLink" href="#object_model" guid="_yOqyOdnmEdmO6L4XMImrsA" >对象模型</a></i>，并充当<i><a  class="elementLink" href="#implementation_model" guid="_yKfc3NnmEdmO6L4XMImrsA" >实施模型</a></i>及其源代码的抽象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_time" name="design_time">设计时（design time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 指在软件开发流程的设计阶段中出现的事物。请参阅：<i><a  class="elementLink" href="#modeling_time" guid="_yNxaUNnmEdmO6L4XMImrsA" >建模时（modeling time）</a></i>。请对比：<i><a  class="elementLink" href="#analysis_time" guid="_x613RtnmEdmO6L4XMImrsA" >分析时（analysis time）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design_subsystem" name="design_subsystem">设计子系统（design subsystem）</a></b></dt>
<dd>代表系统的一部分的<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>。设计子系统通过封装提供其行为的其他模型元素（类或其他设计子系统）来包括行为。它还显示一组定义其所能执行的行为的<a  class="elementLinkWithUserText" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" ><i>接口</i></a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_design" name="design">设计（design）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 软件开发流程的一部分，其首要目的在于决定系统如何实施。在设计期间，将制定战略和战术决策以满足系统必需的功能和质量<i><a  class="elementLink" href="#requirements" guid="_yTlHZdnmEdmO6L4XMImrsA" >需求</a></i>。请参阅：<a  class="elementLink" href="#analysis" guid="_x6ZyYNnmEdmO6L4XMImrsA" >分析（analysis）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_generation" name="generation">生成（generation）</a></b></dt>
<dd><i><a  class="elementLink" href="#cycle" guid="_yE05ttnmEdmO6L4XMImrsA" >周期</a></i>结束时的最终<i><a  class="elementLink" href="#release" guid="_yTIbc9nmEdmO6L4XMImrsA" >发行版</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_assertion" name="assertion">声明（assertion）</a></b></dt>
<dd>一种逻辑表达式，它指定在程序执行期间的特定点上，必须存在的程序状态或者程序变量必须满足的一组条件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_lifecycle" name="lifecycle">生命周期（lifecycle）</a></b></dt>
<dd>对以下四个阶段的一次完整跨越：<i><a  class="elementLink" href="#inception" guid="_yKyXwNnmEdmO6L4XMImrsA" >先启</a></i>、<i><a  class="elementLink" href="#elaboration" guid="_yHhBUNnmEdmO6L4XMImrsA" >精化</a></i>、<i><a  class="elementLink" href="#construction" guid="_yEPD3dnmEdmO6L4XMImrsA" >构造</a></i>和<i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >移交</a></i>。从先启阶段开始到移交阶段结束之间的时间跨度。同义词：<i><a  class="elementLink" href="#development_cycle" guid="_yGK9gtnmEdmO6L4XMImrsA" >开发周期（development cycle）</a>、<a  class="elementLink" href="#cycle" guid="_yE05ttnmEdmO6L4XMImrsA" >周期（cycle）</a></i>。另请参阅：<i><a  class="elementLink" href="#test_cycle" guid="_yX5msNnmEdmO6L4XMImrsA" >测试周期（test cycle）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_failure" name="failure">失败（failure）</a></b></dt>
<dd>在指定的性能需求内，系统或组件无法执行其必需的功能 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >IE610.12</a>]。失败的特征体现为观察到一个或多个<i><a  class="elementLinkWithUserText" href="#defect" guid="_yFRlptnmEdmO6L4XMImrsA" >缺陷</a></i>症状，这些缺陷的根本原因在于存在一个或多个<i><a  class="elementLinkWithUserText" href="#fault" guid="_yJJZA9nmEdmO6L4XMImrsA" >故障</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_actual_parameter" name="actual_parameter">实参（actual parameter）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 同义词：<i><a  class="elementLink" href="#argument" guid="_x7cUMNnmEdmO6L4XMImrsA" >参数（argument）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_time_expression" name="time_expression">时间表达式（time expression）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 可解析为绝对或相对时间值的表达式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_time_event" name="time_event">时间事件（time event）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 表示自进入当前状态后所经过时间的事件。请参阅：<i><a  class="elementLink" href="#event" guid="_yIjjItnmEdmO6L4XMImrsA" >事件（event）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_time" name="time">时间（time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 表示绝对或相对时刻的值。</dd>
<dt><b><a id="_GLOSSARY_ITEM_instance" name="instance">实例（instance）</a></b></dt>
<dd>满足<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>或<i><a  class="elementLink" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>的描述的个别实体。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_mechanism" name="implementation_mechanism">实施机制（implementation mechanism）</a></b></dt>
<dd>实施流程期间使用的一种<i><a  class="elementLink" href="#architectural_mechanism" guid="_x7JZQ9nmEdmO6L4XMImrsA" >体系结构机制</a></i>。它们是对<i><a  class="elementLinkWithUserText" href="#design_mechanism" guid="_yF4Ck9nmEdmO6L4XMImrsA" >设计机制</a></i>的改进，指定机制的确切实施，并且在其构造过程中还很可能运用若干种实施模式（代码模式）。再次重申，设计机制与实施机制在规模上不一定存在差异。<br />  <br /> 例如，一个对进程间通信分析机制的特定实施，就是利用特定操作系统的共享内存函数调用的共享内存设计机制。并行冲突（不适当地对共享内存进行同时访问）可使用依赖其他实施机制的信标或闩锁机制来避免。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_inheritance" name="implementation_inheritance">实施继承（implementation inheritance）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 较为特殊元素的实施的继承。包括对接口的继承。请对比：<i><a  class="elementLink" href="#interface_inheritance" guid="_yLPDvNnmEdmO6L4XMImrsA" >接口继承（interface inheritance）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_pattern" name="implementation_pattern">实施模式（implementation pattern）</a></b></dt>
<dd>请参阅：<i><a  class="elementLink" href="#idiom" guid="_yKVr0tnmEdmO6L4XMImrsA" >代码模式（Idiom）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_model" name="implementation_model">实施模型（implementation model）</a></b></dt>
<dd>实施模型是<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>与包含这些组件的<a  class="elementLinkWithUserText" href="#implementation_subsystem" guid="_yKpN09nmEdmO6L4XMImrsA" ><i>实施子系统</i></a>的集合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_view" name="implementation_view">实施视图（implementation view）</a></b></dt>
<dd>一种<i><a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图</a></i>，它在<i><a  class="elementLinkWithUserText" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >封装</a>、<a  class="elementLinkWithUserText" href="#layer" guid="_yMbWgNnmEdmO6L4XMImrsA" >分层</a></i>和<i><a  class="elementLink" href="#configuration_management" guid="_yEPD19nmEdmO6L4XMImrsA" >配置管理</a></i>（所有权、发行策略等等）方面对开发环境中静态软件元素（代码、数据和其他伴随工件）的组织进行了描述。在 Unified Process 中，它是关于<i><a  class="elementLink" href="#implementation_model" guid="_yKfc3NnmEdmO6L4XMImrsA" >实施模型</a></i>的视图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation_subsystem" name="implementation_subsystem">实施子系统（implementation subsystem）</a></b></dt>
<dd><i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>和其他实施子系统的集合，用来通过将其分成更小的部分来构造<i><a  class="elementLink" href="#implementation_model" guid="_yKfc3NnmEdmO6L4XMImrsA" >实施模型</a></i>。请注意：在 RUP 中，实施模型和实施子系统是<i><a  class="elementLink" href="#implementation_view" guid="_yKpN1tnmEdmO6L4XMImrsA" >实施视图</a></i>的目标，因此在开发阶段意义重大。它是<i><a  class="elementLink" href="#design_package" guid="_yF4CmdnmEdmO6L4XMImrsA" >设计包</a></i>的物理模拟。“实施子系统”这个名称反映了“子系统”这一术语的通常用法，以指示范围比组件要大的对象。但是，在 UML 术语中，它是一个构造型的<i><a  class="elementLink" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>，而不是<i><a  class="elementLink" href="#subsystem" guid="_yXA14tnmEdmO6L4XMImrsA" >子系统</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_implementation" name="implementation">实施（implementation）</a></b></dt>
<dd>软件工程流程中的一项<i><a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a></i>，其目的在于实施满足适当质量标准的软件组件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_entity_class" name="entity_class">实体类（entity class）</a></b></dt>
<dd>用来对已由系统存储的信息以及关联的行为建模的<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>。一个通用类，可在许多<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>中复用，通常具有持久特征。实体类定义了一组实体对象，这些对象参与若干用例并通常可在这些用例中存活。</dd>
<dt><b><a id="_GLOSSARY_ITEM_utility" name="utility">实用程序（utility）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 以类声明的形式对全局变量和过程进行分组的构造型。实用程序属性和操作分别变成全局变量和全局过程。实用程序不是基本的建模结构，而是一个编程工具。</dd>
<dt><b><a id="_GLOSSARY_ITEM_event" name="event">事件（event）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对所发生的有具体时间和空间属性的重要事情的说明。在<i><a  class="elementLinkWithUserText" href="#statechart_diagram" guid="_yWaY89nmEdmO6L4XMImrsA" >状态图</a></i>的环境中，事件的发生可以触发<i><a  class="elementLink" href="#transition" guid="_yZPqgNnmEdmO6L4XMImrsA" >转换</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_event-to-method_connection" name="event-to-method_connection">事件-方法映射（event-to-method connection）</a></b></dt>
<dd>从 Bean 所生成的事件到 Bean 的方法的映射。当映射的事件发生时，即执行此方法。</dd>
<dt><b><a id="_GLOSSARY_ITEM_view_projection" name="view_projection">视图投影（view projection）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>到<i><a  class="elementLinkWithUserText" href="#view_element" guid="_ybefKdnmEdmO6L4XMImrsA" >视图元素</a></i>上的投影。视图投影为每个视图元素提供了位置和样式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_view_element" name="view_element">视图元素</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img height="16" alt="UML 图标" src="./../core.base_rup/customcategories/resources/uml.gif" width="13" border="0" /></a> 视图元素是<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>集合的文本和／或图形的投影。</dd>
<dt><b><a id="_GLOSSARY_ITEM_view_database" name="view_database">视图（数据库）（view）</a></b></dt>
<dd>一个虚拟表，由来自数据库中一个或多个实际表的列信息组成。</dd>
<dt><b><a id="_GLOSSARY_ITEM_view" name="view">视图（view）</a></b></dt>
<dd>模型的简化描述（抽象），即采取特定角度或观点并忽略与相应角度或观点无关的实体。另请参阅：<a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图（architectural view）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_transaction_processing" name="transaction_processing">事务处理（transaction processing）</a></b></dt>
<dd>一种支持交互式应用程序的计算方式。在这种计算方式中，用户所提交的请求一经接收即被处理。结果会在相当短的时间内返回给请求方。事务处理系统可以对资源共享进行监控，以便同时处理多个事务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_transaction" name="transaction">事务（transaction）</a></b></dt>
<dd>单个请求启动的一个或多个应用程序所组成的处理单元。执行事务时可能需要启动一项或多项任务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_thin_client" name="thin_client">瘦客户机（thin client）</a></b></dt>
<dd>瘦客户机通常是指在资源紧张的计算机上运行的系统，或者是指运行小型操作系统的系统。瘦客户机不需要本地系统管理，它们执行通过网络传送的 Java 应用程序。</dd>
<dt><b><a id="_GLOSSARY_ITEM_output" name="output">输出（output）</a></b></dt>
<dd>(1) 作为<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>结果的任意<a  class="elementLink" href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>。请参阅：<i><a  class="elementLink" href="#deliverable" guid="_yFbWoNnmEdmO6L4XMImrsA" >可交付成果（deliverable）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_input" name="input">输入（input）</a></b></dt>
<dd>由<a  class="elementLink" href="#task" guid="_x459ktnmEdmO6L4XMImrsA" >任务</a>使用的<a  class="elementLink" href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>。请参阅：<a  class="elementLink" href="#static_work_product" guid="_yWaY9tnmEdmO6L4XMImrsA" >静态工作产品（static Work Product）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_database_management_system_dbms" name="database_management_system_dbms">数据库管理系统（database management system，DBMS）</a></b></dt>
<dd>一种计算机程序，它通过为有效访问、完整性、恢复、并行控制、隐私和安全性提供集中控制、数据独立和复杂物理结构等服务，来对数据进行管理。</dd>
<dt><b><a id="_GLOSSARY_ITEM_database" name="database">数据库（database）</a></b></dt>
<dd>（1）根据为一个或多个应用程序提供服务的方案，而存储在一起的相关数据的集合，其冗余性可得到控制。</dd>
<dt><b><a id="_GLOSSARY_ITEM_datatype" name="datatype">数据类型（datatype）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 不具有标识并且其操作没有副作用的一组值的描述符。数据类型包括原始预定义类型和用户可定义类型。预定义类型包括数字、字符串和时间。用户可定义类型包括各种枚举。</dd>
<dt><b><a id="_GLOSSARY_ITEM_attribute" name="attribute">属性（attribute）</a></b></dt>
<dd>由<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>定义的属性，表示该类或其对象的指定属性。一个属性具有一种<i><a  class="elementLink" href="#type" guid="_yZPqidnmEdmO6L4XMImrsA" >类型</a></i>，用于定义其实例的类型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_property" name="property">属性（property）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 表示元素特征的指定值。属性具有语义作用。有些属性已在 UML 中预定义，而其他属性可由用户定义。请参阅：<i><a  class="elementLink" href="#tagged_value" guid="_yXc6wNnmEdmO6L4XMImrsA" >标注值（tagged value）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_property-to-property_connection" name="property-to-property_connection">属性-属性连接（property-to-property connection）</a></b></dt>
<dd>从一个对象的属性到另一个对象的属性的连接。另请参阅：连接（connection）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_double-byte_character_set_dbcs" name="double-byte_character_set_dbcs">双字节字符集（double-byte character set，DBCS）</a></b></dt>
<dd>一个字符集，其中每个字符用 2 个字节表示。例如日语、汉语、韩国语等语言，它们所包含的符号无法完全由 256 个代码点来表示，因而需要使用双字节字符集。请对比：<i>单字节字符集（single-byte character set）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_transient_object" name="transient_object">瞬时对象（transient object）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 仅在创建对象的进程或线程执行期间存在的对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_deadlock" name="deadlock">死锁（deadlock）</a></b></dt>
<dd>两个独立的控制线程彼此阻塞，相互等待对方采取操作，这种状态称为死锁。死锁通常是由于添加了避免<a  class="elementLinkWithUserText" href="#race_condition" guid="_ySPqptnmEdmO6L4XMImrsA" ><i>竞争状态</i></a>的同步机制而引起的。</dd>
<dt><b><a id="_GLOSSARY_ITEM_index" name="index">索引（index）</a></b></dt>
<dd>一种用于提高在数据库表中搜索行的效率的机制。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_17" name="IDX1_17">〔T〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_exploratory_testing" name="exploratory_testing">探究式测试（exploratory testing）</a></b></dt>
<dd>一种测试计算机软件的技术，它所需要的计划工作最少，且能忍受在测试执行之前测试目标的文档有限这一不利情况，这些都依赖于测试员的技能和知识以及来自测试结果的反馈，以指导持续的测试工作。探索测试通常在简短会话中进行，其中从一个会话中取得的反馈用于动态地计划后续的会话。关于更多详细信息，请参阅：[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >BAC01a</a>]。</dd>
<dt><b><a id="_GLOSSARY_ITEM_socket_secure_socks" name="socket_secure_socks">套接字保护（Socket Secure，SOCKS）</a></b></dt>
<dd>允许相容的客户端代码（使套接字安全的客户端代码）与远程主机建立会话的网关。</dd>
<dt><b><a id="_GLOSSARY_ITEM_feature" name="feature">特性（feature）</a></b></dt>
<dd>一种从外部观察的服务，它由系统提供并用于直接满足<i><a  class="elementLink" href="#stakeholder_need" guid="_yWQn8NnmEdmO6L4XMImrsA" >项目干系人需要</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_signature" name="signature">特征符（signature）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 行为特性的名称和参数。特征符可选择包含返回的参数。</dd>
<dt><b><a id="_GLOSSARY_ITEM_promotion" name="promotion">提升（promotion）</a></b></dt>
<dd>在 JavaBean 中，使被包含的 Bean 的特性可用于建立连接。例如，一个由面板上的三个按钮组成的 Bean。如果将该 Bean 放在一个框架中，则应将这些按钮的特性提升，让它们可从该框架中进行访问。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architectural_baseline" name="architectural_baseline">体系结构基线（architectural baseline）</a></b></dt>
<dd>处于<i><a  class="elementLink" href="#elaboration" guid="_yHhBUNnmEdmO6L4XMImrsA" >精化</a></i>阶段末期的<i><a  class="elementLink" href="#baseline" guid="_x75AI9nmEdmO6L4XMImrsA" >基线</a></i>，此时系统的基础结构和行为已稳定。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architectural_mechanism" name="architectural_mechanism">体系结构机制（architectural mechanism）</a></b></dt>
<dd>体系结构机制表示对于常见问题的一般具体解决方案。它们可以是结构模式、行为模式，也可以是这两者。在 Rational Unified Process（RUP）中，体系结构机制是一个涵盖分析机制、设计机制和实施机制的术语。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architecture_executable" name="architecture_executable">体系结构可执行文件（architecture executable）</a></b></dt>
<dd>请参阅：<i><a  class="elementLink" href="#executable_architecture" guid="_yItUJtnmEdmO6L4XMImrsA" >可执行体系结构（executable architecture）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architectural_pattern" name="architectural_pattern">体系结构模式（architectural pattern）</a></b></dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >BUS96</a>] 将体系结构模式定义为： <blockquote>     “体系结构模式表示软件系统的基本结构组织模式。它提供了一组预定义的子系统、指定它们的职责，并且包括用于组织它们之间关系的规则和指导。” </blockquote> 这正是我们在 RUP 中所采用的解释。可以进一步解释如下：体系结构模式是一个特定规模的模式（即解决方案模板），并且也是具体软件体系结构的模板。它处理整个系统范围内的属性，并且通常处理子系统范围内（而非类级别）的关系。尽管从原则上说不是不可能以此方式使体系结构模式更为细化，体系结构模式就其本质来说似乎与应用程序领域无关（特定领域的词汇似乎与模式说明无关）。请与分析模式进行比较。软件体系结构文档将提供在系统中使用的体系结构模式。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architectural_view" name="architectural_view">体系结构视图（architectural view）</a></b></dt>
<dd>从给定视角看到的系统<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>视图。主要关注结构、模块化程度、核心组件和主要控制流。</dd>
<dt><b><a id="_GLOSSARY_ITEM_architecture" name="architecture">体系结构（architecture）</a></b></dt>
<dd>系统在其所处环境中的最高层次的概念（根据 <i><a  class="elementLink" href="#ieee" guid="_yKVr2NnmEdmO6L4XMImrsA" >IEEE</a></i>）。软件系统的体系结构是通过<i><a  class="elementLink" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口</a></i>交互的重要<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>的组织或结构（在给定时间点），这些组件又由一些更小的组件和接口组成。</dd>
<dt><b><a id="_GLOSSARY_ITEM_communication_association" name="communication_association">通信关联关系（communication association）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 部署图中的节点之间的一种关联，代表节点之间要进行通信。请参阅：<i><a  class="elementLink" href="#deployment_diagram" guid="_yFuRkNnmEdmO6L4XMImrsA" >部署图（deployment diagram）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_communicates-association" name="communicates-association">通信关联（communicates-association）</a></b></dt>
<dd><i><a  class="elementLink" href="#actor_class" guid="_x5NfkNnmEdmO6L4XMImrsA" >参与者类</a></i>和<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例类</a></i>之间的关联，表示它们的实例有交互作用。关联的方向指示通信的发起方（Unified Process 约定）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_communication_diagram" name="communication_diagram">通信图（communication diagram）</a></b></dt>
<dd>（1）以前称作协作图，通信图描述对象间进行交互的模式；它通过对象之间的相互链接及其相互发送的<i><a  class="elementLinkWithUserText" href="#message" guid="_yNK9YNnmEdmO6L4XMImrsA" >消息</a></i>来显示参与交互的对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_synchronous_action" name="synchronous_action">同步操作（synchronous action）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种请求，其中发送对象会暂停来等待结果。请对比：<i><a  class="elementLink" href="#asynchronous_action" guid="_x7vPINnmEdmO6L4XMImrsA" >异步操作（asynchronous action）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_synch_state" name="synch_state">同步状态（synch state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>中的一个顶点，用来同步状态机中的并行区域。</dd>
<dt><b><a id="_GLOSSARY_ITEM_unified_modeling_language_uml" name="unified_modeling_language_uml">统一建模语言（Unified Modeling Language，UML）</a></b></dt>
<dd>用于对软件密集型系统的工件进行可视化、指定、构造和记录的语言 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >BOO98</a>]。请参阅：统一建模语言 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >UML01</a>]。在 RUP 词汇表中，来自统一建模语言的定义用符号 <img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /> 指示。</dd>
<dt><b><a id="_GLOSSARY_ITEM_uniform_resource_locator_url" name="uniform_resource_locator_url">统一资源定位符（uniform resource locator，URL）</a></b></dt>
<dd>万维网中资源的标准标识符，Web 浏览器使用它来启动连接。URL 包括要使用的通信协议、服务器名称和标识服务器上待检索对象的路径信息。</dd>
<dt><b><a id="_GLOSSARY_ITEM_projection" name="projection">投影（projection）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从一个集合到其子集的映射。</dd>
<dt><b><a id="_GLOSSARY_ITEM_perspective" name="perspective">透视图（perspective）</a></b></dt>
<dd>一般可用作观点的替代术语，两者在意思上无重大区别。</dd>
<dt><b><a id="_GLOSSARY_ITEM_graphical_user_interface_gui" name="graphical_user_interface_gui">图形用户界面（graphical user interface，GUI）</a></b></dt>
<dd>一类界面，使用户能通过操纵图形化的特性来与程序进行通信，而不是通过输入命令。通常，GUI 包括图形、定位设备、菜单栏和其他菜单、重叠窗口以及图标的组合。</dd>
<dt><b><a id="_GLOSSARY_ITEM_diagram" name="diagram">图（diagram）</a></b></dt>
<dd>对<i><a  class="elementLink" href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>的部分或全部进行的图形说明。</dd>
<dt><b><a id="_GLOSSARY_ITEM_exit_action" name="exit_action">退出操作（exit action）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在退出<i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>中的某个<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>时执行的操作，与退出该状态所进行的转换无关。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_18" name="IDX1_18">〔W〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_external_link" name="external_link">外部链接（external link）</a></b></dt>
<dd>Web 站点中指向当前 Web 站点之外的 URL 的链接。同义词：<i><a  class="elementLink" href="#outside_link" guid="_yPaZHNnmEdmO6L4XMImrsA" >外部链接（outside link）</a></i></dd>
<dt><b><a id="_GLOSSARY_ITEM_outside_link" name="outside_link">外部链接（outside link）</a></b></dt>
<dd>同义词：<i><a  class="elementLink" href="#external_link" guid="_yI2eHNnmEdmO6L4XMImrsA" >外部链接（external link）</a></i></dd>
<dt><b><a id="_GLOSSARY_ITEM_facade" name="facade">外观（facade）</a></b></dt>
<dd>子系统内一个特殊的包，构造型为 &lt;&lt;facade&gt;&gt;，用于组织和导出子系统的客户模块所需的所有信息。该包中包括<i><a  class="elementLinkWithUserText" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口</a></i>（该子系统特有的一些接口）、与子系统之外的接口的实现关系，以及子系统的客户端要使用该子系统所需的任何文档。</dd>
<dt><b><a id="_GLOSSARY_ITEM_foreign_key" name="foreign_key">外键（foreign key）</a></b></dt>
<dd>数据库表中，引用另一个表的主键的一列或一组列。</dd>
<dt><b><a id="_GLOSSARY_ITEM_world_wide_web" name="world_wide_web">万维网（World Wide Web）</a></b></dt>
<dd>一种图形化的超文本多媒体 Internet 服务。</dd>

<dd>连接以不同语言进行通信的网络的主机；例如，网关可将公司的 LAN 连接到 Internet。</dd>

<dt><b><a id="_GLOSSARY_ITEM_delegation" name="delegation">委托（delegation）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个对象向另一个对象发出<i><a  class="elementLink" href="#message" guid="_yNK9YNnmEdmO6L4XMImrsA" >消息</a></i>，以响应另一消息的能力。委托可用作继承的备选方案。请对比：<i><a  class="elementLink" href="#inheritance" guid="_yK8IxdnmEdmO6L4XMImrsA" >继承（inheritance）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_pseudo-state" name="pseudo-state">伪状态（pseudo-state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 状态机中的一个顶点，它具有状态的形式，但不执行状态的行为。伪状态包含初始顶点和历史顶点。</dd>
<dt><b><a id="_GLOSSARY_ITEM_uninterpreted" name="uninterpreted">未解释（uninterpreted）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> UML 未指定其实施的一种或多种类型的占位符。每个未解释的值都具有一个相关的字符串表示。请参阅：<i><a  class="elementLinkWithUserText" href="#common_object_request_broker_architecture_corba" guid="_yB_oINnmEdmO6L4XMImrsA" >任意（any）</a></i>[CORBA]。</dd>
<dt><b><a id="_GLOSSARY_ITEM_document" name="document">文档</a></b></dt>
<dd>文档是在纸张或在隐喻为纸张的介质上呈现的信息的集合。上述隐喻为纸张的介质包括概念上的纸张，它具有内容的隐含序列，或具有内容的明确序列。信息将采用文本或二维图片的形式。字处理程序文档、电子表格、时间表、甘特图、Web 页面和投射幻灯演示等形式都是隐喻为纸张的介质的示例。</dd>
<dt><b><a id="_GLOSSARY_ITEM_document_description" name="document_description">文档描述（document description）</a></b></dt>
<dd>描述特定文档的预期内容。</dd>
<dt><b><a id="_GLOSSARY_ITEM_document_template" name="document_template">文档模板（document template）</a></b></dt>
<dd>一种具体的工具模板，可用于诸如 Adobe(R) FrameMaker(R) 或 Microsoft(R) Word(R) 之类的工具。</dd>
<dt><b><a id="_GLOSSARY_ITEM_file_transfer_protocol_ftp" name="file_transfer_protocol_ftp">文件传输协议（file transfer protocol，FTP）</a></b></dt>
<dd>在计算机之间实现文件传输的基本 Internet 功能。可使用它从远程主机下载文件，以及将文件从本地计算机上载到远程主机。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_19" name="IDX1_19">〔X〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_breakdown_structure" name="breakdown_structure">细分结构（breakdown structure）</a></b></dt>
<dd><p>     <a  class="elementLink" href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 构造，指定<a  class="elementLink"     href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>为<a  class="elementLink"     href="#breakdown_element" guid="_cvdpEB_LEdq6CKKKq4D7YA" >细分元素</a>的层次结构组合。 </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_breakdown_element" name="breakdown_element">细分元素（breakdown element）</a></b></dt>
<dd>在 <a  class="elementLink" href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 中建模并且是<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程</a>结构的一部分的任意元素。<!--EndFragment--></dd>
<dt><b><a id="_GLOSSARY_ITEM_system_requirements_review_srr" name="system_requirements_review_srr">系统需求复审（system requirements review，SRR）</a></b></dt>
<dd>在瀑布式生命周期中，系统规范完成时进行的主要复审的名称。</dd>
<dt><b><a id="_GLOSSARY_ITEM_system" name="system">系统（system）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> (1) 为实现特定目的而组织的已连接单元的集合。系统可由一个或多个模型描述（可能从不同角度描述）。同义词：物理系统（physical system）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_systems_applications_and_products" name="systems_applications_and_products">系统、应用及产品（Systems Applications and Products）</a></b></dt>
<dd>原名为“Systemanalyse und Programmentwicklung”，现改名为“Systems, Applications, and Products in Data Processing”，SAP 提供广泛使用的集成商务解决方案软件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_inception" name="inception">先启（inception）</a></b></dt>
<dd>Unified Process 的第一个阶段，在这个阶段中，上一代的种子构想（方案征求）至少已在内部得到拨款，准备工作就绪，可以进入<i><a  class="elementLink" href="#elaboration" guid="_yHhBUNnmEdmO6L4XMImrsA" >精化</a></i>阶段。</dd>
<dt><b><a id="_GLOSSARY_ITEM_thread" name="thread">线程</a></b></dt>
<dd><p>     <a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img height="16" alt="UML 图标" src="./../core.base_rup/customcategories/resources/uml.gif"     width="13" border="0" /></a> 在程序、动态模型或某种其他表现形式的控制流中的单一执行路径。还可以指作为轻量级进程实施的活动对象的构造型。请参阅：<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程（process）</a>。</p></dd>
<dt><b><a id="_GLOSSARY_ITEM_qualifier" name="qualifier">限定符（qualifier）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一个关联属性或属性元组，其值用来在??种关联关系中对与某个对象相关的对象组进行分区。</dd>
<dt><b><a id="_GLOSSARY_ITEM_timeboxing" name="timeboxing">限定时间（timeboxing）</a></b></dt>
<dd>RUP 中推荐的、用于管理迭代的时间表的方法：在最初建立迭代的范围和时间表之后，鼓励项目经理积极地管理该范围（以及提交给迭代的资源），以便满足计划的迭代结束日期，而不是在开发耗时超过计划值时推迟结束日期以适合最初计划的范围。在 RUP 中，对于管理可调整的时间表，缩减范围要优于增加资源。此方法的两个动机分别在于：使迭代的结果对于项目干系人可见，以及对迭代进行评估。这样，从中学到的教训可以应用到后续的迭代中。</dd>
<dt><b><a id="_GLOSSARY_ITEM_wire_frame" name="wire_frame">线框架</a></b></dt>
<dd><p>     在<a  class="elementLink" href="#user_experience" guid="_uukkQFq2EdqVb7jb1lK91g" >用户体验</a>环境中，屏幕的低精度原型。线框架可以是简单的铅笔草图（在集体讨论会话期间很有用）、计算机辅助绘图（Visio、Adobe Illustrator）或者甚至是 HTML 代码框架。线框架确定主要的用户界面元素、它们的相对大小和位置。没有颜色，只有几何图形。背景：类似于雕塑或浮雕的线框架。</p></dd>
<dt><b><a id="_GLOSSARY_ITEM_project_review_authority_pra" name="project_review_authority_pra">项目复审委员会（Project Review Authority，PRA）</a></b></dt>
<dd>项目经理向其汇报工作的组织实体。PRA 负责确保软件项目符合政策规定、惯例和标准。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stakeholder" name="stakeholder">项目干系人</a></b></dt>
<dd>会受到<a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >进程</a>结果（例如进程生成的<a  class="elementLink" href="#deliverable" guid="_yFbWoNnmEdmO6L4XMImrsA" >可交付成果</a>）重大影响的个人。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stakeholder_request" name="stakeholder_request">项目干系人请求（stakeholder request）</a></b></dt>
<dd>来自<i><a  class="elementLink" href="#stakeholder" guid="_yWHeDNnmEdmO6L4XMImrsA" >项目干系人</a></i>的各种专门类型的请求，例如，<i><a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" >变更请求</a>、<a  class="elementLink" href="#enhancement_request" guid="_yHhBXNnmEdmO6L4XMImrsA" >改进请求</a>、需求变更请求和<a  class="elementLink" href="#defect" guid="_yFRlptnmEdmO6L4XMImrsA" >缺陷</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_stakeholder_need" name="stakeholder_need">项目干系人需要（stakeholder need）</a></b></dt>
<dd>必须解决的业务或运作问题（或能够带来的商机），以此证明购买或使用物有所值。</dd>
<dt><b><a id="_GLOSSARY_ITEM_project_manager" name="project_manager">项目经理（project manager）</a></b></dt>
<dd>承担项目总体职责的角色。项目经理需要确保按照项目时间表、预算和质量要求来调度、分配并完成任务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_project" name="project">项目（project）</a></b></dt>
<dd>项目由相应的人员来执行，受到有限资源的约束，需要进行计划、执行和控制。项目是为创造独特的产品或服务而付出的暂时性努力。暂时指的是每个项目都有明确的起止时间。独特指的是该产品或服务以某种方式有别于所有其他类似的产品或服务。在实现组织的经营策略时，项目往往是非常关键的部分。</dd>
<dt><b><a id="_GLOSSARY_ITEM_messaging" name="messaging">消息传递（messaging）</a></b></dt>
<dd>分发式应用程序借以通过相互发送消息而进行通信所用的通信模型。消息通常是一个较短的信息包，它不一定需要答复。消息传递使用的是异步通信方法。消息也可是类中的一段 Java 代码，可以调用它并传递一组参数以执行特定任务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_message" name="message">消息（message） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 实例间进行信息传递的规范，并具有引起相应活动的期望。消息中可指定发出信号或调用操作。</dd>
<dt><b><a id="_GLOSSARY_ITEM_team_leader" name="team_leader">小组负责人（team leader）</a></b></dt>
<dd>团队负责人是项目管理和开发人员之间的纽带。团队负责人负责确保任务进行分配和监督，直至任务完成。他还负责确保开发人员遵循项目标准，遵守项目日程安排。</dd>
<dt><b><a id="_GLOSSARY_ITEM_protocol" name="protocol">协议（protocol）</a></b></dt>
<dd>用来在<i><a  class="elementLink" href="#capsule" guid="_x9YN5dnmEdmO6L4XMImrsA" >封装体</a></i>之间进行通信的一组兼容消息的规范。协议定义一组流入和外发消息类型（例如操作、信号），还可以定义一组序列图，以规定消息应遵循的顺序。协议也可定义一个状态机，以指定协议的参与者必须提供的抽象行为。</dd>
<dt><b><a id="_GLOSSARY_ITEM_protocol_tcp_ip" name="protocol_tcp_ip">协议（protocol，TCP/IP）</a></b></dt>
<dd>通过 Internet 在全球传递计算机消息的编程基础。它是定义 Internet 的一套协议。TCP/IP 软件最初是为 UNIX 操作系统而设计的，现今已可用于各种主要的计算机操作系统。要真正与 Internet 建立连接，您的计算机必须安装 TCP/IP 软件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_collaboration_diagram" name="collaboration_diagram">协作图（collaboration diagram）</a></b></dt>
<dd>此术语在 UML 2.0 中已变更为<i><a  class="elementLink" href="#communication_diagram" guid="_yBjjQNnmEdmO6L4XMImrsA" >通信图</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_collaboration" name="collaboration">协作（collaboration） </a></b></dt>
<dd>（1）它是对一组对象的描述，这些对象进行交互以在环境中实现某种行为。它描述组合在一起以达到某种目的的一组合作对象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_signal" name="signal">信号（signal） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对在实例间传送的异步激励的指定。信号可带有参数。</dd>
<dt><b><a id="_GLOSSARY_ITEM_formal_parameter" name="formal_parameter">形参（formal parameter）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 同义词：<i><a  class="elementLink" href="#parameter" guid="_yPjjBtnmEdmO6L4XMImrsA" >参数（parameter）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_behavior" name="behavior">行为（behavior）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 操作或事件（包括其结果在内）的可观察效果。</dd>
<dt><b><a id="_GLOSSARY_ITEM_behavioral_feature" name="behavioral_feature">行为特性（behavioral feature）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>的动态特性，例如<i><a  class="elementLink" href="#operation" guid="_yPQoFtnmEdmO6L4XMImrsA" >操作</a></i>或<i><a  class="elementLink" href="#method" guid="_yNUuY9nmEdmO6L4XMImrsA" >方法</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_virtual_machine_vm" name="virtual_machine_vm">虚拟机（virtual machine，VM）</a></b></dt>
<dd>执行其他计算机程序的软件程序。它使实际运行的这台机器（例如一台计算机）表现得就象是另一台实际机器在运行一样。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirements_tracing" name="requirements_tracing">需求跟踪（requirements tracing）</a></b></dt>
<dd>从某一<i><a  class="elementLink" href="#requirement" guid="_yTb9ednmEdmO6L4XMImrsA" >需求</a></i>到其他需求，以及其他工件和工件关联的项目元素的链接。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirements_management" name="requirements_management">需求管理（requirements management）</a></b></dt>
<dd>一种系统化的方法，用来引发、组织和记录系统的<a  class="elementLinkWithUserText" href="#software_requirement" guid="_yV0jG9nmEdmO6L4XMImrsA" ><i>软件需求</i></a>，并使客户和项目团队之间在这些需求的变更上达成并保持一致。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirement_type" name="requirement_type">需求类型（requirement type）</a></b></dt>
<dd>需求基于共同特征和属性的分类。有时需求类型基于需求源或影响区域，例如项目干系人需要、特性、用例、补充需求、文档需求、硬件需求、软件需求等等。需求还可以基于它们所代表的软件质量方面来分类，例如 <i><a  class="elementLinkWithUserText" href="#furps" guid="_yJmE-dnmEdmO6L4XMImrsA" >FURPS+</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirement_attribute" name="requirement_attribute">需求属性（requirement attribute）</a></b></dt>
<dd>与特定需求相关联的信息，它在该需求和其他项目元素（例如：优先级、时间表、状态、设计元素、资源、成本、危害）之间提供链接。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirements" name="requirements">需求（requirement）</a></b></dt>
<dd>软件工程流程中的一项<a  class="elementLink" href="#discipline" guid="_yGUuidnmEdmO6L4XMImrsA" >规程</a>，其目的在于定义系统应该执行的操作。最重要的活动是开发<a  class="elementLink" href="#vision" guid="_yboQKdnmEdmO6L4XMImrsA" >远景</a>、<a  class="elementLink" href="#use-case_model" guid="_ybBzOdnmEdmO6L4XMImrsA" >用例模型</a>和<i>补充规范</i>工件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_requirement" name="requirement">需求（requirement）</a></b></dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#software_requirement" guid="_yV0jG9nmEdmO6L4XMImrsA" ><i>软件需求（software requirement）</i></a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_de-marshal" name="de-marshal">序列化（de-marshal）</a></b></dt>
<dd>为使对象可编写为字节流而对对象进行的解构。另请参阅：<i><a  class="elementLink" href="#flatten" guid="_yJc7BdnmEdmO6L4XMImrsA" >序列化（flatten）</a>、<a  class="elementLink" href="#serialize" guid="_yVEVI9nmEdmO6L4XMImrsA" >序列化（serialize）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_flatten" name="flatten">序列化（flatten）</a></b></dt>
<dd>同义词：<a  class="elementLink" href="#de-marshal" guid="_yFbWo9nmEdmO6L4XMImrsA" >序列化（de-marshal）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_serialize" name="serialize">序列化（serialize）</a></b></dt>
<dd><a  class="elementLink" href="#de-marshal" guid="_yFbWo9nmEdmO6L4XMImrsA" >序列化（de-marshal）</a>的同义词。</dd>
<dt><b><a id="_GLOSSARY_ITEM_sequence_diagram" name="sequence_diagram">序列图（sequence diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示按时间顺序排列的对象交互的一种图。特别地，它显示了参与交互的对象以及交换的一系列消息。与通信图不同，序列图包括了时间顺序，但不包括对象关系。序列图可以通用形式（ 描述一般<i><a  class="elementLink" href="#scenario" guid="_yUxaM9nmEdmO6L4XMImrsA" >场景</a></i>）存在，也可以实例形式（描述一个场景实例）存在。序列图和通信图表达相似的信息，但显示方式不同。请参阅：<i><a  class="elementLink" href="#communication_diagram" guid="_yBjjQNnmEdmO6L4XMImrsA" >通信图（communication diagram）</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_20" name="IDX1_20">〔Y〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_evolutionary" name="evolutionary">演进方式（evolutionary）</a></b></dt>
<dd>一种迭代式开发策略，该策略承认用户的需要未得到完全理解，因而需求将在每一个后继迭代（<i><a  class="elementLinkWithUserText" href="#elaboration" guid="_yHhBUNnmEdmO6L4XMImrsA" >精化阶段</a></i>）中不断完善。</dd>
<dt><b><a id="_GLOSSARY_ITEM_evolution" name="evolution">演进（evolution）</a></b></dt>
<dd>软件在其初始开发周期之后的生命期，产品在其中取得发展的任何后继周期。</dd>
<dt><b><a id="_GLOSSARY_ITEM_acceptance" name="acceptance">验收（acceptance）</a></b></dt>
<dd>一项操作，客户通过该操作接受软件产品所有权（作为对合同的部分或完全履行）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_actor_class" name="business_actor_class">业务参与者类（business actor class）</a></b></dt>
<dd>定义一组业务参与者实例，其中每个业务参与者实例相对于业务而言都担任着相同的角色。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_actor_instance" name="business_actor_instance">业务参与者（实例）（business actor）</a></b></dt>
<dd>在业务之外与业务交互的某人或某事物。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_strategy" name="business_strategy">业务策略（business strategy）</a></b></dt>
<dd>业务策略定义原则和目标，以实现业务构想。它由一组长期的<a  class="elementLinkWithUserText" href="#business_objective" guid="_x87h8NnmEdmO6L4XMImrsA" ><i>业务目标</i></a>组成，这些业务目的将最终导致业务远景的实现。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_reengineering" name="business_reengineering">业务重建（business reengineering）</a></b></dt>
<dd>执行<i><a  class="elementLink" href="#business_engineering" guid="_x8onANnmEdmO6L4XMImrsA" >业务工程</a></i>，其中的变更工作包括以全面的观点来看待整个现有业务，并彻底想通为什么要这样做。您将置疑所有现存业务流程，并努力寻找重新构建这些流程的全新方法，以实现根本性改进。同一含义的其他名称还有业务流程重建（BPR）和流程创新。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_creation" name="business_creation">业务创建（business creation）</a></b></dt>
<dd>执行<a  class="elementLink" href="#business_engineering" guid="_x8onANnmEdmO6L4XMImrsA" >业务工程</a>，其中业务工程的目标是创建新的<a  class="elementLink" href="#business_process" guid="_x87h89nmEdmO6L4XMImrsA" >业务流程</a>、新的业务线或新的组织。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_analysis_model" name="business_analysis_model">业务分析模型（business analysis model）</a></b></dt>
<dd>描述<i><a  class="elementLinkWithUserText" href="#business_use-case_class" guid="_x9FS9tnmEdmO6L4XMImrsA" >业务用例</a></i>实现的一种<i><a  class="elementLink" href="#object_model" guid="_yOqyOdnmEdmO6L4XMImrsA" >对象模型</a></i>。同义词：<i>业务对象模型（business object model）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_improvement" name="business_improvement">业务改进（business improvement）</a></b></dt>
<dd>执行<i><a  class="elementLink" href="#business_engineering" guid="_x8onANnmEdmO6L4XMImrsA" >业务工程</a></i>，其中的变更工作仅限于局部而并不波及整个业务。它涉及到削减成本、缩短交付周期以及监督服务和质量。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_engineering" name="business_engineering">业务工程（business engineering）</a></b></dt>
<dd>公司用于根据特定目标来设计其业务的一组技术。业务工程技术可用于<i><a  class="elementLink" href="#business_reengineering" guid="_x87h-dnmEdmO6L4XMImrsA" >业务重建</a></i>、<a  class="elementLink" href="#business_improvement" guid="_x8yYBNnmEdmO6L4XMImrsA" >业务改进</a>和<a  class="elementLink" href="#business_creation" guid="_x8e2CdnmEdmO6L4XMImrsA" >业务创建</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_worker" name="business_worker">业务工作者（business worker）</a></b></dt>
<dd>业务工作者表示业务中的一个或一组角色。参与<a  class="elementLinkWithUserText" href="#business_use-case_realization" guid="_x9Oc5tnmEdmO6L4XMImrsA" ><i>业务用例实现</i></a>实现时，一个业务工作者与其他业务工作者交互，并操纵<a  class="elementLinkWithUserText" href="#business_entity" guid="_x8onA9nmEdmO6L4XMImrsA" ><i>业务实体</i></a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_rule" name="business_rule">业务规则（business rule）</a></b></dt>
<dd>在业务之中必须满足的策略或条件的声明。可在模型和／或文档中捕获业务规则。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_modeling" name="business_modeling">业务建模（business modeling）</a></b></dt>
<dd>包含您可用来对业务进行可视化建模的所有建模技术。这些是您可用于执行<i><a  class="elementLink" href="#business_engineering" guid="_x8onANnmEdmO6L4XMImrsA" >业务工程</a></i>的技术的子集。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_process_engineering" name="business_process_engineering">业务流程设计（business process engineering）</a></b></dt>
<dd>请参阅：<a  class="elementLink" href="#business_engineering" guid="_x8onANnmEdmO6L4XMImrsA" >业务工程（business engineering）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_process" name="business_process">业务流程（business process）</a></b></dt>
<dd>一组逻辑相关活动，它们使用组织的资源为支持组织的目标提供规定的结果。在 RUP 中，我们使用<i><a  class="elementLinkWithUserText" href="#business_use-case_class" guid="_x9FS9tnmEdmO6L4XMImrsA" >业务用例</a></i>（显示业务的预期行为）和<i><a  class="elementLinkWithUserText" href="#business_use-case_realization" guid="_x9Oc5tnmEdmO6L4XMImrsA" >业务用例实现</a></i>（显示该行为是如何通过<i><a  class="elementLinkWithUserText" href="#business_worker" guid="_x9Oc6dnmEdmO6L4XMImrsA" >业务工作者</a></i>和<a  class="elementLinkWithUserText" href="#business_entity" guid="_x8onA9nmEdmO6L4XMImrsA" ><i>业务实体</i></a>实现的）来定义业务流程。另请参阅：<i><a  class="elementLink" href="#process" guid="_yQ5m2NnmEdmO6L4XMImrsA" >流程（process）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_goal" name="business_goal">业务目标（business goal）</a></b></dt>
<dd>业务目标是业务必须满足的需求。业务目标描述在将来的某个时间点特定度量所需要的值，因此可以用来计划和管理业务的活动。另请参阅<i><a  class="elementLink" href="#business_objective" guid="_x87h8NnmEdmO6L4XMImrsA" >业务目标（business objective）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_objective" name="business_objective">业务目标（business objective）</a></b></dt>
<dd>表示高级别<a  class="elementLinkWithUserText" href="#business_goal" guid="_x8yYAdnmEdmO6L4XMImrsA" ><i>业务目标（business goal）</i></a>的常用术语。由于业务目的通常是抽象的，因此它们难以度量，而会转换成更方便度量的较低层次的业务目标。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_entity" name="business_entity">业务实体（business entity）</a></b></dt>
<dd>业务实体代表由<a  class="elementLinkWithUserText" href="#business_actor_class" guid="_x8e2ANnmEdmO6L4XMImrsA" ><i>业务参与者</i></a>和<a  class="elementLinkWithUserText" href="#business_worker" guid="_x9Oc6dnmEdmO6L4XMImrsA" ><i>业务工作者</i></a>操纵的重要持久的信息段。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_event" name="business_event">业务事件（business event）</a></b></dt>
<dd>业务事件描述在空间和时间上发生的重大事情，该事件对于业务很重要。业务事件用于在业务流程之间发送信号，通常与<a  class="elementLinkWithUserText" href="#business_entity" guid="_x8onA9nmEdmO6L4XMImrsA" ><i>业务实体</i></a>相关联。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_architecture" name="business_architecture">业务体系结构（business architecture）</a></b></dt>
<dd>业务体系结构是组织好的一组元素，元素相互之间具有清晰的关系，它们一起组成了一个由其功能决定的一个整体。这些元素代表业务的组织和行为结构，并显示业务的关键流程和结构的抽象。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_system" name="business_system">业务系统（business system）</a></b></dt>
<dd>业务系统封装一组共同实现特定目的的角色和资源，并定义一组用来实现目的的职责。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_use-case_package" name="business_use-case_package">业务用例包（business use-case package）</a></b></dt>
<dd>业务用例包是业务用例、业务参与者、关系、图和其他包的集合，通过将其划分为若干个较小部分来建立业务用例模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_use-case_model" name="business_use-case_model">业务用例模型（business use-case model）</a></b></dt>
<dd>以业务为目标的功能的模型。业务用例模型被用作一种基本输入，以确定组织的各个角色和可交付工件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_use-case_instance" name="business_use-case_instance">业务用例实例（business use-case instance）</a></b></dt>
<dd>由生成对特定业务参与者而言有价值的可观察结果的业务所执行的操作序列。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_use-case_realization" name="business_use-case_realization">业务用例实现（business use-case realization）</a></b></dt>
<dd>业务用例实现描述了在<i><a  class="elementLink" href="#business_analysis_model" guid="_x8e2A9nmEdmO6L4XMImrsA" >业务分析模型</a></i>中如何根据协作业务对象来实现特定业务用例的工作流程。</dd>
<dt><b><a id="_GLOSSARY_ITEM_business_use-case_class" name="business_use-case_class">业务用例（类）（business use-case）</a></b></dt>
<dd>一个业务用例定义一组<i><a  class="elementLinkWithUserText" href="#business_use-case_instance" guid="_x9FS-dnmEdmO6L4XMImrsA" >业务用例实例</a></i>，其中每个实例都是业务执行的一个操作序列，并将生成特定业务参与者可观察到的结果值。业务用例类包含所有与生成“可观察到的结果值”有关的主工作流程和备用工作流程。</dd>
<dt><b><a id="_GLOSSARY_ITEM_dependency" name="dependency">依赖关系（dependency） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 两个<i><a  class="elementLinkWithUserText" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >建模元素</a></i>之间的关系，其中，一个建模元素（独立元素）的变更将会影响到另一建模元素（相关元素）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_transition" name="transition">移交（transition）</a></b></dt>
<dd>流程的第四个阶段，在该阶段将向用户群交付软件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_published_model" name="published_model">已发布模型（published model）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 已定型的模型，可用于对存储库进行实例化，并支持定义其他模型。已定型模型的模型元素将无法变更。</dd>
<dt><b><a id="_GLOSSARY_ITEM_asynchronous_action" name="asynchronous_action">异步操作（asynchronous action）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种请求，发送此类请求时发送对象不会暂停来等待结果。请对比：<i><a  class="elementLink" href="#synchronous_action" guid="_yXJ_2dnmEdmO6L4XMImrsA" >同步操作（synchronous action）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_internet_protocol" name="internet_protocol">因特网协议（Internet Protocol）</a></b></dt>
<dd>提供基本 Internet 功能的协议。</dd>
<dt><b><a id="_GLOSSARY_ITEM_internet_inter-orb_protocol_iiop" name="internet_inter-orb_protocol_iiop">因特网 ORB 间协议（Internet Inter-ORB Protocol，IIOP）</a></b></dt>
<dd>业界标准协议，定义如何通过 TCP/IP 网络交换通用 ORB 间协议（GIOP）消息。IIOP 使得 Internet 本身即可用作主干 ORB，其他 ORB 可借此进行桥接。</dd>
<dt><b><a id="_GLOSSARY_ITEM_internet" name="internet">因特网（internet）</a></b></dt>
<dd>所有使用 TCP/IP 协议的众多互连网络的集合，从二十世纪六十年代末、七十年代初的 ARPANET 发展而成。</dd>
<dt><b><a id="_GLOSSARY_ITEM_reference" name="reference">引用（reference）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> (1) 模型元素的符号。</dd>
<dt><b><a id="_GLOSSARY_ITEM_application_programming_interface" name="application_programming_interface">应用程序编程接口（application programming interface）</a></b></dt>
<dd>使应用程序能够相互通信的软件接口。API 是一组编程语言结构或语句，可以代码编入应用程序中，以获取由底层操作系统或服务程序提供的特定功能和服务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_application" name="application">应用程序（application）</a></b></dt>
<dd>（将新技术）投入使用的行为：应用技术的行为。</dd>
<dt><b><a id="_GLOSSARY_ITEM_swimlane" name="swimlane">泳道（swimlane）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLinkWithUserText" href="#activity_graph" guid="_x5Duk9nmEdmO6L4XMImrsA" >活动图</a></i>上的一个分区，用于组织操作的职责。泳道通常对应于业务模型中的组织单元。请参阅：<i><a  class="elementLink" href="#partition" guid="_yPtUCdnmEdmO6L4XMImrsA" >分区（partition）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_user_interface" name="user_interface">用户界面（user interface）</a></b></dt>
<dd>（1）使用户可以和计算机进行交互的硬件和／或软件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_user_experience" name="user_experience">用户体验</a></b></dt>
<dd><p>     (1) 来自 Nielsen Norman Group（http://www.nngroup.com/about/userexperience.html）：“用户体验”包含了最终用户与公司、公司服务以及公司产品交互的所有方面。典型用户体验的首要需求是满足客户的确切需要，而不会有忙乱或干扰。接下来是简洁和精美，使拥有产品和使用产品成为一种享受。真正的用户体验远不止仅满足客户提出的需求或仅提供核对表功能部件。为了在公司的产品中实现高质量的用户体验，必须无缝整合多学科的服务，包括工程、销售、图形和产业设计，以及接口设计。</p> <p>     (2) 用户体验是关于可用性的，它比<a  class="elementLink" href="#user_interface" guid="_ybLkPNnmEdmO6L4XMImrsA" >用户界面</a>具有更广的范围。它包括应用程序的外观；而不仅仅是用户界面从功能角度提供的信息。但是，如果用户体验涉及 UI，就会存在一个 UI 组件。</p></dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_package" name="use-case_package">用例包（use-case package）</a></b></dt>
<dd>用例包是用例、参与者、关系、图和其他包的集合，用于通过将用例模型分成较小的部分来构造用例模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_section" name="use-case_section">用例段（use-case section）</a></b></dt>
<dd>用例段是用例的任何一段，包括前置条件、后置条件、子流、步骤和文本。用例段可用作<i><a  class="elementLinkWithUserText" href="#traceability_item" guid="_yY8vk9nmEdmO6L4XMImrsA" >可跟踪性项</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_model" name="use-case_model">用例模型（use-case model）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 从<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>方面描述系统的功能<i><a  class="elementLinkWithUserText" href="#requirement" guid="_yTb9ednmEdmO6L4XMImrsA" >需求</a></i>的模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_instance" name="use-case_instance">用例实例（use-case instance）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>中指定的操作序列的执行。用例的一个实例。<br /> 用例实例是“经历”用例的具体的“端对端”路径 － <i><a  class="elementLinkWithUserText" href="#actor_class" guid="_x5NfkNnmEdmO6L4XMImrsA" >参与者</a></i>使用特定人员（参与者实例）替代，同时提供特定的值和响应，并且用例的一个或多个可能的流中只有单个路径被经历。另请参阅：<i><a  class="elementLink" href="#scenario" guid="_yUxaM9nmEdmO6L4XMImrsA" >场景（scenario）</a>、<a  class="elementLink" href="#test_scenario" guid="_yYWSotnmEdmO6L4XMImrsA" >测试场景（test scenario）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_realization" name="use-case_realization">用例实现（use-case realization）</a></b></dt>
<dd>用例实现描述如何在<i><a  class="elementLink" href="#design_model" guid="_yF4CltnmEdmO6L4XMImrsA" >设计模型</a></i>中根据协作的对象来实现特定用例。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_view" name="use-case_view">用例视图（use-case view）</a></b></dt>
<dd>一种描述在系统中如何执行关键用例的<i><a  class="elementLink" href="#architectural_view" guid="_x7JZSdnmEdmO6L4XMImrsA" >体系结构视图</a></i>，主要侧重于对体系结构具有重要影响的组件（对象、任务、节点）。在 RUP 中，它是<i><a  class="elementLink" href="#use-case_model" guid="_ybBzOdnmEdmO6L4XMImrsA" >用例模型</a></i>的视图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_diagram" name="use-case_diagram">用例图（use-case diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示系统中<i><a  class="elementLinkWithUserText" href="#actor_class" guid="_x5NfkNnmEdmO6L4XMImrsA" >参与者</a></i>和<i><a  class="elementLinkWithUserText" href="#use-case_class" guid="_ybBzMNnmEdmO6L4XMImrsA" >用例</a></i>之间的关系的图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_use-case_class" name="use-case_class">用例（类）（use-case）</a></b></dt>
<dd>系统行为的描述，采用操作序列的形式。用例应为<i><a  class="elementLinkWithUserText" href="#actor_instance" guid="_x5DultnmEdmO6L4XMImrsA" >参与者</a></i>得出值的可观察结果。用例包含所有与产生“值的可观察结果”有关的事件流，包括备用流和异常流在内。<br /> 较正式的说法是，用例定义一组<i><a  class="elementLinkWithUserText" href="#use-case_instance" guid="_ybBzNtnmEdmO6L4XMImrsA" >用例实例</a></i>或<i><a  class="elementLinkWithUserText" href="#scenario" guid="_yUxaM9nmEdmO6L4XMImrsA" >场景</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_usage" name="usage">用途（usage） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种依赖关系，其中一个元素（<i><a  class="elementLink" href="#client" guid="_yBQBQNnmEdmO6L4XMImrsA" >客户端</a></i>）需要存在另一个元素（<i><a  class="elementLink" href="#supplier" guid="_yXJ_0NnmEdmO6L4XMImrsA" >供应端</a></i>）才能正确运行或实施。</dd>
<dt><b><a id="_GLOSSARY_ITEM_semantic_variation_point" name="semantic_variation_point">语义分歧点（semantic variation point）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#metamodel" guid="_yNK9bNnmEdmO6L4XMImrsA" >元模型</a></i>的语义中的分歧点。它为元模型语义的解释提供了有意图的自由度。</dd>
<dt><b><a id="_GLOSSARY_ITEM_domain_name_server" name="domain_name_server">域名服务器（domain name server）</a></b></dt>
<dd>用于转换域名的系统，例如将 www.software.ibm.com 转换为数字化的 IP 地址，如 123.45.67.8。</dd>
<dt><b><a id="_GLOSSARY_ITEM_domain_model" name="domain_model">域模型（domain model）</a></b></dt>
<dd>在 RUP 中，域模型是<i><a  class="elementLink" href="#business_analysis_model" guid="_x8e2A9nmEdmO6L4XMImrsA" >业务分析模型</a></i>的子集。</dd>
<dt><b><a id="_GLOSSARY_ITEM_domain_database" name="domain_database">域（数据库）（domain）</a></b></dt>
<dd>一种用户定义的数据类型，它为数据库中表的列定义值的有效范围。</dd>
<dt><b><a id="_GLOSSARY_ITEM_domain" name="domain">域（domain）</a></b></dt>
<dd><p> (1) 以一系列相关值来体现其特点的知识或活动区域。 </p> <p> (2) 相关<a  class="elementLink"     href="#work_product" guid="_H4JXwB_SEdq6CKKKq4D7YA" >工作产品</a>的可优化层次结构分组。&nbsp; </p></dd>
<dt><b><a id="_GLOSSARY_ITEM_metaobject" name="metaobject">元对象（metaobject）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 元建模语言中所有元实体的通用术语。例如，元类型、元类、元属性以及元关联关系。</dd>
<dt><b><a id="_GLOSSARY_ITEM_metaclass" name="metaclass">元类（metaclass）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 其实例为类的一种类。元类通常用于构造<i><a  class="elementLinkWithUserText" href="#metamodel" guid="_yNK9bNnmEdmO6L4XMImrsA" >元模型</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_metamodel" name="metamodel">元模型（metamodel）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种模型，定义用于表示<i><a  class="elementLink" href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>的语言。</dd>
<dt><b><a id="_GLOSSARY_ITEM_green-field_development" name="green-field_development">原始开发（green-field development）</a></b></dt>
<dd>“从头开始”开发，与“现有系统演进”或“重新设计旧片段”相对。此术语源自在杂草丛生的未开发土地上新建工厂时所发生的转变（英文字面原意是绿地开发）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_element" name="element">元素（element）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>的原子组成。</dd>
<dt><b><a id="_GLOSSARY_ITEM_prototype" name="prototype">原型（prototype）</a></b></dt>
<dd>不必进行<i><a  class="elementLink" href="#change_management" guid="_x9rI0tnmEdmO6L4XMImrsA" >变更管理</a></i>和<i><a  class="elementLinkWithUserText" href="#configuration_management" guid="_yEPD19nmEdmO6L4XMImrsA" >配置控制</a></i>的发行版。</dd>
<dt><b><a id="_GLOSSARY_ITEM_meta-metamodel" name="meta-metamodel">元-元模型（meta-metamodel）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种模型，定义用于表示<i><a  class="elementLink" href="#metamodel" guid="_yNK9bNnmEdmO6L4XMImrsA" >元模型</a></i>的语言。元-元模型与元模型之间的关系类似于元模型与<i><a  class="elementLink" href="#model" guid="_yNefY9nmEdmO6L4XMImrsA" >模型</a></i>之间的关系。</dd>
<dt><b><a id="_GLOSSARY_ITEM_remote_method_invocation_rmi" name="remote_method_invocation_rmi">远程方法调用（Remote Method Invocation，RMI）</a></b></dt>
<dd>JDK 1.1 中的 API，用于编写分发式的 Java 程序，让远程 Java 对象的方法可由其他 Java 虚拟机访问。</dd>
<dt><b><a id="_GLOSSARY_ITEM_remote_procedure_call_rpc" name="remote_procedure_call_rpc">远程过程调用（Remote Procedure Call，RPC）</a></b></dt>
<dd>一个通信模型，其中，请求是通过函数调用向分发在其他位置的过程发出。过程的位置对调用方应用程序来说是透明的。</dd>
<dt><b><a id="_GLOSSARY_ITEM_vision" name="vision">远景（vision）</a></b></dt>
<dd>待开发产品的用户或<i><a  class="elementLinkWithUserText" href="#customer" guid="_yE05s9nmEdmO6L4XMImrsA" >客户</a></i>视图，它是在关键<i><a  class="elementLinkWithUserText" href="#stakeholder_need" guid="_yWQn8NnmEdmO6L4XMImrsA" >项目干系人需要</a></i>和系统<i><a  class="elementLinkWithUserText" href="#feature" guid="_yJTKANnmEdmO6L4XMImrsA" >特性</a></i>的级别上指定的。</dd>
<dt><b><a id="_GLOSSARY_ITEM_constraint" name="constraint">约束（constraint）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 语义条件或限制。某些约束已在 UML 中预定义，其他的可由用户定义。约束是 UML 中的三个扩展性机制之一。请参阅：<i><a  class="elementLink" href="#tagged_value" guid="_yXc6wNnmEdmO6L4XMImrsA" >标注值（tagged value）</a>、<a  class="elementLink" href="#stereotype" guid="_yWkJ89nmEdmO6L4XMImrsA" >构造型（stereotype）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_run_time" name="run_time">运行时（run time）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 计算机程序执行的时间段。请对比：<i><a  class="elementLink" href="#modeling_time" guid="_yNxaUNnmEdmO6L4XMImrsA" >建模时（modeling time）</a></i>。</dd>


<h2><a id="_GLOSSARY_ITEM_IDX1_21" name="IDX1_21">〔Z〕</a></h2>

<dt><b><a id="_GLOSSARY_ITEM_increment" name="increment">增量（increment）</a></b></dt>
<dd>在后续<i><a class="elementLinkWithUserText" href="./../../../core.base_rup/guidances/termdefinitions/iteration_F234447B.html" guid="_yL1go9nmEdmO6L4XMImrsA">迭代</a></i>结束时，两个发行版之间存在的差异（<i>变化量</i>）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_listener" name="listener">侦听器（listener）</a></b></dt>
<dd>JDK 1.1 中接收并处理事件的一个类。</dd>
<dt><b><a id="_GLOSSARY_ITEM_guidance" name="guidance">指导信息（guidance）</a></b></dt>
<dd>归纳所有形式的内容，其主要用途是提供有关其他 <a  class="elementLink" href="#uma" guid="_cj6jkB_PEdq6CKKKq4D7YA" >UMA</a> 元素的说明。指导信息本身就是<a  class="elementLink" href="#content_element" guid="_N8x34B_LEdq6CKKKq4D7YA" >内容元素</a>，可将指导信息与其他指导信息关联。</dd>
<dt><b><a id="_GLOSSARY_ITEM_direct_access_storage_device_dasd" name="direct_access_storage_device_dasd">直接访问存储设备（direct access storage device，DASD）</a></b></dt>
<dd>允许直接访问存储内容的设备，例如磁盘驱动器（与磁带机相反，后者只能按顺序访问）。</dd>
<dt><b><a id="_GLOSSARY_ITEM_responsibility" name="responsibility">职责（responsibility） </a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 分类器的约定或义务。</dd>
<dt><b><a id="_GLOSSARY_ITEM_value" name="value">值（value）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 类型域的一个元素。</dd>
<dt><b><a id="_GLOSSARY_ITEM_quality_assurance" name="quality_assurance">质量保证（quality assurance）</a></b></dt>
<dd>所有对于提供足够的证据必要的计划和系统操作，其中的证据是为了证明产品或服务将满足给定的质量需求。</dd>
<dt><b><a id="_GLOSSARY_ITEM_quality_risk" name="quality_risk">质量风险（quality risk）</a></b></dt>
<dd>很可能对软件产品的质量产生不利影响的即将来临或持续发生的事项。虽然可以论证用来评估质量风险的质量的方方面面是无穷尽的，但 RUP 使用 <i><a  class="elementLinkWithUserText" href="#furps" guid="_yJmE-dnmEdmO6L4XMImrsA" >FURPS+</a></i> 需求模型作为讨论质量各方面的基础。</dd>
<dt><b><a id="_GLOSSARY_ITEM_quality" name="quality">质量（quality）</a></b></dt>
<dd>产品或服务的特性和特征的全体，它们均承担一定的能力来满足声称或暗示的需要。</dd>
<dt><b><a id="_GLOSSARY_ITEM_cycle" name="cycle">周期（cycle）</a></b></dt>
<dd>同义词：<i><a  class="elementLink" href="#lifecycle" guid="_yMbWhtnmEdmO6L4XMImrsA" >生命周期（lifecycle）</a>、<a  class="elementLink" href="#development_cycle" guid="_yGK9gtnmEdmO6L4XMImrsA" >开发周期（development cycle）</a></i>。请另见：<i><a  class="elementLink" href="#test_cycle" guid="_yX5msNnmEdmO6L4XMImrsA" >测试周期</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_primary_key" name="primary_key">主键（primary key）</a></b></dt>
<dd>数据库表中，用来标识表中的行的一列或一组列。</dd>
<dt><b><a id="_GLOSSARY_ITEM_home_page" name="home_page">主页（home page）</a></b></dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#start_page" guid="_yWQn9tnmEdmO6L4XMImrsA" >起始页（start page）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_comment" name="comment">注释（comment）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 附加到一个元素或一组元素的注解。注释不具有语义。请对比：<i><a  class="elementLink" href="#constraint" guid="_yEPD2tnmEdmO6L4XMImrsA" >约束（constraint）</a>。</i></dd>
<dt><b><a id="_GLOSSARY_ITEM_statechart_diagram" name="statechart_diagram">状态表图（statechart diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示状态机的一种图。请参阅：<i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机（state machine）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_state_machine" name="state_machine">状态机（state machine）</a></b></dt>
<dd>状态机指定<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>的行为、定义其对事件的响应以及对象的生命周期。</dd>
<dt><b><a id="_GLOSSARY_ITEM_state" name="state">状态（state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对象生命期中的条件或情景，其中对象满足某个条件、执行某个活动或等待某个事件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_resource_file" name="resource_file">资源文件（resource file）</a></b></dt>
<dd>引用自 Java 程序的文件。示例包括图形和音频文件。</dd>
<dt><b><a id="_GLOSSARY_ITEM_child" name="child">子代（child）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系</a></i>中，对另一个元素（父元素）的专门化。请参阅：<i><a  class="elementLink" href="#subclass" guid="_yW3E5tnmEdmO6L4XMImrsA" >子类（subclass）</a>、<a  class="elementLink" href="#subtype" guid="_yXA15dnmEdmO6L4XMImrsA" >子类型（subtype）</a></i>。请对比：<i><a  class="elementLink" href="#parent" guid="_yPtUANnmEdmO6L4XMImrsA" >父代（parent）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_subactivity_state" name="subactivity_state">子活动状态（subactivity state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#activity_graph" guid="_x5Duk9nmEdmO6L4XMImrsA" >活动图</a></i>中的一种<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>，表示有一定持续时间的非原子步骤序列的执行。</dd>
<dt><b><a id="_GLOSSARY_ITEM_submachine_state" name="submachine_state">子机状态（submachine state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>中的一种<i><a  class="elementLink" href="#state" guid="_yWQn-dnmEdmO6L4XMImrsA" >状态</a></i>，它等价于<i><a  class="elementLink" href="#composite_state" guid="_yD8I49nmEdmO6L4XMImrsA" >组合状态</a></i>，但其内容由另一个状态机来描述。</dd>
<dt><b><a id="_GLOSSARY_ITEM_subtype" name="subtype">子类型（subtype）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在泛化关系中，对另一个类（超类型）的专门化。请参阅：<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>。请对比：<i><a  class="elementLink" href="#supertype" guid="_yXA169nmEdmO6L4XMImrsA" >超类型（supertype）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_subclass" name="subclass">子类（subclass）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 在泛化关系中，对另一个类（超类）的专门化。请参阅：<i><a  class="elementLink" href="#generalization" guid="_yJv189nmEdmO6L4XMImrsA" >泛化关系（generalization）</a></i>。请对比：<i><a  class="elementLink" href="#superclass" guid="_yXA16NnmEdmO6L4XMImrsA" >超类（superclass）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_subsystem" name="subsystem">子系统（subsystem）</a></b></dt>
<dd>一种<i><a  class="elementLink" href="#model_element" guid="_yNnpVdnmEdmO6L4XMImrsA" >模型元素</a></i>，它具有<i><a  class="elementLink" href="#package" guid="_yPjjANnmEdmO6L4XMImrsA" >包</a></i>的语义，因此可以包含其他模型元素，也具有<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>的语义，因此它具有行为。子系统的行为由它所包含的类或其他子系统提供。子系统实现一个或多个接口，这些接口定义子系统可以执行的行为。</dd>
<dt><b><a id="_GLOSSARY_ITEM_substate" name="substate">子状态（substate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 属于<i><a  class="elementLink" href="#composite_state" guid="_yD8I49nmEdmO6L4XMImrsA" >组合状态</a></i>的一种状态。请参阅：<i><a  class="elementLink" href="#concurrent_substate" guid="_yEFS3NnmEdmO6L4XMImrsA" >并行子状态（concurrent substate）</a></i>、<i><a  class="elementLink" href="#disjoint_substate" guid="_yGUujNnmEdmO6L4XMImrsA" >互斥子状态（disjoint substate）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_field" name="field">字段（field）</a></b></dt>
<dd>请参阅：<a  class="elementLink" href="#attribute" guid="_x7vPJtnmEdmO6L4XMImrsA" >属性（attribute）</a>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_string" name="string">字符串（string）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 文本字符串。字符串具体表示取决于实现方法，可能会包含支持国际通用字符和图形的字符集。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composite_aggregation" name="composite_aggregation">组合关系（composite aggregation）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 同义词：<i><a  class="elementLink" href="#composition" guid="_yD8I6dnmEdmO6L4XMImrsA" >组合（composition）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composite_state" name="composite_state">组合状态（composite state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 包含并发（正交）子状态或串行（互斥）子状态的状态。请参阅：<i><a  class="elementLink" href="#substate" guid="_yW3E7NnmEdmO6L4XMImrsA" >子状态（substate）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composite_substate" name="composite_substate">组合子状态（composite substate）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML图标" width="13" height="16" /></a><i><a  class="elementLink" href="#substate" guid="_yW3E7NnmEdmO6L4XMImrsA" >子状态</a></i>可以与同一组合状态中包含的其他子状态保存在一起。请参阅：<i><a  class="elementLink" href="#composite_state" guid="_yD8I49nmEdmO6L4XMImrsA" >组合状态</a></i>。同义词：<i>区域（region）</i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composite_bean" name="composite_bean">组合 Bean（composite bean）</a></b></dt>
<dd>由其他 Bean 构成的 Bean。组合 Bean 可以包含可见 Bean 和／或不可见 Bean。另请参阅：<i><a  class="elementLink" href="#bean" guid="_x75AKdnmEdmO6L4XMImrsA" >bean</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composite_class" name="composite_class">组合 [类]（composite）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 通过组合关系与一个或多个类关联的<i><a  class="elementLink" href="#class" guid="_x9052dnmEdmO6L4XMImrsA" >类</a></i>。请参阅：<i><a  class="elementLink" href="#composition" guid="_yD8I6dnmEdmO6L4XMImrsA" >组合（composition）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_composition" name="composition">组合（composition）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> <i><a  class="elementLink" href="#aggregation" guid="_x5zVcNnmEdmO6L4XMImrsA" >聚集</a></i>关联关系的一种形式，具有很强的所有权，而且与整体生存期的某一段重合。具有不固定的<i><a  class="elementLink" href="#multiplicity" guid="_yN6kQ9nmEdmO6L4XMImrsA" >多重性</a></i>的部分可在<i><a  class="elementLinkWithUserText" href="#composite_class" guid="_yDyX4tnmEdmO6L4XMImrsA" >组合</a></i>自身之后创建，但一旦创建就与组合共存亡；即它们具有同样的生存期。这样的部件也可以在组装消亡之前明确删除。组装可以是递归的。另请参阅：<i><a  class="elementLink" href="#composite_aggregation" guid="_yDyX5dnmEdmO6L4XMImrsA" >组合关系（composite aggregation）</a></i>。</dd>
<dt><b><a id="_GLOSSARY_ITEM_component_model" name="component_model">组件模型（component model）</a></b></dt>
<dd>一种体系结构和 API，允许开发人员确定可组合在一起来创建程序的可重用代码段。VisualAge for Java 使用 JavaBean 组件模型。</dd>
<dt><b><a id="_GLOSSARY_ITEM_component_diagram" name="component_diagram">组件图（component diagram）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 显示<i><a  class="elementLinkWithUserText" href="#component" guid="_yCcUENnmEdmO6L4XMImrsA" >组件</a></i>之间的组织和依赖关系的图。</dd>
<dt><b><a id="_GLOSSARY_ITEM_component" name="component">组件（component） </a></b></dt>
<dd>系统中相当重要的、几乎是独立的可替换部分，它在明确定义的<i><a  class="elementLink" href="#architecture" guid="_x7SjMNnmEdmO6L4XMImrsA" >体系结构</a></i>的环境中实现确切的功能。组件符合并提供一组<i><a  class="elementLinkWithUserText" href="#interface" guid="_yLPDudnmEdmO6L4XMImrsA" >接口</a></i>的实现。</dd>
<dt><b><a id="_GLOSSARY_ITEM_organization_unit" name="organization_unit">组织单元（organization unit）</a></b></dt>
<dd>组织的主要组件，它为组织的管理提供环境。组织结构使父单元与与父单元在层次结构中的下级相关，且每个单元负责其他业务组件的集合 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >MARS00</a>]。请参阅：<i><a  class="elementLink" href="#business_system" guid="_x9FS89nmEdmO6L4XMImrsA" >业务系统（business system）</a></i></dd>
<dt><b><a id="_GLOSSARY_ITEM_final_state" name="final_state">最终状态（final state）</a></b></dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 一种特殊的状态，它表示包含的<i><a  class="elementLink" href="#composite_state" guid="_yD8I49nmEdmO6L4XMImrsA" >组合状态</a></i>或整个<i><a  class="elementLink" href="#state_machine" guid="_yWaY8NnmEdmO6L4XMImrsA" >状态机</a></i>已完成。</dd>



<dt>
<b><a id="_GLOSSARY_ITEM_A" name="A">A</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_abc" name="abc">ABC</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#activity-based_costing" guid="_x459ldnmEdmO6L4XMImrsA" >基于活动的成本核算（activity-based costing）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_abm" name="abm">ABM</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#activity-based_management" guid="_x5DukNnmEdmO6L4XMImrsA" >基于活动的管理（activity-based management）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_accessor_methods" name="accessor_methods">accessor 方法（accessor methods）</a></b>
</dt>
<dd>对象提供的方法，用于定义其实例变量的接口。用于返回实例变量值的存取器方法称为获取方法或获取器方法；用于为实例变量赋值的存取器方法称为设置方法或设置器方法。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_acl" name="acl">ACL</a></b>
</dt>
<dd>访问控制列表（Access control list）。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_api" name="api">API</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#application_programming_interface" guid="_x6_oTNnmEdmO6L4XMImrsA" >应用程序编程接口（application programming interface）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_appc" name="appc">APPC</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#advanced_program-to-program_communication" guid="_x5gahtnmEdmO6L4XMImrsA" >高级程序间通信（advanced program-to-program communication）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_applet" name="applet">applet</a></b>
</dt>
<dd>设计在 Web 浏览器之中运行的 Java 程序。请对比：<i><a  class="elementLink" href="#application" guid="_x6_oSdnmEdmO6L4XMImrsA" >应用程序（application）</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ascii" name="ascii">ASCII</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#american_standard_code_for_information_interchange" guid="_x5zVc9nmEdmO6L4XMImrsA" >美国信息交换标准码（american standard code for information interchange）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_asp" name="asp">ASP</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#active_server_page" guid="_x4nCoNnmEdmO6L4XMImrsA" >活动服务器页面（Active Server Page，ASP）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_B" name="B">B</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_basic" name="basic">basic</a></b>
</dt>
<dd>初学者通用符号指令码<i>，</i>一种编程语言。请参阅：<a  class="elementLink" href="#vb" guid="_ybVVOdnmEdmO6L4XMImrsA" >VB</a>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_bean" name="bean">Bean</a></b>
</dt>
<dd>可用于构建应用程序的小组件。请参阅：<a  class="elementLink" href="#javabean" guid="_yL-qmdnmEdmO6L4XMImrsA" >JavaBean</a>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_beaninfo" name="beaninfo">BeanInfo</a></b>
</dt>
<dd>Bean 的伴生类，确定可访问的一组方法，这些方法可以检索有关 Bean 的属性、事件和方法的信息。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_beta_testing" name="beta_testing">Beta 测试（beta testing）</a></b>
</dt>
<dd>发行之前的测试，目的在于让一部分抽样选取的目标客户群来试用产品。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_C" name="C">C</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cbd" name="cbd">CBD</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#component-based_development_cbd" guid="_yCcUGdnmEdmO6L4XMImrsA" ><i>基于组件的开发（component-based development）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ccb" name="ccb">CCB</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#change_control_board_ccb" guid="_x9h-7NnmEdmO6L4XMImrsA" ><i>变更控制委员会（change control board）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cdr" name="cdr">CDR</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#critical_design_review_cdr" guid="_yErvydnmEdmO6L4XMImrsA" >关键设计复审（critical design review）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cgi" name="cgi">CGI</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#common_gateway_interface_cgi" guid="_yB2eNtnmEdmO6L4XMImrsA" ><i>公共网关接口（common gateway interface）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cli" name="cli">CLI</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#call_level_interface_cli" guid="_x9YN4tnmEdmO6L4XMImrsA" >调用级接口（call-level interface）</a>。</i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cm" name="cm">CM</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#configuration_management" guid="_yEPD19nmEdmO6L4XMImrsA" >配置管理（configuration management）</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cobol" name="cobol">COBOL</a></b>
</dt>
<dd>面向商业的通用语言（Common Business Oriented Language）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_com" name="com">COM</a></b>
</dt>
<dd>组件对象模型（Microsoft）。一种来自 DEC 和 Microsoft 的软件体系结构，它允许 ObjectBroker 和 OLE（对象链接与嵌入）之间的相互操作。Microsoft 后来将 COM 发展成了 <i><a  class="elementLink" href="#dcom" guid="_yFRloNnmEdmO6L4XMImrsA" >DCOM</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cookies" name="cookies">Cookies</a></b>
</dt>
<dd>由您的 Web 浏览器根据您所访问的 Web 站点的请求所创建的小文件，浏览器将在随后访问中将该文件的内容发送给相应站点。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_corba" name="corba">CORBA</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#common_object_request_broker_architecture_corba" guid="_yB_oINnmEdmO6L4XMImrsA" ><i>公共对象请求代理体系结构（common object request broker architecture）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_cr" name="cr">CR</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#change_request_cr" guid="_x9050NnmEdmO6L4XMImrsA" ><i>变更请求（change request）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_crc" name="crc">CRC</a></b>
</dt>
<dd>类职责协调程序。这是面向对象开发中的一项技术，最初由 Ward Cunningham 和 Kent Beck 所建议，其目的是帮助定义对象在系统中应做什么（它们的职责），并标识履行这些职责还涉及到的其他对象（协调程序）。该技术在 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >WIR90</a>] 中进行了描述。CRC 卡是一种通过使用普通索引卡来捕获这些结果的方法。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_crupic_stmpl" name="crupic_stmpl">CRUPIC STMPL</a></b>
</dt>
<dd>此首字母缩写代表可同时用在产品需求的定义和产品质量的评估中的类别。它分成两部分，第一部分代表操作类别 － 能力、可靠性、可用性、性能、可安装性和兼容性；第二部分代表开发类别 － 可支持性、可测性、可维护性、可移植性和可本地化性。另请参阅：<i><a  class="elementLink" href="#furps" guid="_yJmE-dnmEdmO6L4XMImrsA" >FURPS</a>+</i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_D" name="D">D</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dasd" name="dasd">DASD</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#direct_access_storage_device_dasd" guid="_yGUuhtnmEdmO6L4XMImrsA" ><i>直接访问存储设备（direct access storage device）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dba" name="dba">DBA</a></b>
</dt>
<dd>数据库管理员（Database administrator）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dbcs" name="dbcs">DBCS</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#double-byte_character_set_dbcs" guid="_yHNfVtnmEdmO6L4XMImrsA" ><i>双字节字符集（double-byte character set）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dbms" name="dbms">DBMS</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#database_management_system_dbms" guid="_yE-qsNnmEdmO6L4XMImrsA" ><i>数据库管理系统（database management system）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dce" name="dce">DCE</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#distributed_computing_environment_dce" guid="_yGd4cNnmEdmO6L4XMImrsA" ><i>分布式计算环境（distributed computing environment）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dcom" name="dcom">DCOM</a></b>
</dt>
<dd>分发式组件对象模型（Microsoft）。Microsoft 对其组件对象模型（COM）的扩展，用于支持分发在整个网络上的对象。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dll" name="dll">DLL</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#dynamically_linked_library_dll" guid="_yHXQUtnmEdmO6L4XMImrsA" ><i>动态链接库（dynamically linked library）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dmz" name="dmz">DMZ</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#demilitarized_zone_dmz" guid="_yFkgkNnmEdmO6L4XMImrsA" ><i>非保护区（de-militarized zone）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_dns" name="dns">DNS</a></b>
</dt>
<dd>请参阅：<a  class="elementLink" href="#domain_name_server" guid="_yHNfUNnmEdmO6L4XMImrsA" >域名服务器（domain name server）</a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_E" name="E">E</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ejb_enterprise_javabean" name="ejb_enterprise_javabean">EJB，Enterprise JavaBean</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#enterprise_javabean_ejb" guid="_yHqLQNnmEdmO6L4XMImrsA" ><i>enterprise javabean</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_enterprise_javabean_ejb" name="enterprise_javabean_ejb">Enterprise JavaBean（EJB）</a></b>
</dt>
<dd>EJB 是一个不可见的远程对象，设计用于在服务器上运行并由客户机调用。EJB 可以从多个不可见的 JavaBean 中构建。EJB 用于在一台计算机上运行，并从另一台计算机上远程调用。它们是独立于平台的。一旦 Bean 编写完成，即可用于支持 Java 的任何客户机或服务器平台。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_erp" name="erp">ERP</a></b>
</dt>
<dd>企业资源规划</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_F" name="F">F</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ftp" name="ftp">FTP</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#file_transfer_protocol_ftp" guid="_yJTKBtnmEdmO6L4XMImrsA" ><i>文件传输协议（file transfer protocol）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_furps" name="furps">FURPS</a></b>
</dt>
<dd>功能、可用性、可靠性、性能、可支持性以及其他。此首字母缩写在 [<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="ory_doc" guid="7.755968586980351E-308" >GRA92</a>] 中描述，它代表可同时用在产品需求定义以及产品质量评估中的类别。也可使用备用分类方法。请参阅：<i><a  class="elementLink" href="#crupic_stmpl" guid="_yE05sNnmEdmO6L4XMImrsA" >CRUPIC STMPL</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_G" name="G">G</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_gui" name="gui">GUI</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#graphical_user_interface_gui" guid="_yJv1-dnmEdmO6L4XMImrsA" ><i>图形用户界面（graphical user interface）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_H" name="H">H</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_hotjava" name="hotjava">HotJava</a></b>
</dt>
<dd>由 Sun Microsystems, Inc. 开发的支持 Java 的 Web 和 intranet 浏览器。HotJava 是用 Java 编写的。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_html" name="html">HTML</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#hypertext_markup_language_html" guid="_yKMh5tnmEdmO6L4XMImrsA" >超文本标记语言（hypertext markup language）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_html_browser" name="html_browser">HTML 浏览器（HTML browser）</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#web_browser" guid="_yb7LEdnmEdmO6L4XMImrsA" >Web 浏览器（web browser）</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_http" name="http">HTTP</a></b>
</dt>
<dd>超文本传输协议（Hypertext transport protocol）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_http_request" name="http_request">HTTP 请求（HTTP request）</a></b>
</dt>
<dd>通过 Web 浏览器启动的事务，它遵循 HTTP。服务器通常以 HTML 数据做出响应，但也可以发送其他类型的对象。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_I" name="I">I</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_i_t" name="i_t">I/T</a></b>
</dt>
<dd>信息技术</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ide" name="ide">IDE</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#integrated_development_environment_ide" guid="_yLF5xtnmEdmO6L4XMImrsA" >集成开发环境（integrated development environment）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ie" name="ie">IE</a></b>
</dt>
<dd>Internet explorer（Microsoft）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ieee" name="ieee">IEEE</a></b>
</dt>
<dd>电气电子工程师学会（Institute of Electrical and Electronics Engineers, Inc.）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_iiop" name="iiop">IIOP</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#internet_inter-orb_protocol_iiop" guid="_yLY0ttnmEdmO6L4XMImrsA" >因特网 ORB 间协议（internet inter-ORB protocol）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_imap4" name="imap4">IMAP4</a></b>
</dt>
<dd>Internet 消息访问协议 － 第 4 版（Internet Message Access Protocol - version 4）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ip" name="ip">IP</a></b>
</dt>
<dd>请参阅：<a  class="elementLink" href="#internet_protocol" guid="_yLY0udnmEdmO6L4XMImrsA" >因特网协议（Internet Protocol）</a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ip_number" name="ip_number">IP 号码（IP number）</a></b>
</dt>
<dd>以唯一号码表示的 IP 地址，由四个以圆点分隔的部分组成（有时称为四元组），例如 123.45.67.8。每台 Internet 计算机都有一个 IP 号码，而且多数计算机还具备一个或多个作为点分四元组映射或别名的域名。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_internet_protocol_address" name="internet_protocol_address">IP 地址（Internet protocol address）</a></b>
</dt>
<dd>一个数字地址，可唯一标识每台连接到网络的计算机。例如 123.45.67.8。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ip_security_protocol_ipsec" name="ip_security_protocol_ipsec">IP 安全协议（IP Security Protocol，IPSec）</a></b>
</dt>
<dd>提供网络层上的加密安全服务。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ipsec" name="ipsec">IPSec</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#ip_security_protocol_ipsec" guid="_yLrvo9nmEdmO6L4XMImrsA" ><i>IP 安全协议（IP security protocol）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_isapi" name="isapi">ISAPI</a></b>
</dt>
<dd>Internet 服务器 <i><a  class="elementLink" href="#api" guid="_x6_oQNnmEdmO6L4XMImrsA" >API</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_iso" name="iso">ISO</a></b>
</dt>
<dd>国际标准化组织。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_isp" name="isp">ISP</a></b>
</dt>
<dd>Internet 服务提供商。一种公司，它向其他公司或个人提供 Internet 的访问权或驻留权。大多数 ISP 同时也是 IAP（Internet 访问提供商）。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_J" name="J">J</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jar" name="jar">JAR</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#java_archive" guid="_yL1grNnmEdmO6L4XMImrsA" ><i>Java 归档（java archive，JAR）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_java" name="java">Java</a></b>
</dt>
<dd>Java 是由 Sun Microsystems 开发的一种编程语言，采用 Java 的独特设计编写的程序可通过 Internet 安全下载到您的计算机上并立即运行，而无需担心计算机或文件会受到病毒感染或遭受其他损害。使用称作 Applet 的 Java 小程序，可以为 Web 页增添诸多功能，如：动画、计算器和其他别致的东西。使用 Java 可以大大扩展 Web 的功能，因为您编写的 Java 程序几乎可以完成常规计算机程序所能完成的一切任务，然后还能将其纳入 Web 页中。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_java_development_kit_jdk" name="java_development_kit_jdk">Java Development Kit（JDK）</a></b>
</dt>
<dd>Java Development Kit 对于得到 Sun Microsystems 许可的开发人员可用。JDK 的每个发行版都包含如下内容：Java 编译器、Java 虚拟机、Java 类库、Java Applet 查看器、Java 调试器以及其他工具。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_java_foundation_classes_jfc" name="java_foundation_classes_jfc">Java 基础类（Java Foundation Class，JFC）</a></b>
</dt>
<dd>JFC 由 Netscape、Sun 和 IBM 共同开发，是有助于开发 Java 应用程序接口的构建块。它们使得 Java 应用程序得以更全面地与现有操作系统进行交互。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_java_archive" name="java_archive">Java 归档（java archive）</a></b>
</dt>
<dd>一种独立于平台的文件格式，它可将许多文件归为一组。JAR 文件用于压缩、缩短下载时间和确保安全性。JAR 格式是以 Java 编写的，因而 JAR 文件完全可扩展。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_java_database_connectivity_jdbc" name="java_database_connectivity_jdbc">Java 数据库连接（Java Database Connectivity，JDBC）</a></b>
</dt>
<dd>JDK 1.1 中的规范，它定义了使程序能够访问符合该标准的数据库的 API。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_javabean" name="javabean">JavaBean</a></b>
</dt>
<dd>javabean 是一种组件，它可与其他单独开发的 Bean 一同集成到应用程序中。这一应用程序可在浏览器内独立使用，还可用作 ActiveX 组件。对单个进程而言，JavaBean 应在本地运行，而且通常在运行时可见。例如，这一可视组件可以是按钮、列表框、图形或图表。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jdbc" name="jdbc">JDBC</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#java_database_connectivity_jdbc" guid="_yL-qkNnmEdmO6L4XMImrsA" >Java 数据库连接（Java database connectivity）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jdk" name="jdk">JDK   </a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#java_development_kit_jdk" guid="_yL-qk9nmEdmO6L4XMImrsA" ><i>Java Development Kit</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jfc" name="jfc">JFC</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#java_foundation_classes_jfc" guid="_yL-qltnmEdmO6L4XMImrsA" ><i>Java 基础类（Java foundation class）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jit" name="jit">JIT</a></b>
</dt>
<dd>零库存。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_jvm" name="jvm">JVM</a></b>
</dt>
<dd>Java 虚拟机。一种软件规范，它将已经编译的 Java 程序合并到字节代码中，且通常存储在“<code>.class</code>”文件中。JVM 本身是用 C 语言写的，因此可移植到大多数平台上运行。JVM 指令集是面向堆栈的，具有可变指令长度。与一些其他指令集不同，JVM 通过包含对象方法调用的指令（类似于其他指令集中的子例程调用）而直接支持面向对象编程。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_L" name="L">L</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_lan" name="lan">LAN</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#local_area_network_lan" guid="_yM4CctnmEdmO6L4XMImrsA" ><i>局域网（local area network）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ldap" name="ldap">LDAP</a></b>
</dt>
<dd>轻量级目录访问协议。LDAP 是用于访问联机目录服务的协议，它定义了一个相对简单的协议，以更新和搜索在 <i><a  class="elementLink" href="#tcp_ip" guid="_yXmrw9nmEdmO6L4XMImrsA" >TCP/IP</a></i> 上运行的目录。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_M" name="M">M</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mib" name="mib">MIB</a></b>
</dt>
<dd>管理信息库（Management Information Base）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mime" name="mime">MIME</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#multipurpose_internet_mail_extension_mime" guid="_yN6kRtnmEdmO6L4XMImrsA" ><i>多用途因特网邮件扩充协议（multipurpose internet mail extension）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_model_driven_architecture" name="model_driven_architecture">Model Driven Architecture</a></b>
</dt>
<dd>[<a  class="elementLinkWithUserText" href="../core.base_rup/customcategories/references_56F06DFD.html" target="_blank" guid="7.755968586980351E-308" >OMG03</a>] 将其定义为：<blockquote> “制定 IT 系统规范的一种方法，该规范将功能的规范与功能在特定技术平台上的实施规范分离开来。” </blockquote></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mof" name="mof">MOF</a></b>
</dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> OMG 定义的一种技术：元对象设施（MOF）规范定义一组 CORBA IDL 接口，这些接口可用来定义和操纵一组能互相操作的元模型以及它们相应的模型。这些能互相操作的元模型包括 UML 元模型、MOF 元-元模型，以及将来采用 OMG 的技术，这些技术将通过使用元模型指定。MOF 提供用于实施基于 CORBA 的设计和重用存储库的基础结构。此定义取自 MOF 规范的版本 1.3。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mom" name="mom">MOM</a></b>
</dt>
<dd>面向消息的中间件（Message-oriented middleware）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mutator_methods" name="mutator_methods">mutator 方法（mutator method）</a></b>
</dt>
<dd>对象提供的方法，用于定义其实例变量的接口。用于返回实例变量值的存取器方法称为获取方法或获取器方法；用于为实例变量赋值的存取器方法称为设置方法或设置器方法。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mvc" name="mvc">MVC</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#model_view_controller" guid="_yNnpWNnmEdmO6L4XMImrsA" >模型视图控制器（Model View Controller）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_mvs" name="mvs">MVS</a></b>
</dt>
<dd>多重虚拟存储器（Multiple virtual storage）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_N" name="N">N</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_nc" name="nc">NC</a></b>
</dt>
<dd>网络计算机或网络计算</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ncf" name="ncf">NCF</a></b>
</dt>
<dd>网络计算框架</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_nsapi" name="nsapi">NSAPI</a></b>
</dt>
<dd>Netscape 服务器 API</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_nt" name="nt">NT</a></b>
</dt>
<dd>Windows NT（NT 表示新技术）</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_O" name="O">O</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_odbc" name="odbc">ODBC</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#open_database_connectivity_odbc" guid="_yPQoENnmEdmO6L4XMImrsA" >开放式数据库连接标准（open database connectivity）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_odbc_driver_manager" name="odbc_driver_manager">ODBC 驱动程序管理器（ODBC Driver Manager）</a></b>
</dt>
<dd>ODBC 驱动程序管理器由 Microsoft 提供，它是一种带有导入库的 DLL。该驱动程序管理器的主要目的是装入 ODBC 驱动程序。该驱动程序管理器还为每个驱动程序提供 ODBC 函数入口点，并为 ODBC 调用提供参数验证和序列验证。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_odbc_driver" name="odbc_driver">ODBC 驱动程序（ODBC Driver）</a></b>
</dt>
<dd>ODBC 驱动程序是一种动态链接库（DLL），它实现 ODBC 函数调用并与数据源进行交互。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_oltp" name="oltp">OLTP</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#online_transaction_processing_oltp" guid="_yPG3FdnmEdmO6L4XMImrsA" >联机事务处理（online transaction processing）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_omg" name="omg">OMG</a></b>
</dt>
<dd>Object Management Group</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_oo" name="oo">OO</a></b>
</dt>
<dd>面向对象。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_oop" name="oop">OOP</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#object-oriented_programming_oop" guid="_yO9tINnmEdmO6L4XMImrsA" >面向对象程序设计（object-oriented programming）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_orb" name="orb">ORB</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#object_request_broker_orb" guid="_yOz8IdnmEdmO6L4XMImrsA" >对象请求代理（object request broker）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_P" name="P">P</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pco" name="pco">PCO</a></b>
</dt>
<dd>请参阅：<a  class="elementLink" href="#point_of_control_and_observation" guid="_yQc64NnmEdmO6L4XMImrsA" >控制和观察点（point of control and observation）</a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pdr" name="pdr">PDR</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#preliminary_design_review_pdr" guid="_yQmr5tnmEdmO6L4XMImrsA" ><i>初步设计复审（preliminary design review）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_perl" name="perl">PERL</a></b>
</dt>
<dd>实际抽取与报告语言。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pgp" name="pgp">PGP</a></b>
</dt>
<dd>相当好的隐私保密性。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pki" name="pki">PKI</a></b>
</dt>
<dd>公用密钥基础结构。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pop3" name="pop3">POP3</a></b>
</dt>
<dd>邮局协议 3</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_pra" name="pra">PRA</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#project_review_authority_pra" guid="_yRMhydnmEdmO6L4XMImrsA" >项目复审委员会（project review authority）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_prd" name="prd">PRD</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#product_requirements_document_prd" guid="_yRMhwNnmEdmO6L4XMImrsA" >产品需求文档（product requirements document）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_private" name="private">private</a></b>
</dt>
<dd>与类成员相关联的存取权限。它只允许该类本身访问此成员。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_protected" name="protected">protected</a></b>
</dt>
<dd>与类成员相关联的存取权限。它允许该类本身、子类和同一包中的所有类访问此成员。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_Q" name="Q">Q</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_qa" name="qa">QA</a></b>
</dt>
<dd>请参阅：<a  class="elementLink" href="#quality_assurance" guid="_ySPqoNnmEdmO6L4XMImrsA" >质量保证（quality assurance）</a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_qe" name="qe">QE</a></b>
</dt>
<dd>质量工程。另请参阅：<i><a  class="elementLink" href="#quality_assurance" guid="_ySPqoNnmEdmO6L4XMImrsA" >质量保证（quality assurance）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_R" name="R">R</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rdbms" name="rdbms">RDBMS</a></b>
</dt>
<dd>关系数据库管理系统。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rfc" name="rfc">RFC</a></b>
</dt>
<dd>（1）变更请求。买方或卖方请求为变更的工程变更建议花费合同基金。请求陈述要解决的技术或合同问题、对项目的影响或益处以及成本和调度影响的评估。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rfi" name="rfi">RFI</a></b>
</dt>
<dd>信息请求。对市场信息的正式查询，通常包含承包方要承担的“兴趣表达”、容量、能力和可用性，以及对请求书中所描述工作的投标。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rfp" name="rfp">RFP</a></b>
</dt>
<dd>建议请求。正式的邀请，其中包括一些寻找正式响应（建议）的工作，该响应描述方法和补偿，以组成合同的基础。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rfq" name="rfq">RFQ</a></b>
</dt>
<dd>报价请求。正式的邀请，邀请对方提交指定的货物和／或服务的价格。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rmi" name="rmi">RMI</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#remote_method_invocation_rmi" guid="_yTSMctnmEdmO6L4XMImrsA" >远程方法调用（remote method invocation）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rmi_registry" name="rmi_registry">RMI 注册程序（RMI registry）</a></b>
</dt>
<dd>一个服务器程序，允许远程客户机获得对服务器 Bean 的引用。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rmi_compiler" name="rmi_compiler">RMI 编译器（RMI compiler）</a></b>
</dt>
<dd>生成为 RMI 通信提供帮助的桩模块和框架文件的编译器。该编译器可从“工具”菜单项自动调用。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rpc" name="rpc">RPC</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#remote_procedure_call_rpc" guid="_yTb9cNnmEdmO6L4XMImrsA" ><i>远程过程调用（remote procedure call）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rsa" name="rsa">RSA</a></b>
</dt>
<dd>Rivest-Shamir-Adleman 算法</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_rup" name="rup">RUP</a></b>
</dt>
<dd>Rational Unified Process</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_S" name="S">S</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_s_mime" name="s_mime">S/MIME</a></b>
</dt>
<dd>安全 MIME</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_sap" name="sap">SAP</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#systems_applications_and_products" guid="_yXTw1tnmEdmO6L4XMImrsA" >系统、应用及产品（SAP）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_sepa" name="sepa">SEPA</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#software_engineering_process_authority_sepa" guid="_yV0jGNnmEdmO6L4XMImrsA" ><i>软件工程流程管理委员会（software engineering process authority）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_servlets" name="servlets">Servlets</a></b>
</dt>
<dd>Servlet 是为响应浏览器请求而在服务器上执行的 Java 对象。它们可以直接生成 HTML 或 XML，也可以调用 JSP 生成输出。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_set" name="set">SET</a></b>
</dt>
<dd>安全电子交易</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_shttp" name="shttp">SHTTP</a></b>
</dt>
<dd>安全超文本传输协议</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_smtp" name="smtp">SMTP</a></b>
</dt>
<dd>简单邮件传输协议</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_snmp" name="snmp">SNMP</a></b>
</dt>
<dd>简单网络管理协议</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_socks" name="socks">SOCKS</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#socket_secure_socks" guid="_yVqyGNnmEdmO6L4XMImrsA" >套接字安全（socket secure）</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_sql" name="sql">SQL</a></b>
</dt>
<dd>结构化查询语言。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_srr" name="srr">SRR</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#system_requirements_review_srr" guid="_yXTw09nmEdmO6L4XMImrsA" >系统需求复审（system requirements review）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_srs" name="srs">SRS</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#software_requirements_specifications_srs" guid="_yV9tANnmEdmO6L4XMImrsA" >软件需求规范（software requirements specification）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ssl" name="ssl">SSL</a></b>
</dt>
<dd>安全套接字层。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ssr" name="ssr">SSR</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#software_specification_review_ssr" guid="_yV9tA9nmEdmO6L4XMImrsA" >软件规范复审（Software Specification Review）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_T" name="T">T</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_tcp" name="tcp">TCP</a></b>
</dt>
<dd><i><a  class="elementLinkWithUserText" href="#protocol_tcp_ip" guid="_yRfcttnmEdmO6L4XMImrsA" >传输控制协议（Transmission Control Protocol）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_tcp_ip" name="tcp_ip">TCP/IP</a></b>
</dt>
<dd><i><a  class="elementLinkWithUserText" href="#protocol_tcp_ip" guid="_yRfcttnmEdmO6L4XMImrsA" >传输控制协议／因特网协议（Transmission Control Protocol/Internet Protocol）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_telnet" name="telnet">Telnet</a></b>
</dt>
<dd>美国国防部虚拟终端协议。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_U" name="U">U</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_ui" name="ui">UI</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLink" href="#user_interface" guid="_ybLkPNnmEdmO6L4XMImrsA" >用户接口（user interface）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_uma" name="uma">UMA</a></b>
</dt>
<dd>表示 &nbsp;Unified Method&nbsp;Architecture。UMA 是一种用于构思、指定和存储方法以及流程元数据的最新体系结构。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_uml" name="uml">UML</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#unified_modeling_language_uml" guid="_yZilcNnmEdmO6L4XMImrsA" >统一建模语言（unified modeling language）</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_uml_profile" name="uml_profile">UML 概要文件（UML profile）</a></b>
</dt>
<dd><a  class="elementLinkWithUserText" href="#uml" guid="_yZZbhtnmEdmO6L4XMImrsA" ><img border="0" src="./../core.base_rup/customcategories/resources/uml.gif" alt="UML 图标" width="13" height="16" /></a> 对 UML 元模型的一组扩展，通过使用构造型、约束、标记定义以及标注值来指定如何定制特定的 UML 模型元素，以及如何通过新语义进行扩展。为特定目的定义的这样一组一致的扩展就组成了一个 UML 概要文件。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_unicode" name="unicode">Unicode</a></b>
</dt>
<dd>一种字符编码系统，可用于转换、处理和显示用当今世界的多种语言书写的文本。统一编码字符通常使用 16 位无符号整数来进行编码。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_url" name="url">URL</a></b>
</dt>
<dd>请参阅：<i><a  class="elementLinkWithUserText" href="#uniform_resource_locator_url" guid="_yZsWcNnmEdmO6L4XMImrsA" >统一资源定位符（uniform resource locator）</a></i>。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_V" name="V">V</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_vb" name="vb">VB</a></b>
</dt>
<dd>Visual Basic（<i><a  class="elementLink" href="#basic" guid="_x75AJtnmEdmO6L4XMImrsA" >basic</a></i> 的特殊版本）编程语言及关联的 <i><a  class="elementLink" href="#ide" guid="_yKMh7NnmEdmO6L4XMImrsA" >IDE</a></i>，由 Microsoft 创建。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_vm" name="vm">VM</a></b>
</dt>
<dd>请参阅：<a  class="elementLinkWithUserText" href="#virtual_machine_vm" guid="_yboQI9nmEdmO6L4XMImrsA" ><i>虚拟机（virtual machine）</i></a></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_vpn" name="vpn">VPN</a></b>
</dt>
<dd>虚拟专用网（Virtual private network）。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_W" name="W">W</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_web_application" name="web_application">Web 应用程序（Web application）</a></b>
</dt>
<dd>将 Internet 用作系统用户和系统之间主要通信手段的系统。另请参阅：<i><a  class="elementLinkWithUserText" href="#web_system" guid="_yb7LGtnmEdmO6L4XMImrsA" >Web 系统（web system）。</a></i></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_web_server" name="web_server">Web 服务器（Web server）</a></b>
</dt>
<dd>万维网的服务器组件。它负责为来自 Web 浏览器的信息处理服务请求。请求信息既可以是从服务器的本地磁盘上检索得到的文件，也可以是服务器通过调用程序来执行特定应用程序功能而生成的文件。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_web_browser" name="web_browser">Web 浏览器（Web browser）</a></b>
</dt>
<dd>在客户机上运行的软件，用户使用它可以发出请求并呈现 <i><a  class="elementLink" href="#html" guid="_yKCw4NnmEdmO6L4XMImrsA" >HTML</a></i> 页面。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_web_site" name="web_site">Web 站点（Web site）</a></b>
</dt>
<dd>所有内容都在一个服务器上的 <i><a  class="elementLink" href="#web_system" guid="_yb7LGtnmEdmO6L4XMImrsA" >web 系统</a></i>。 用户使用浏览器来浏览 Web 站点。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_web_system" name="web_system">Web 系统（Web system）</a></b>
</dt>
<dd>包含多个信息页的超级媒体系统，这些信息页通过图形形式互相链接，而不采用分层或线性形式。Web 系统本身就是一个可以通过浏览器访问的 Web 服务器。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_windows_registry" name="windows_registry">Windows 注册表（Windows registry）</a></b>
</dt>
<dd>Microsoft(R) Windows(R) 注册数据库，用来存储安装在给定 PC 上的软件程序的配置设置和用户选项。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_wysiwyg" name="wysiwyg">WYSIWYG</a></b>
</dt>
<dd>所见即所得。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_X" name="X">X</a></b>
</dt>
<dd></dd>
<dt>
<b><a id="_GLOSSARY_ITEM_xml" name="xml">XML</a></b>
</dt>
<dd>可扩展标记语言。</dd>
<dt>
<b><a id="_GLOSSARY_ITEM_xp" name="xp">XP</a></b>
</dt>
<dd>Extreme Programming。</dd>

</dl>
</font>
</body>
</html>
